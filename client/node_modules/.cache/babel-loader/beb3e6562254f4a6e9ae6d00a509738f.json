{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/navigation.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { slide as Menu } from \"react-burger-menu\";\nimport Dropdown from 'react-bootstrap/DropDown';\nimport { FaAngleDown } from 'react-icons/fa';\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: \"top\",\n      pageInfo: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/getPageInfo').then(response => {\n      this.setState({\n        pageInfo: response.data\n      });\n    });\n  }\n\n  render() {\n    if (this.state.style = \"slideIn\") {\n      return null;\n    } else if (this.state.style = \"sidebarFixed\") {\n      const createLinks = this.state.pageInfo.map(page => /*#__PURE__*/React.createElement(Link, {\n        key: page._id,\n        to: `/${page.title.replace(/\\s+/g, '')}`,\n        className: \"navbar-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }\n      }, page.title));\n      return null;\n    } else if (this.state.style = \"sidebarCollapsable\") {\n      const createLinks = this.state.pageInfo.map(page => /*#__PURE__*/React.createElement(Link, {\n        key: page._id,\n        to: `/${page.title.replace(/\\s+/g, '')}`,\n        className: \"navbar-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 8\n        }\n      }, page.title));\n      return /*#__PURE__*/React.createElement(DropDownMenu, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 4\n        }\n      }), createLinks, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.props.showContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }\n      }, \"Contact\"));\n    } else if (this.state.style = \"dropdown\") {\n      const createLinks = this.state.pageInfo.map(page => /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        key: page._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/${page.title.replace(/\\s+/g, '')}`,\n        className: \"navbar-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 46\n        }\n      }, page.title)));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: \"Dropdown button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 8\n        }\n      }), /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 10\n        }\n      }, \"Dropdown Button\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, createLinks, /*#__PURE__*/React.createElement(Dropdown.Item, {\n        as: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.props.showContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, \"Contact\")))));\n    } else {\n      const createSubLink = childId => {\n        this.state.pageInfo.forEach(page => {\n          if (page._id === childId) {\n            return /*#__PURE__*/React.createElement(Link, {\n              className: \"user-dropwdown-link\",\n              to: `/${page.title.replace(/\\s+/g, '')}`,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 20\n              }\n            }, \"page.title}\");\n          }\n        });\n      };\n\n      const createLinks = this.state.pageInfo.sort((a, b) => a.index - b.index).map(page => {\n        if (page.children) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: page._id,\n            className: \"navbar-link dropdown\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 22\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"user-navbar-link dropbtn\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }\n          }, page.title, \" \", /*#__PURE__*/React.createElement(FaAngleDown, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 74\n            }\n          })), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"dropdown-content\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }\n          }, \"page.children.map((childId)=> createSubLink(childId) )\"));\n        } else if (page.parent) {\n          return null;\n        } else {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: page._id,\n            className: \"navbar-link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 20\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: `/${page.title.replace(/\\s+/g, '')}`,\n            className: \"navbar-link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 63\n            }\n          }, page.title));\n        }\n      });\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"navbar-links\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"navbar-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/',\n        className: \"navbar-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 45\n        }\n      }, \"Home\")), createLinks, /*#__PURE__*/React.createElement(\"li\", {\n        key: \"contact\",\n        className: \"navbar-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navbar-link\",\n        onClick: this.showContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 59\n        }\n      }, \"Contact\")))));\n    }\n  }\n\n}\nconst MenuContainer = styled(\"div\")`\n  display: ${p => p.show ? \"flex\" : \"none\"};\n  min-width: 150px;\n  position: absolute;\n  z-index: 1000;\n  flex-direction: column;\n  border: 1px solid #e5e5e5;\n  background-color: white;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n`;\nconst createLinks = this.state.pageInfo.map(page => /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  onClick: onClose,\n  className: \"text-left hover:bg-brand-100 px-6 py-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Link, {\n  to: `/${page.title.replace(/\\s+/g, '')}`,\n  className: \"navbar-link\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }\n}, page.title)));\n\nconst DropDownMenu = ({\n  role\n}) => {\n  const {\n    show,\n    onClose,\n    props\n  } = useDropdownMenu({\n    flip: true,\n    offset: [0, 8]\n  });\n  return /*#__PURE__*/React.createElement(MenuContainer, Object.assign({}, props, {\n    role: role,\n    show: show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClose,\n    className: \"text-left hover:bg-brand-100 px-6 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Item 1\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClose,\n    className: \"text-left hover:bg-brand-100 px-6 py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Item 2\"));\n};\n\nconst Toggle = ({\n  id,\n  children\n}) => {\n  const [props, {\n    show,\n    toggle\n  }] = useDropdownToggle();\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: \"btn\",\n    id: id\n  }, props, {\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nconst [show, setShow] = useState(false);\n\nconst DropdownButton = ({\n  show,\n  onToggle,\n  drop,\n  alignEnd,\n  title,\n  role\n}) => /*#__PURE__*/React.createElement(Dropdown, {\n  show: show,\n  onToggle: onToggle,\n  drop: drop,\n  alignEnd: alignEnd,\n  itemSelector: \"button:not(:disabled)\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 3\n  }\n}, ({\n  props\n}) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n  className: \"relative inline-block\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Toggle, {\n  id: \"example-toggle\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }\n}, title), /*#__PURE__*/React.createElement(DropDownMenu, {\n  role: role,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }\n})));\n\n/*#__PURE__*/\nReact.createElement(DropdownButton, {\n  show: show,\n  onToggle: nextShow => setShow(nextShow),\n  title: '&#x2261',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 3\n  }\n});","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/navigation.js"],"names":["React","Component","Link","axios","slide","Menu","Dropdown","FaAngleDown","Navigation","constructor","props","state","style","pageInfo","componentDidMount","get","then","response","setState","data","render","createLinks","map","page","_id","title","replace","showContact","createSubLink","childId","forEach","sort","a","b","index","children","parent","MenuContainer","styled","p","show","onClose","DropDownMenu","role","useDropdownMenu","flip","offset","Toggle","id","toggle","useDropdownToggle","setShow","useState","DropdownButton","onToggle","drop","alignEnd","nextShow"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport axios from 'axios';\nimport { slide as Menu } from \"react-burger-menu\";\nimport Dropdown from 'react-bootstrap/DropDown';\nimport {FaAngleDown} from 'react-icons/fa';\n\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tstyle:\"top\",\n    \tpageInfo:[]\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/getPageInfo').then((response) => {\n      this.setState({pageInfo:response.data});\n    });\n  }\n\n  render(){\n\n\n    if (this.state.style=\"slideIn\"){\n      return null;\n    } else if (this.state.style=\"sidebarFixed\"){\n    \tconst createLinks = this.state.pageInfo.map((page) => \n\t      <Link key={page._id} to={`/${page.title.replace(/\\s+/g, '')}`} className='navbar-link'>{page.title}</Link>\n\t    );\n\n    \treturn null;\n    } else if (this.state.style=\"sidebarCollapsable\"){\n    \tconst createLinks = this.state.pageInfo.map((page) => \n\t      <Link key={page._id} to={`/${page.title.replace(/\\s+/g, '')}`} className='navbar-link'>{page.title}</Link>\n\t    );\n    \treturn(\n\t\t\t<DropDownMenu {...this.props}>\n\t\t\t  { createLinks }\n             <div onClick={ this.props.showContact } >Contact</div>\n\t\t\t</DropDownMenu>\n    \t);\n    } else if (this.state.style=\"dropdown\"){\n    \t\n    \tconst createLinks = this.state.pageInfo.map((page) => \n\t\t\t<Dropdown.Item as=\"button\" key={page._id}><Link to={`/${page.title.replace(/\\s+/g, '')}`} className='navbar-link'>{page.title}</Link></Dropdown.Item>\n\t    );\n\n    \treturn(\n        <div>\n    \t\t\t<DropdownButton id=\"dropdown-item-button\" title=\"Dropdown button\">\n    \t\t\t</DropdownButton>\n\n    \t\t\t<Dropdown>\n    \t\t\t  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n    \t\t\t    Dropdown Button\n    \t\t\t  </Dropdown.Toggle>\n\n    \t\t\t\t<Dropdown.Menu>\n                \t\t{ createLinks }\n    \t\t\t\t\t<Dropdown.Item as=\"button\"><div onClick={ this.props.showContact } >Contact</div></Dropdown.Item>\n    \t\t\t\t</Dropdown.Menu>\n    \t\t\t</Dropdown>\n        </div>\n\n    \t);\n    } else {\n      const createSubLink = (childId) => {\n        this.state.pageInfo.forEach((page)=>{\n          if (page._id===childId){\n            return <Link className=\"user-dropwdown-link\" to={`/${page.title.replace(/\\s+/g, '')}`}>page.title}</Link>\n          }\n        })\n      }\n\n      const createLinks = this.state.pageInfo.sort((a,b) => a.index - b.index).map((page) => {\n          if (page.children){\n             return (<li key={page._id} className='navbar-link dropdown'>\n                  <div className='user-navbar-link dropbtn'>{page.title} <FaAngleDown /></div>\n                  <div className='dropdown-content'>\n                    page.children.map((childId)=>\n                      createSubLink(childId)\n                    )\n                  </div>\n                </li>\n              )\n          } else if (page.parent){\n              return null;\n          } else {\n            return <li key={page._id} className='navbar-link'><Link to={`/${page.title.replace(/\\s+/g, '')}`} className='navbar-link'>{page.title}</Link></li>\n          }\n        }\n      );\n\n    \treturn(\n          <ErrorBoundary>\n            <div className='navbar'>\n              <ul className='navbar-links'>\n                <li className='navbar-link'><Link to={'/'} className='navbar-link'>Home</Link></li>\n                { createLinks }\n                <li key='contact' className='navbar-link'><div className='navbar-link' onClick={ this.showContact } >Contact</div></li>\n              </ul>\n            </div>\n          </ErrorBoundary >\n        );\n    }\n  }\n\n\n}\n\nconst MenuContainer = styled(\"div\")`\n  display: ${(p) => (p.show ? \"flex\" : \"none\")};\n  min-width: 150px;\n  position: absolute;\n  z-index: 1000;\n  flex-direction: column;\n  border: 1px solid #e5e5e5;\n  background-color: white;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n`;\n\n\n\nconst createLinks = this.state.pageInfo.map((page) => \n\t<button\n        type=\"button\"\n        onClick={onClose}\n        className=\"text-left hover:bg-brand-100 px-6 py-2\"\n      >\n        <Link to={`/${page.title.replace(/\\s+/g, '')}`} className='navbar-link'>{page.title}</Link>\n    </button>\n);\n\nconst DropDownMenu = ({ role }) => {\n  const { show, onClose, props } = useDropdownMenu({\n    flip: true,\n    offset: [0, 8],\n  });\n  return (\n    <MenuContainer {...props} role={role} show={show}>\n      <button\n        type=\"button\"\n        onClick={onClose}\n        className=\"text-left hover:bg-brand-100 px-6 py-2\"\n      >\n        Item 1\n      </button>\n      <button\n        type=\"button\"\n        onClick={onClose}\n        className=\"text-left hover:bg-brand-100 px-6 py-2\"\n      >\n        Item 2\n      </button>\n    </MenuContainer>\n  );\n};\n\nconst Toggle = ({ id, children }) => {\n  const [props, { show, toggle }] = useDropdownToggle();\n  return (\n    <button\n      type=\"button\"\n      className=\"btn\"\n      id={id}\n      {...props}\n      onClick={toggle}\n    >\n      {children}\n    </button>\n  );\n};\n\n\nconst [show, setShow] = useState(false);\n\nconst DropdownButton = ({\n  show,\n  onToggle,\n  drop,\n  alignEnd,\n  title,\n  role,\n}) => (\n  <Dropdown\n    show={show}\n    onToggle={onToggle}\n    drop={drop}\n    alignEnd={alignEnd}\n    itemSelector=\"button:not(:disabled)\"\n  >\n    {({ props }) => (\n      <div {...props} className=\"relative inline-block\">\n        <Toggle id=\"example-toggle\">{title}</Toggle>\n        <DropDownMenu role={role} />\n      </div>\n    )}\n  </Dropdown>\n);\n\n\n  <DropdownButton\n    show={show}\n    onToggle={(nextShow) => setShow(nextShow)}\n    title={ '&#x2261' }\n  />\n\n\n"]},"metadata":{},"sourceType":"module"}