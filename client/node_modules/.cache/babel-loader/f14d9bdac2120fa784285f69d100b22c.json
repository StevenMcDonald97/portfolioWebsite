{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js\";\n// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DefaultImg from '../profileimages/default-image.png';\nconst API_URL = \"../../../../routes\";\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      multerImage: DefaultImg,\n      firebaseImage: DefaultImg,\n      baseImage: DefaultImg\n    };\n  }\n\n  setDefaultImage(uploadType) {\n    if (uploadType === \"multer\") {\n      this.setState({\n        multerImage: DefaultImg\n      });\n    } else if (uploadType === \"firebase\") {\n      this.setState({\n        firebaseImage: DefaultImg\n      });\n    } else {\n      this.setState({\n        baseImage: DefaultImg\n      });\n    }\n  }\n\n  uploadImage(filee) {\n    let imageObj = {};\n    let imageFormObj = new FormData(); // TODO have url set properly\n\n    imageFormObj.append(\"imageUrl\", file);\n    imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\n    imageFormObj.append(\"imageDate\", \"\");\n    imageFormObj.append(\"imageSize\", \"\");\n    imageFormObj.append(\"imageMedium\", \"\");\n    imageFormObj.append(\"imagePortfolio\", \"\");\n    this.setState({\n      multerImage: URL.createObjectURL(file)\n    });\n    axios.post(`${API_URL}/image/uploadmulter`, imageFormObj).then(data => {\n      if (data.data.success) {\n        alert(\"Image has been succesfully uploaded using multer\");\n        this.setDefaultImage(\"multer\");\n      }\n    }).catch(err => {\n      alert(\"Error while uploading image\");\n      this.setDefaultImage(\"multer\");\n    });\n  }\n\n  uploadAllImages(e, method) {\n    e.target.files;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-upload-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"main-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    }, \" Upload Images \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"uploadForm\",\n      enctype: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"process_details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 8\n      }\n    }, \"Upload images to your portfolio(s)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"process_upload-btn\",\n      onChange: e => this.uploadAllImages(e),\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.multerImage,\n      alt: \"upload-image\",\n      className: \"process_image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js"],"names":["React","Component","axios","DefaultImg","API_URL","Contact","constructor","props","state","multerImage","firebaseImage","baseImage","setDefaultImage","uploadType","setState","uploadImage","filee","imageObj","imageFormObj","FormData","append","file","Date","now","URL","createObjectURL","post","then","data","success","alert","catch","err","uploadAllImages","e","method","target","files","render"],"mappings":"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","sourcesContent":["// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DefaultImg from '../profileimages/default-image.png'\n\nconst API_URL = \"../../../../routes\"\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmulterImage : DefaultImg,\n\t\t\tfirebaseImage: DefaultImg,\n\t\t\tbaseImage: DefaultImg\n\t\t}\n\t}\n\n\tsetDefaultImage(uploadType){\n\t\tif (uploadType === \"multer\") {\n\t\t\tthis.setState({\n\t\t\t\tmulterImage: DefaultImg\n\t\t\t});\n\t\t} else if (uploadType === \"firebase\") {\n\t\t\tthis.setState({\n\t\t\t\tfirebaseImage: DefaultImg\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tbaseImage: DefaultImg\n\t\t\t});\n\t\t}\n\t}\n\n\tuploadImage(filee){\n\t\tlet imageObj = {};\n\n\t\t\tlet imageFormObj = new FormData();\n\n\t\t\t// TODO have url set properly\n\t\t\timageFormObj.append(\"imageUrl\", file);\n\t\t\timageFormObj.append(\"imageName\", \"multer-image-\"+ Date.now());\n\t\t\timageFormObj.append(\"imageDate\", \"\");\n\t\t\timageFormObj.append(\"imageSize\", \"\");\n\t\t\timageFormObj.append(\"imageMedium\", \"\");\n\t\t\timageFormObj.append(\"imagePortfolio\", \"\");\n\n\t\t\tthis.setState({\n\t\t\t\tmulterImage: URL.createObjectURL(file)\n\t\t\t});\n\n\t\t\taxios.post(`${API_URL}/image/uploadmulter`, imageFormObj)\n\t\t\t.then((data)=> {\n\t\t\t\tif (data.data.success) {\n\t\t\t\t\talert(\"Image has been succesfully uploaded using multer\");\n\t\t\t\t\tthis.setDefaultImage(\"multer\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\talert(\"Error while uploading image\");\n\t\t\t\tthis.setDefaultImage(\"multer\");\n\t\t\t}); \n\t}\n\n\tuploadAllImages(e, method){\n\t\te.target.files\n\t}\n\n\n  render(){\n  \treturn(\n\n  \t\t<div className=\"main-upload-container\"> \n  \t\t\t<h3 className=\"main-heading\"> Upload Images </h3>\n  \t\t\t<div className =\"image-container\">\n  \t\t\t\t<form id=\"uploadForm\" enctype=\"multipart/form-data\">\n  \t\t\t\t\t<p className=\"process_details\">Upload images to your portfolio(s)</p>\n  \t\t\t\t\t<input type=\"file\" className=\"process_upload-btn\" onChange={(e) =>this.uploadAllImages(e)} multiple/>\n  \t\t\t\t\t<img src={this.state.multerImage} alt=\"upload-image\" className=\"process_image\" />\n  \t\t\t\t</form>\n  \t\t\t</div>\n  \t\t</div>\n\n\n\n  \t\t)\n  }\n\n }\n\n"]},"metadata":{},"sourceType":"module"}