{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editStyle.js\";\nimport React, { Component, useState } from 'react';\nimport { SketchPicker } from 'react-color';\n\nconst styleJson = require('../style.json');\n\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.resetState = () => {\n      this.setState({\n        selectedColor: '#fff',\n        navigationStyle: styleJson.navigationStyle,\n        portfolioStyle: styleJson.portfolioStyle,\n        backgroundColor: styleJson.backgroundColor,\n        websiteTitleColor: styleJson.text.WebsiteTitle.color,\n        websiteTitleSize: styleJson.text.WebsiteTitle.size,\n        pageHeaderColor: styleJson.text.PageHeader.color,\n        pageHeaderSize: styleJson.text.PageHeader.size,\n        mediumHeaderColor: styleJson.text.MediumHeader.color,\n        mediumHeaderSize: styleJson.text.MediumHeader.size,\n        smallHeaderColor: styleJson.text.SmallHeader.color,\n        smallHeaderSize: styleJson.text.SmallHeader.size,\n        descriptionTextColor: styleJson.text.DescriptionText.color,\n        descriptionTextSize: styleJson.text.DescriptionText.size,\n        navigationLinkColor: styleJson.text.NavigationLink.color,\n        navigationLinkSize: styleJson.text.NavigationLink.size,\n        otherLinkColor: styleJson.text.OtherLink.color,\n        otherLinkSize: styleJson.text.OtherLink.size,\n        hoverOnLinkColor: styleJson.text.HoverOnLink.color,\n        hoverOnLinkSize: styleJson.text.HoverOnLink.size\n      });\n    };\n\n    this.onColorChangeComplete = color => {\n      this.setState({\n        selectedColor: color.hex\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(`Changing ${event.target.name} state to ${event.target.value}`);\n    };\n\n    this.onSubmit = event => {\n      var styleObject = {};\n      event.preventDefault();\n      fetch('/style/changeStyle', {\n        method: 'POST',\n        body: JSON.stringify(),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.props.history.push('/');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        alert('Error changing website styling, please try again');\n      });\n    };\n\n    this.onCancel = event => {\n      alert(\"Style values were not saved\");\n      const newJson = JSON.parse(JSON.stringify(styleJson));\n      this.setState({\n        styleObject: newJson\n      });\n    };\n\n    this.resetState();\n    this.onColorChangeComplete = this.onColorChangeComplete.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.setState = this.setState.bind(this);\n  } // Note: State variables are listed this way to avoid nesting state\n  // and to allow a visualization of style changes to update for the user\n  // in real time\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"EditorForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"websitetitle\",\n      name: \"Website Title\",\n      color: this.state.websiteTitleColor,\n      fontSize: this.state.websiteTitleSize,\n      onChange: this.onChange,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"pageHeader\",\n      name: \"Page Headers\",\n      color: this.state.pageHeaderColor,\n      fontSize: this.state.pageHeaderSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"mediumHeader\",\n      name: \"Medium Headers\",\n      color: this.state.mediumHeaderColor,\n      fontSize: this.state.mediumHeaderSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"smallHeader\",\n      name: \"Small Headers\",\n      color: this.state.smallHeaderColor,\n      fontSize: this.state.smallHeaderSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"descriptionText\",\n      name: \"Description Text\",\n      color: this.state.descriptionTextColor,\n      fontSize: this.state.descriptionTextSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"navigationLinks\",\n      name: \"Navigation Links\",\n      color: this.state.navigationLinkColor,\n      fontSize: this.state.navigationLinkSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"otherLinks\",\n      name: \"Other Links\",\n      color: this.state.otherLinkColor,\n      fontSize: this.state.otherLinkSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"hoverOnLink\",\n      name: \"Links on Hover\",\n      color: this.state.hoverOnLinkColor,\n      fontSize: this.state.hoverOnLinkSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Save\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      value: \"Cancel\",\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nfunction TextStyle(props) {\n  const [fontSize, setFontSize] = useState(props.fontSize);\n\n  const handleFontChange = e => {\n    setFontSize(e.target.value);\n    let key = `${props.id}Size`;\n    props.setParentState({\n      key: fontSize\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, \" \", props.name, \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `${props.id}Color`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }\n  }, \" Change color\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: `${props.id}Color`,\n    defaultValue: props.color,\n    onChange: props.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `${props.id}Size`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }\n  }, \" Change font size\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    name: `${props.id}Size`,\n    min: \"8\",\n    max: \"40\",\n    defaultValue: fontSize,\n    onMouseUp: handleFontChange,\n    className: \"sizeSlider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }\n  }, fontSize));\n}\n\nfunction TextEditorFields(props) {\n  // console.log(props);\n  const textStyleFields = Object.entries(props.textData).map(([key, value]) => /*#__PURE__*/React.createElement(TextStyle, {\n    name: key,\n    color: value.color,\n    fontSize: value.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 6\n    }\n  }));\n  return textStyleFields;\n}\n\nfunction ColorSelector(props) {\n  return /*#__PURE__*/React.createElement(SketchPicker, {\n    color: props.initColor,\n    onChangeComplete: this.onColorChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editStyle.js"],"names":["React","Component","useState","SketchPicker","styleJson","require","Contact","constructor","props","state","resetState","setState","selectedColor","navigationStyle","portfolioStyle","backgroundColor","websiteTitleColor","text","WebsiteTitle","color","websiteTitleSize","size","pageHeaderColor","PageHeader","pageHeaderSize","mediumHeaderColor","MediumHeader","mediumHeaderSize","smallHeaderColor","SmallHeader","smallHeaderSize","descriptionTextColor","DescriptionText","descriptionTextSize","navigationLinkColor","NavigationLink","navigationLinkSize","otherLinkColor","OtherLink","otherLinkSize","hoverOnLinkColor","HoverOnLink","hoverOnLinkSize","onColorChangeComplete","hex","onChange","event","target","name","value","console","log","onSubmit","styleObject","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","status","history","push","error","Error","catch","err","alert","onCancel","newJson","parse","bind","render","TextStyle","fontSize","setFontSize","handleFontChange","e","key","id","setParentState","TextEditorFields","textStyleFields","Object","entries","textData","map","ColorSelector","initColor"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { SketchPicker } from 'react-color'\nconst styleJson = require('../style.json');\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.resetState();\n\t\tthis.onColorChangeComplete = this.onColorChangeComplete.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.setState = this.setState.bind(this);\n\t}\n\n\t// Note: State variables are listed this way to avoid nesting state\n\t// and to allow a visualization of style changes to update for the user\n\t// in real time\n\tstate = {\n\n\t}\n\n\tresetState = () => {\n\t\tthis.setState({\n\t\t\tselectedColor: '#fff',\n\t\t\tnavigationStyle:styleJson.navigationStyle,\n\t\t\tportfolioStyle:styleJson.portfolioStyle,\n\t\t\tbackgroundColor:styleJson.backgroundColor,\n\t\t\twebsiteTitleColor: styleJson.text.WebsiteTitle.color, \n\t\t\twebsiteTitleSize: styleJson.text.WebsiteTitle.size, \n\t\t\tpageHeaderColor: styleJson.text.PageHeader.color,\n\t\t\tpageHeaderSize: styleJson.text.PageHeader.size,\n\t\t\tmediumHeaderColor: styleJson.text.MediumHeader.color,\n\t\t\tmediumHeaderSize: styleJson.text.MediumHeader.size,\n\t\t\tsmallHeaderColor: styleJson.text.SmallHeader.color,\n\t\t\tsmallHeaderSize: styleJson.text.SmallHeader.size,\n\t\t\tdescriptionTextColor: styleJson.text.DescriptionText.color,\n\t\t\tdescriptionTextSize: styleJson.text.DescriptionText.size,\n\t\t\tnavigationLinkColor: styleJson.text.NavigationLink.color,\n\t\t\tnavigationLinkSize: styleJson.text.NavigationLink.size,\n\t\t\totherLinkColor: styleJson.text.OtherLink.color,\n\t\t\totherLinkSize: styleJson.text.OtherLink.size,\n\t\t\thoverOnLinkColor: styleJson.text.HoverOnLink.color,\n\t\t\thoverOnLinkSize: styleJson.text.HoverOnLink.size\n\t\t})\n\t}\n\n\tonColorChangeComplete = (color) => {\n\t\tthis.setState({ selectedColor: color.hex });\n\t}\n\n\tonChange = (event)  => {\n    \tthis.setState({ [event.target.name]: event.target.value });\n    \tconsole.log(`Changing ${event.target.name} state to ${event.target.value}`)\n\t};\n\n\tonSubmit =(event) =>{\n\t\tvar styleObject = {}\n\n\n\n\t\tevent.preventDefault();\n\t\tfetch('/style/changeStyle',{\n\t\t\tmethod:'POST',\n\t\t\tbody:JSON.stringify(\t),\n\t\t\theaders:{\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tif(res.status===200){\n\t\t\t\tthis.props.history.push('/');\n\t\t\t} else {\n\t\t\t\tconst error = new Error(res.error);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t})\n\t\t.catch(err=>{\n\t\t\tconsole.error(err);\n\t\t\talert('Error changing website styling, please try again');\n\t\t});\n\t}\n\n\tonCancel = (event) =>{\n\t\talert(\"Style values were not saved\");\n\t\tconst newJson = JSON.parse(JSON.stringify(styleJson));\n\t\tthis.setState({\n\t\t\tstyleObject:newJson\n\t\t})\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"Editor\">\n\t\t\t\t<form className=\"EditorForm\">\t\t\t\t\t\n\t\t\t\t\t<TextStyle id=\"websitetitle\" name=\"Website Title\" color={this.state.websiteTitleColor} fontSize={this.state.websiteTitleSize} onChange={this.onChange} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"pageHeader\" name=\"Page Headers\" color={this.state.pageHeaderColor} fontSize={this.state.pageHeaderSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"mediumHeader\" name=\"Medium Headers\" color={this.state.mediumHeaderColor} fontSize={this.state.mediumHeaderSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"smallHeader\" name=\"Small Headers\" color={this.state.smallHeaderColor} fontSize={this.state.smallHeaderSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"descriptionText\" name=\"Description Text\" color={this.state.descriptionTextColor} fontSize={this.state.descriptionTextSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"navigationLinks\" name=\"Navigation Links\" color={this.state.navigationLinkColor} fontSize={this.state.navigationLinkSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"otherLinks\" name=\"Other Links\" color={this.state.otherLinkColor} fontSize={this.state.otherLinkSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"hoverOnLink\" name=\"Links on Hover\" color={this.state.hoverOnLinkColor} fontSize={this.state.hoverOnLinkSize} setParentState={this.setState}/>\n\t\t\t\t\t<button type=\"submit\" value=\"Update\">Update</button>\n\t\t\t\t\t<button type=\"submit\" value=\"Save\" onClick={this.onSubmit}>Save</button>\n\t\t\t\t\t<button type=\"reset\" value=\"Cancel\" onClick={this.onCancel}>Cancel</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n\n}       \n\n\nfunction TextStyle(props){\n\tconst [fontSize, setFontSize] = useState(props.fontSize);\n\n\tconst handleFontChange = e => {\n\t    setFontSize(e.target.value);\n\t    let key = `${props.id}Size`;\n\t    props.setParentState({key:fontSize})\n\t};\n\n\treturn(\n\t\t<div>\n\t\t\t<h2> {props.name} </h2>\n\t\t\t<label htmlFor={`${props.id}Color`}> Change color</label>\n\t\t\t<input type=\"text\" name={`${props.id}Color`} defaultValue={props.color} onChange={props.onChange}/>\n\t\t\t<label htmlFor={`${props.id}Size`} > Change font size</label>\n\t\t\t<input type=\"range\" name={`${props.id}Size`} min=\"8\" max=\"40\" defaultValue={fontSize} onMouseUp={handleFontChange} className=\"sizeSlider\"/>\n\t\t\t<div>{fontSize}</div>\n\t\t</div>\n\t)\n}\n\nfunction TextEditorFields(props){\n\t// console.log(props);\n\tconst textStyleFields = Object.entries(props.textData).map(([key, value]) => \n\t    <TextStyle name={key} color={value.color} fontSize={value.size}/>\n\t);\n\treturn textStyleFields;\n}\n\n\n\nfunction ColorSelector(props) {\n\n\treturn (\n      <SketchPicker\n        color={ props.initColor }\n        onChangeComplete={ this.onColorChangeComplete }\n     />\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}