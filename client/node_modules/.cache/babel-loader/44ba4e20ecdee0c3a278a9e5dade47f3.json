{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from 'App/admin/authentication/handleResponse';\nimport axios from 'axios';\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\nexport const authenticationService = {\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction login(email, password) {\n  axios.post(`/user/authenticate`, {\n    email,\n    password\n  }, {// receive two    parameter endpoint url ,form data\n  }).then(res => {\n    handleResponse(res);\n  }).then(user => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n  }).catch(err => console.log(err));\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/authentication/authenticationService.js"],"names":["BehaviorSubject","handleResponse","axios","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","email","password","post","then","res","user","setItem","stringify","next","catch","err","console","log","removeItem"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,IAAIH,eAAJ,CAAoBI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAA3B;AAEA,OAAO,MAAMC,qBAAqB,GAAG;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,MAFiC;AAGjCC,EAAAA,WAAW,EAAER,kBAAkB,CAACS,YAAnB,EAHoB;;AAIjC,MAAIC,gBAAJ,GAAwB;AAAE,WAAOV,kBAAkB,CAACW,KAA1B;AAAiC;;AAJ1B,CAA9B;;AAOP,SAASL,KAAT,CAAeM,KAAf,EAAsBC,QAAtB,EAAgC;AAC5Bd,EAAAA,KAAK,CAACe,IAAN,CAAY,oBAAZ,EAAiC;AAAEF,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAjC,EAAsD,CAChD;AADgD,GAAtD,EAEGE,IAFH,CAEQC,GAAG,IAAI;AACXlB,IAAAA,cAAc,CAACkB,GAAD,CAAd;AACH,GAJD,EAIGD,IAJH,CAIQE,IAAI,IAAI;AACR;AACAd,IAAAA,YAAY,CAACe,OAAb,CAAqB,aAArB,EAAoCjB,IAAI,CAACkB,SAAL,CAAeF,IAAf,CAApC;AACAjB,IAAAA,kBAAkB,CAACoB,IAAnB,CAAwBH,IAAxB;AAEA,WAAOA,IAAP;AACH,GAVL,EAUOI,KAVP,CAUaC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVpB;AAWH;;AAED,SAASf,MAAT,GAAkB;AACd;AACAJ,EAAAA,YAAY,CAACsB,UAAb,CAAwB,aAAxB;AACAzB,EAAAA,kBAAkB,CAACoB,IAAnB,CAAwB,IAAxB;AACH","sourcesContent":["import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from 'App/admin/authentication/handleResponse';\nimport axios from 'axios';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(email, password) {\n    axios.post(`/user/authenticate`, { email, password }, { \n          // receive two    parameter endpoint url ,form data\n    }).then(res => {\n        handleResponse(res)\n    }).then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            currentUserSubject.next(user);\n\n            return user;\n        }).catch(err => console.log(err));\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}"]},"metadata":{},"sourceType":"module"}