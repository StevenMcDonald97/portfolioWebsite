{"ast":null,"code":"import _classCallCheck from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Formik,Field,Form,ErrorMessage}from'formik';import*as Yup from'yup';import{authenticationService}from'App/admin/authentication/authenticationService';var LoginPage=/*#__PURE__*/function(_Component){_inherits(LoginPage,_Component);var _super=_createSuper(LoginPage);function LoginPage(props){var _this;_classCallCheck(this,LoginPage);_this=_super.call(this,props);// redirect to userpanel if already logged in\nif(authenticationService.currentUserValue){_this.props.history.push('/userPanel');}_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(LoginPage,[{key:\"onSubmit\",value:function onSubmit(email,password,setStatus,setSubmitting){var _this2=this;authenticationService.login(email,password,function(){return _this2.props.history.push('/userPanel');});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"pageEditor\"},/*#__PURE__*/React.createElement(\"div\",{className:\"loginPage\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Login\"),/*#__PURE__*/React.createElement(Formik,{initialValues:{email:'',password:''},validationSchema:Yup.object().shape({email:Yup.string().required('Email is required'),password:Yup.string().required('Password is required')}),onSubmit:function onSubmit(_ref,_ref2){var email=_ref.email,password=_ref.password;var setStatus=_ref2.setStatus,setSubmitting=_ref2.setSubmitting;_this3.onSubmit(email,password,setStatus,setSubmitting);}},function(_ref3){var errors=_ref3.errors,status=_ref3.status,touched=_ref3.touched,isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/React.createElement(Form,{className:\"loginForm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(Field,{name:\"email\",type:\"text\",className:'loginInput form-control'+(errors.email&&touched.email?' is-invalid':'')}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"email\",component:\"div\",className:\"invalid-feedback\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(Field,{name:\"password\",type:\"password\",className:'loginInput form-control'+(errors.password&&touched.password?' is-invalid':'')}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"password\",component:\"div\",className:\"invalid-feedback\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary loginInput\",disabled:isSubmitting},\"Login\")));})));}}]);return LoginPage;}(Component);export{LoginPage as default};","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/login.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","authenticationService","LoginPage","props","currentUserValue","history","push","onSubmit","bind","email","password","setStatus","setSubmitting","login","object","shape","string","required","errors","status","touched","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { authenticationService } from 'App/admin/authentication/authenticationService'\n\nexport default class LoginPage extends Component {\n\tconstructor(props) {\n        super(props);\n\n        // redirect to userpanel if already logged in\n        if (authenticationService.currentUserValue) { \n            this.props.history.push('/userPanel');\n        }\n        this.onSubmit=this.onSubmit.bind(this);\n\n\t}\n\n    onSubmit(email, password, setStatus, setSubmitting){\n        authenticationService.login(email, password, ()=> this.props.history.push('/userPanel'));\n    }\n\t\n\trender() {\n        return (\n            <div className=\"pageEditor\">\n                <div className=\"loginPage\">\n                    <h2>Login</h2>\n                    <Formik\n                        initialValues={{\n                            email: '',\n                            password: ''\n                        }}\n                        validationSchema={Yup.object().shape({\n                            email: Yup.string().required('Email is required'),\n                            password: Yup.string().required('Password is required')\n                        })}\n                        onSubmit={({ email, password }, { setStatus, setSubmitting }) => {\n                            this.onSubmit(email, password, setStatus, setSubmitting);\n                        }}\n                        \n                    >\n                        {({ errors, status, touched, isSubmitting }) => (\n                            <Form className=\"loginForm\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Email</label>\n                                    <Field name=\"email\" type=\"text\" className={'loginInput form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                    <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Password</label>\n                                    <Field name=\"password\" type=\"password\" className={'loginInput form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                    <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                </div>\n                                <div className=\"form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary loginInput\" disabled={isSubmitting}>Login</button>\n                                </div>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}