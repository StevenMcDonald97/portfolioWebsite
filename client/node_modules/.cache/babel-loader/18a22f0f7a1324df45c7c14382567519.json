{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/uploadImages.js\";\n// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ImageEditor from \"src/App/admin/imageEditor\";\nimport ErrorBoundary from 'src/App/errorBoundary';\nimport { BackButton } from 'src/App/admin/helperComponents';\nimport { FaArrowDown } from \"react-icons/fa\";\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addImage = (link, fileName) => {\n      console.log(\"1\");\n      let urls = this.state.imgURLs;\n      urls.push(link);\n      this.setState({\n        imgURLs: urls\n      });\n      const values = this.state.imageData;\n      values.push({\n        fileName: fileName,\n        title: fileName,\n        date: '',\n        size: '',\n        medium: '',\n        availability: '',\n        price: '',\n        portfolio: '',\n        isChanged: true\n      });\n      this.setState({\n        imageData: values\n      }, () => {\n        if (this.state.imageData.length === this.state.selectedFiles.length) {\n          this.setState({\n            filesChosen: true\n          });\n        }\n      });\n    };\n\n    this.removeImage = index => {\n      let files = this.state.selectedFiles;\n      files.splice(index, 1);\n      this.setState({\n        selectedFiles: files\n      });\n    };\n\n    this.state = {\n      filesChosen: false,\n      selectedFiles: [],\n      imageData: [],\n      imgURLs: []\n    };\n    this.createImages = this.createImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.returnToUpload = this.returnToUpload.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n    this.returnToUserPanel = this.returnToUserPanel.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    if (this.state.filesChosen) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  returnToUserPanel() {\n    this.props.history.push('/userPanel');\n  }\n\n  createImages(e) {\n    this.setState({\n      selectedFiles: Array.from(e.target.files),\n      imageData: [],\n      imgURLs: []\n    }, () => {\n      for (let i = 0; i < this.state.selectedFiles.length; i++) {\n        this.addImage(URL.createObjectURL(this.state.selectedFiles[i]), this.state.selectedFiles[i].name);\n      }\n    });\n  }\n\n  returnToUpload() {\n    this.setState({\n      filesChosen: false\n    }, () => this.forceUpdate());\n  }\n\n  uploadImages(images, forceRebuild) {\n    const data = new FormData();\n\n    for (var x = 0; x < this.state.selectedFiles.length; x++) {\n      data.append('file', this.state.selectedFiles[x]);\n    }\n\n    axios.post(\"/upload/uploadImages\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Image upload returned: ${res.statusText}`);\n\n      if (res.status === 500) {\n        alert(\"Uploading these images caused a problem. This is likely because your image size is too large. Image max size is 4mb\");\n      } else {\n        axios.post(\"/upload/storeImagesInDB\", images, {// receive two    parameter endpoint url ,form data\n        }).then(res => {\n          // then print response status\n          console.log(`Storing images in database returned: ${res.statusText}`);\n\n          if (forceRebuild) {\n            axios.post(\"/upload/rebuild\", {}, {});\n          }\n        }).catch(err => console.log(\"Storing images in database returned the error: \" + err));\n      }\n    }).catch(err => {\n      alert(\"Uploading these images caused a problem. This is likely because your image size is too large. Image max size is 4mb\");\n      console.log(\"Uploading images returned the error: \" + err);\n    });\n  }\n\n  render() {\n    if (this.state.filesChosen) {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ImageEditor, Object.assign({\n        imageURLs: this.state.imgURLs,\n        images: this.state.imageData,\n        removeImageFromParent: this.removeImage,\n        backPage: this.returnToUserPanel,\n        returnToUpload: this.returnToUpload,\n        onSubmit: this.uploadImages\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageEditor main-upload-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BackButton, {\n        backPage: this.returnToUserPanel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"imageUploadContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pageHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, \" Upload Image(s) \"), /*#__PURE__*/React.createElement(\"div\", {\n        name: \"imageUploader\",\n        className: \"imageUploader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: this.createImages,\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"imageUploader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, \" \", /*#__PURE__*/React.createElement(FaArrowDown, {\n        className: \"uploadArrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 45\n        }\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/uploadImages.js"],"names":["React","Component","axios","ImageEditor","ErrorBoundary","BackButton","FaArrowDown","Contact","constructor","props","addImage","link","fileName","console","log","urls","state","imgURLs","push","setState","values","imageData","title","date","size","medium","availability","price","portfolio","isChanged","length","selectedFiles","filesChosen","removeImage","index","files","splice","createImages","bind","returnToUpload","uploadImages","returnToUserPanel","shouldComponentUpdate","history","e","Array","from","target","i","URL","createObjectURL","name","forceUpdate","images","forceRebuild","data","FormData","x","append","post","then","res","statusText","status","alert","catch","err","render"],"mappings":"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","sourcesContent":["// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component} from 'react';\nimport axios from 'axios';\nimport ImageEditor from \"src/App/admin/imageEditor\";\nimport ErrorBoundary from 'src/App/errorBoundary';\nimport { BackButton } from 'src/App/admin/helperComponents';\nimport {FaArrowDown} from \"react-icons/fa\";\n\nexport default class Contact extends Component {\n  constructor(props) {\n\t\tsuper(props);\n    this.state ={\n      filesChosen:false,\n      selectedFiles: [],\n      imageData:[],\n      imgURLs:[]\n    };\n    this.createImages = this.createImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.returnToUpload=this.returnToUpload.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n    this.returnToUserPanel=this.returnToUserPanel.bind(this);\n  }\n\n  shouldComponentUpdate () {\n    if(this.state.filesChosen){\n      return false \n    } else {\n      return true\n    }\n  }\n\n  returnToUserPanel(){\n    this.props.history.push('/userPanel');\n  }\n\n  createImages(e) {\n    this.setState({\n      selectedFiles: Array.from(e.target.files),\n      imageData:[],\n      imgURLs:[]\n    }, ()=> { \n      for (let i =0; i<this.state.selectedFiles.length;i++){\n        this.addImage(URL.createObjectURL(this.state.selectedFiles[i]), this.state.selectedFiles[i].name);\n      }\n    });\n  }\n\n\n  returnToUpload(){\n    this.setState({filesChosen:false}, ()=>this.forceUpdate());\n  }\n\n  addImage = (link, fileName) => {\n    console.log(\"1\");\n    let urls=this.state.imgURLs;\n    urls.push(link);\n    this.setState({imgURLs: urls});\n    const values = this.state.imageData;\n    values.push({\n        fileName:fileName,\n        title:fileName,\n        date:'',\n        size:'',\n        medium:'',\n        availability:'',\n        price:'',\n        portfolio:'',\n        isChanged:true,\n      });\n\n    this.setState({imageData:values}, ()=>{\n      if (this.state.imageData.length===this.state.selectedFiles.length) {\n        this.setState({filesChosen:true});\n      }\n    });\n  };\n\n  removeImage = (index) => {\n    let files = this.state.selectedFiles;\n    files.splice(index, 1);\n    this.setState({selectedFiles:files});\n  };\n\n  uploadImages(images, forceRebuild) {\n    const data = new FormData();\n    for(var x = 0; x<this.state.selectedFiles.length; x++) {\n        data.append('file', this.state.selectedFiles[x])\n    }\n\n    axios.post(\"/upload/uploadImages\", data, { \n          // receive two    parameter endpoint url ,form data\n    }).then(res => { // then print response status\n      console.log(`Image upload returned: ${res.statusText}`)\n      if (res.status===500){\n        alert(\"Uploading these images caused a problem. This is likely because your image size is too large. Image max size is 4mb\");\n      } else {\n        axios.post(\"/upload/storeImagesInDB\", images, { \n              // receive two    parameter endpoint url ,form data\n        }).then(res => { // then print response status\n            console.log(`Storing images in database returned: ${res.statusText}`);\n            if (forceRebuild) {\n              axios.post(\"/upload/rebuild\",{},{}); \n            }\n        }).catch(err => console.log(\"Storing images in database returned the error: \"+err));\n      }\n    }).catch(err => {\n      alert(\"Uploading these images caused a problem. This is likely because your image size is too large. Image max size is 4mb\"); \n      console.log(\"Uploading images returned the error: \"+err)\n    });\n\n  }\n\n  render(){\n    if(this.state.filesChosen)\n    {\n      return(        \n        <ErrorBoundary >\n          <ImageEditor imageURLs={this.state.imgURLs} \n            images={this.state.imageData} \n            removeImageFromParent={this.removeImage} \n            backPage={this.returnToUserPanel}\n            returnToUpload={this.returnToUpload}\n            onSubmit={this.uploadImages}\n            {...this.props}/>\n        </ErrorBoundary>\n      )\n    } else {\n      return(\n        <div className=\"pageEditor main-upload-container\"> \n          <BackButton backPage={this.returnToUserPanel}/>\n          <div className=\"imageUploadContainer\">\n            <h3 className=\"pageHeader\"> Upload Image(s) </h3>\n            <div name=\"imageUploader\" className=\"imageUploader\">\n                <input type=\"file\" className=\"form-control\" onChange={this.createImages} multiple />\n            </div>\n            <label htmlFor=\"imageUploader\"> <FaArrowDown className=\"uploadArrow\"/></label>\n          </div>\n        </div>\n      )\n    }\n  }\n }\n\n"]},"metadata":{},"sourceType":"module"}