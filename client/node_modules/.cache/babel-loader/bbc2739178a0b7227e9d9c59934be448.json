{"ast":null,"code":"import _toConsumableArray from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import axios from'axios';import{BackButton,UploadImage,ImageCheckBox}from'src/App/admin/helperComponents';var fs=require('fs');var PortfolioTemplate=/*#__PURE__*/function(_Component){_inherits(PortfolioTemplate,_Component);var _super=_createSuper(PortfolioTemplate);function PortfolioTemplate(props){var _this;_classCallCheck(this,PortfolioTemplate);_this=_super.call(this,props);_this.getPageData=function(){if(_this.props.pageId){axios.get('/api/getPage',{params:{pageId:_this.props.pageId,pageType:\"portfolio\"}}).then(function(response){_this.setState({title:response.data.title,oldTitle:response.data.title,mainImage:response.data.mainImage,description:response.data.description,imageFileNames:response.data.imageFileNames},function(){_this.loadImages();});});}};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.state={title:'',oldtitle:'',mainImage:'',imageFile:'',description:'',imageFileNames:[],allImages:[],createPage:_this.props.createPage};_this.loadImages=_this.loadImages.bind(_assertThisInitialized(_this));_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.addImageToPortfolio=_this.addImageToPortfolio.bind(_assertThisInitialized(_this));_this.removeImageFromPortfolio=_this.removeImageFromPortfolio.bind(_assertThisInitialized(_this));_this.getPageData=_this.getPageData.bind(_assertThisInitialized(_this));_this.updateImage=_this.updateImage.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(PortfolioTemplate,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.pageId){this.getPageData();}else{this.loadImages();}}},{key:\"updateImage\",value:function updateImage(file,name){this.setState({mainImage:name,imageFile:file});}},{key:\"loadImages\",value:function loadImages(){var _this2=this;/* fetch all images from database */axios.get('/image/getAll').then(function(response){_this2.setState({allImages:response.data});});}},{key:\"addImageToPortfolio\",value:function addImageToPortfolio(imageName){console.log(\"added image \".concat(imageName,\" to portfolio\"));var values=_toConsumableArray(this.state.imageFileNames);values.push(imageName);this.setState({imageFileNames:values});}},{key:\"removeImageFromPortfolio\",value:function removeImageFromPortfolio(imageName){console.log(\"removed image \".concat(imageName,\" from portfolio\"));var values=_toConsumableArray(this.state.imageFileNames);var index=values.indexOf(imageName);values.splice(index,1);this.setState({imageFileNames:values});}},{key:\"onSubmit\",value:function onSubmit(){var PageData={\"title\":this.state.title,\"oldTitle\":this.state.oldTitle,\"mainImage\":this.state.mainImage,\"description\":this.state.description,\"imageFileNames\":this.state.imageFileNames,\"id\":this.props.pageId};if(this.state.createPage){axios.post('/upload/uploadPortfolio',PageData).then(function(response){return console.log(response);});}else{axios.post('/edit/editPortfolio',PageData).then(function(response){return alert(response.data);});};alert(\"Updated Page, refresh to see your changes\");}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"pageEditor\"},/*#__PURE__*/React.createElement(BackButton,{backPage:this.props.backPage}),/*#__PURE__*/React.createElement(\"form\",{className:\"pageForm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"inputLabel\"},\"Portfolio Thumbnail:\"),/*#__PURE__*/React.createElement(UploadImage,{changeImage:this.updateImage})),/*#__PURE__*/React.createElement(\"div\",{className:\"inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"inputLabel\",htmlFor:\"name\"},\"Portfolio Title:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"smallPageField\",name:\"title\",value:this.state.title,onChange:this.handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"inputGroup\"},/*#__PURE__*/React.createElement(\"label\",{className:\"inputLabel\",htmlFor:\"description\"},\"Optional Description:\"),/*#__PURE__*/React.createElement(\"textarea\",{className:\"pageField\",name:\"description\",value:this.state.description,onChange:this.handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"portfolioImageChoice\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Choose images for this Portfolio \"),this.state.allImages.length!==0?this.state.allImages.map(function(image){return/*#__PURE__*/React.createElement(ImageCheckBox,{key:image._id,checked:_this3.state.title===image.portfolio&&_this3.state.title!==\"\",image:image,title:_this3.state.title,addToPage:_this3.addImageToPortfolio,removeFromPage:_this3.removeImageFromPortfolio});}):/*#__PURE__*/React.createElement(\"div\",null,\" Go to Add Images to upload images to your site \")),/*#__PURE__*/React.createElement(\"div\",{className:\"editSubmitButtons\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"editSubmitButton\",onClick:this.onSubmit},\" Submit \"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"editSubmitButton\",onClick:this.props.backPage},\" Cancel \"))));}}]);return PortfolioTemplate;}(Component);export{PortfolioTemplate as default};","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/portfolioTemplate.js"],"names":["React","Component","axios","BackButton","UploadImage","ImageCheckBox","fs","require","PortfolioTemplate","props","getPageData","pageId","get","params","pageType","then","response","setState","title","data","oldTitle","mainImage","description","imageFileNames","loadImages","handleChange","event","target","name","value","state","oldtitle","imageFile","allImages","createPage","bind","addImageToPortfolio","removeImageFromPortfolio","updateImage","onSubmit","file","imageName","console","log","values","push","index","indexOf","splice","PageData","post","alert","backPage","length","map","image","_id","portfolio"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage, ImageCheckBox } from 'src/App/admin/helperComponents';\nimport PropTypes from \"prop-types\";\nconst fs = require('fs');\n\nexport default class PortfolioTemplate extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttitle:'',\n\t\t\toldtitle:'',\n\t\t\tmainImage:'',\n\t\t\timageFile:'',\n\t\t\tdescription:'',\n\t\t\timageFileNames:[],\n\t\t\tallImages:[],\n\t\t\tcreatePage:this.props.createPage\n\t\t}\n\n\t\tthis.loadImages=this.loadImages.bind(this);\n\t\tthis.handleChange=this.handleChange.bind(this);\n\t\tthis.addImageToPortfolio=this.addImageToPortfolio.bind(this);\n\t\tthis.removeImageFromPortfolio=this.removeImageFromPortfolio.bind(this);\n\t\tthis.getPageData=this.getPageData.bind(this);\n\t\tthis.updateImage=this.updateImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tif (this.props.pageId){\n\t\t\tthis.getPageData();\n\t\t} else {\n\t\t\tthis.loadImages()\n\t\t}\n\t}\n\n    getPageData = () =>{\n\n    \tif (this.props.pageId){\n\t        axios.get('/api/getPage', { params: {pageId: this.props.pageId, pageType:\"portfolio\" } })\n\t        .then((response) => {\n\t          this.setState({\n\t            title:response.data.title, \n\t            oldTitle:response.data.title, \n\t            mainImage:response.data.mainImage, \n\t            description:response.data.description, \n\t            imageFileNames:response.data.imageFileNames, \n\t            }, ()=>{ this.loadImages()});\n\t        });\n\t    }\n    }\n\n\tupdateImage(file, name){\n\t\tthis.setState({mainImage:name, imageFile:file})\n\t}\n\n\tloadImages(){\n\t\t/* fetch all images from database */\n\t\taxios.get('/image/getAll')\n\t\t  .then((response) => {\n\t\t  \tthis.setState({allImages:response.data})\n\t\t  });\n\t}\n\n\taddImageToPortfolio(imageName){\n\t\tconsole.log(`added image ${imageName} to portfolio`);\n\t\tconst values = [...this.state.imageFileNames];\n\t\tvalues.push(imageName);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\tremoveImageFromPortfolio(imageName){\n\t\tconsole.log(`removed image ${imageName} from portfolio`);\n \t\tconst values = [...this.state.imageFileNames];\n \t\tconst index = values.indexOf(imageName);\n\t\tvalues.splice(index,1);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]:event.target.value})\n\t}\n\n\tonSubmit(){\n\t\tconst PageData={\"title\":this.state.title, \"oldTitle\":this.state.oldTitle, \"mainImage\":this.state.mainImage, \n\t\t\t\"description\":this.state.description, \"imageFileNames\":this.state.imageFileNames,\n\t\t\t\"id\":this.props.pageId};\n\t\tif (this.state.createPage) { \n\t\t\taxios.post('/upload/uploadPortfolio', PageData).then((response)=>console.log(response));\n\t\t} else {\n\t\t\taxios.post('/edit/editPortfolio', PageData).then((response)=>alert(response.data));\n\t\t};\t\n\t\talert(\"Updated Page, refresh to see your changes\");\n\t}\n\n\n\n\trender(){\n\n\t\treturn(\n\t\t<div className=\"pageEditor\">\n\t\t\t<BackButton backPage={this.props.backPage}/>\n\t\t\t<form className=\"pageForm\">\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\">Portfolio Thumbnail:</label>\n\t\t\t\t\t<UploadImage changeImage={this.updateImage} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"name\">Portfolio Title:</label>\n\t\t\t\t\t<input type=\"text\" className=\"smallPageField\" name=\"title\" \n\t\t\t\t\t\tvalue={this.state.title} \n\t\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"description\">Optional Description:</label>\n\t\t\t\t\t<textarea className=\"pageField\" \n\t\t\t\t\t\tname=\"description\" \n\t\t\t\t\t\tvalue={this.state.description} \n\t\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"portfolioImageChoice\">\n\t\t\t\t\t<h3>Choose images for this Portfolio </h3>\n\t\t\t\t\t{ (this.state.allImages).length !== 0 \n\t\t\t\t\t\t? (this.state.allImages).map((image) =>(\n\t\t\t\t\t\t\t<ImageCheckBox \n\t\t\t\t\t\t\t\tkey={image._id}\n\t\t\t\t\t\t\t\tchecked={this.state.title===image.portfolio && this.state.title!==\"\"}\n\t\t\t\t\t\t\t\timage={image} \n\t\t\t\t\t\t\t\ttitle={this.state.title}\n\t\t\t\t\t\t\t\taddToPage={this.addImageToPortfolio}\n\t\t\t\t\t\t\t\tremoveFromPage={this.removeImageFromPortfolio}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t) : <div> Go to Add Images to upload images to your site </div>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editSubmitButtons\">\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.onSubmit}> Submit </button>\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.props.backPage}> Cancel </button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>)\n\t}\n}\n\nPortfolioTemplate.propTypes = {\n\tpageId:PropTypes.string,\n\tcratePage:PropTypes.string,\n\tbackPage:PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}