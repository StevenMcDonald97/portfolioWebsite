{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/listPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Modal from 'App/pages/modal';\nimport ImageErrorCatch from 'App/pages/ImageErrorCatch';\n\nconst images = require.context('App/upload', true);\n\nexport default class ListPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n\n    this.loadPage = () => {\n      var self = this;\n      axios.get('/api/getPage', {\n        params: {\n          pageId: this.props.pageId,\n          pageType: \"list\"\n        }\n      }).then(function (response) {\n        self.setState({\n          title: response.data.title,\n          listObjectsData: response.data.childObjects\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.createListObjects = () => {\n      return this.state.listObjectsData.map(object => /*#__PURE__*/React.createElement(ListObject, {\n        key: object._id,\n        img: object.imgName,\n        title: object.title,\n        blurb: object.blurb,\n        text: object.description,\n        changeModalStateInfo: this.changeModalStateInfo,\n        showModal: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.state = {\n      title: \"\",\n      listObjectsData: [],\n      showModal: false,\n      modalImage: '',\n      modalTitle: '',\n      modalBlurb: '',\n      modalText: ''\n    };\n    this.showModal = this.showModal.bind(this);\n    this.loadPage = this.loadPage.bind(this);\n    this.createListObjects = this.createListObjects.bind(this);\n    this.changeModalStateInfo = this.changeModalStateInfo.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadPage();\n  }\n\n  changeModalStateInfo(image, title, blurb, text) {\n    this.setState({\n      modalImage: image,\n      modalTitle: title,\n      modalBlurb: blurb,\n      modalText: text\n    });\n  }\n\n  render() {\n    var modalBody = /*#__PURE__*/React.createElement(ListModalContent, {\n      image: this.state.modalImage,\n      title: this.state.modalTitle,\n      blurb: this.state.modalBlurb,\n      text: this.state.modalText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"pageHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \" \", this.props.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bodyText center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \" \", this.props.mainText, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listObjects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, this.createListObjects()), /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.showModal,\n      show: this.state.showModal,\n      content: modalBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst ListModalContent = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listObjectContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImageErrorCatch, {\n    imgClass: \"listModalImage\",\n    src: props.image,\n    description: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mediumHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listModalTextContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"bodyText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, props.text)));\n};\n\nconst ListObject = props => {\n  const clickObject = () => {\n    props.changeModalStateInfo(props.img, props.title, props.blurb, props.text);\n    props.showModal();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pageObject\",\n    onClick: clickObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, props.img ? /*#__PURE__*/React.createElement(ImageErrorCatch, {\n    imgClass: \"objectImage small\",\n    src: props.img,\n    description: \"\",\n    clickImage: clickObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 27\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"objectTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"objectBlurb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, props.blurb));\n};\n\nListPage.propTypes = {\n  title: PropTypes.string,\n  mainText: PropTypes.string,\n  objectIds: PropTypes.array\n};\nListObject.propTypes = {\n  title: PropTypes.string,\n  text: PropTypes.string,\n  img: PropTypes.string\n};","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/listPage.js"],"names":["React","Component","axios","PropTypes","Modal","ImageErrorCatch","images","require","context","ListPage","constructor","props","showModal","setState","state","loadPage","self","get","params","pageId","pageType","then","response","title","data","listObjectsData","childObjects","catch","error","console","log","createListObjects","map","object","_id","imgName","blurb","description","changeModalStateInfo","modalImage","modalTitle","modalBlurb","modalText","bind","componentDidMount","image","text","render","modalBody","mainText","ListModalContent","ListObject","clickObject","img","propTypes","string","objectIds","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Modal from 'App/pages/modal';\nimport ImageErrorCatch from 'App/pages/ImageErrorCatch';\nconst images = require.context('App/upload', true);\n\nexport default class ListPage extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            title:\"\",\n            listObjectsData:[],\n            showModal:false,\n            modalImage:'',\n            modalTitle:'',\n            modalBlurb:'',\n            modalText:''\n        }\n        this.showModal=this.showModal.bind(this);\n        this.loadPage = this.loadPage.bind(this);\n        this.createListObjects=this.createListObjects.bind(this);\n        this.changeModalStateInfo=this.changeModalStateInfo.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadPage();\n    }\n\n    showModal = () => {\n        this.setState({\n            showModal: !this.state.showModal\n        });\n    };\n\n    loadPage = () =>{\n        var self = this;\n        axios.get('/api/getPage', {\n            params: {\n                pageId:this.props.pageId,\n                pageType:\"list\"\n            }\n        }).then(function(response){\n            self.setState({\n                title:response.data.title,\n                listObjectsData:response.data.childObjects\n            });\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    createListObjects = () =>{\n        return(\n            this.state.listObjectsData.map((object)=>\n                <ListObject key={object._id} img={object.imgName} title={object.title} blurb={object.blurb} text={object.description} changeModalStateInfo={this.changeModalStateInfo} showModal={this.showModal}/>\n            )\n        )\n    }\n\n    changeModalStateInfo(image, title, blurb, text) {\n        this.setState({\n            modalImage: image,\n            modalTitle: title,\n            modalBlurb: blurb,\n            modalText: text\n        })\n    }\n\n    render(){\n        var modalBody = <ListModalContent image={this.state.modalImage} title={this.state.modalTitle} blurb={this.state.modalBlurb} text={this.state.modalText}/>;\n        return (\n            <div className=\"page\">\n                <div className=\"listPage\">\n                    <h2 className=\"pageHeader\"> { this.props.title }</h2>\n                    <div className=\"bodyText center\"> { this.props.mainText } </div>\n                    <div className=\"listObjects\">\n                        { this.createListObjects() }\n                    </div>\n                    <Modal onClose={ this.showModal } show={ this.state.showModal} content={ modalBody }/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst ListModalContent = (props) =>{\n    return(\n        <div className=\"listObjectContainer\">\n            <ImageErrorCatch imgClass=\"listModalImage\" src={props.image} description={\"\"}/>\n            <h2 className=\"mediumHeader\">{props.title}</h2>\n            <div className=\"listModalTextContainer\">\n                <p className=\"bodyText\">{props.text}</p>\n            </div>\n        </div>\n    )\n}\n\nconst ListObject = (props) => {\n    const clickObject = () => {\n        props.changeModalStateInfo(props.img, props.title, props.blurb, props.text);\n        props.showModal(); \n    }\n\n    return(\n        <div className=\"pageObject\" onClick={clickObject}>\n            { props.img ? <ImageErrorCatch imgClass=\"objectImage small\" src={props.img} description={\"\"} clickImage={clickObject} /> : \"\" }\n            <h4 className=\"objectTitle\">{props.title}</h4>\n            <h5 className=\"objectBlurb\">{props.blurb}</h5>\n        </div>\n    )\n\n}\n\nListPage.propTypes = {\n  title: PropTypes.string,\n  mainText: PropTypes.string,\n  objectIds:PropTypes.array\n};\n\nListObject.propTypes = {\n  title: PropTypes.string,\n  text: PropTypes.string,\n  img:PropTypes.string\n};"]},"metadata":{},"sourceType":"module"}