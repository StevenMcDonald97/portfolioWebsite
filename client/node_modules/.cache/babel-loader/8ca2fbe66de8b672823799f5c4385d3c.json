{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editStyle.js\";\nimport React, { Component, useState } from 'react';\nimport { SketchPicker } from 'react-color';\n\nconst styleJson = require('../style.json');\n\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: '#fff',\n      navigationStyle: styleJson.navigationStyle,\n      portfolioStyle: styleJson.portfolioStyle,\n      backgroundColor: styleJson.backgroundColor,\n      websiteTitleColor: styleJson.text.WebsiteTitle.color,\n      websiteTitleSize: styleJson.text.WebsiteTitle.size,\n      pageHeaderColor: styleJson.text.PageHeader.color,\n      pageHeaderSize: styleJson.text.PageHeader.size,\n      mediumHeaderColor: styleJson.text.MediumHeader.color,\n      mediumHeaderSize: styleJson.text.MediumHeader.size,\n      smallHeaderColor: styleJson.text.SmallHeader.color,\n      smallHeaderSize: styleJson.text.SmallHeader.size,\n      descriptionTextColor: styleJson.text.DescriptionText.color,\n      descriptionTextSize: styleJson.text.DescriptionText.size,\n      navigationLinkColor: styleJson.text.NavigationLink.color,\n      navigationLinkSize: styleJson.text.NavigationLink.size,\n      otherLinkColor: styleJson.text.OtherLink.color,\n      otherLinkSize: styleJson.text.OtherLink.size,\n      hoverOnLinkColor: styleJson.text.HoverOnLink.color,\n      hoverOnLinkSize: styleJson.text.HoverOnLink.size\n    };\n\n    this.resetState = () => {\n      this.setState({\n        selectedColor: '#fff',\n        navigationStyle: styleJson.navigationStyle,\n        portfolioStyle: styleJson.portfolioStyle,\n        backgroundColor: styleJson.backgroundColor,\n        websiteTitleColor: styleJson.text.WebsiteTitle.color,\n        websiteTitleSize: styleJson.text.WebsiteTitle.size,\n        pageHeaderColor: styleJson.text.PageHeader.color,\n        pageHeaderSize: styleJson.text.PageHeader.size,\n        mediumHeaderColor: styleJson.text.MediumHeader.color,\n        mediumHeaderSize: styleJson.text.MediumHeader.size,\n        smallHeaderColor: styleJson.text.SmallHeader.color,\n        smallHeaderSize: styleJson.text.SmallHeader.size,\n        descriptionTextColor: styleJson.text.DescriptionText.color,\n        descriptionTextSize: styleJson.text.DescriptionText.size,\n        navigationLinkColor: styleJson.text.NavigationLink.color,\n        navigationLinkSize: styleJson.text.NavigationLink.size,\n        otherLinkColor: styleJson.text.OtherLink.color,\n        otherLinkSize: styleJson.text.OtherLink.size,\n        hoverOnLinkColor: styleJson.text.HoverOnLink.color,\n        hoverOnLinkSize: styleJson.text.HoverOnLink.size\n      });\n    };\n\n    this.onColorChangeComplete = color => {\n      this.setState({\n        selectedColor: color.hex\n      });\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(event.target.name);\n      console.log(event.target.value); // console.log(`Changing ${event.target.name} state to ${event.target.value}`)\n    };\n\n    this.createNewTextObject = () => {\n      var styleObject = {};\n      styleObject[\"WebsiteTitle\"] = {\n        \"color\": this.state.websiteTitleColor,\n        \"size\": this.state.websiteTitleSize\n      };\n      styleObject[\"PageHeader\"] = {\n        \"color\": this.state.pageHeaderColor,\n        \"size\": this.state.pageHeaderSize\n      };\n      styleObject[\"MediumHeader\"] = {\n        \"color\": this.state.mediumHeaderColor,\n        \"size\": this.state.mediumHeaderSize\n      };\n      styleObject[\"SmallHeader\"] = {\n        \"color\": this.state.smallHeaderColor,\n        \"size\": this.state.smallHeaderSize\n      };\n      styleObject[\"DescriptionText\"] = {\n        \"color\": this.state.decriptionTextColor,\n        \"size\": this.state.descriptionTextSize\n      };\n      styleObject[\"NavigationLink\"] = {\n        \"color\": this.state.navigationLinkColor,\n        \"size\": this.state.navigationLinkSize\n      };\n      styleObject[\"OtherLink\"] = {\n        \"color\": this.state.otherLinkColor,\n        \"size\": this.state.otherLinkSize\n      };\n      styleObject[\"HoverOnLink\"] = {\n        \"color\": this.state.hoverOnLinkColor,\n        \"size\": this.state.hoverOnLinkSize\n      };\n      return styleObject;\n    };\n\n    this.createNewStyleObject = () => {\n      var styleObject = {};\n      var textObject = this.createNewTextObject();\n      styleObject.text = textObject;\n      styleObject.navigationStyle = styleJson.navigationStyle;\n      styleObject.portfolioStyle = styleJson.portfolioStyle;\n      styleObject.backgroundColor = styleJson.backgroundColor;\n      return styleObject;\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      var styleObject = this.createNewStyleObject();\n      fetch('/style/changeStyle', {\n        method: 'POST',\n        body: JSON.stringify(styleObject),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.props.history.push('/');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        alert('Error changing website styling, please try again');\n      });\n    };\n\n    this.onCancel = event => {\n      alert(\"Style values were not saved\");\n      const newJson = JSON.parse(JSON.stringify(styleJson));\n      this.setState({\n        styleObject: newJson\n      });\n    };\n\n    this.onColorChangeComplete = this.onColorChangeComplete.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.setState = this.setState.bind(this);\n  } // Note: State variables are listed this way to avoid nesting state\n  // and to allow a visualization of style changes to update for the user\n  // in real time\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"EditorForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"websiteTitle\",\n      name: \"Website Title\",\n      color: this.state.websiteTitleColor,\n      fontSize: this.state.websiteTitleSize,\n      onChange: this.onChange,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"pageHeader\",\n      name: \"Page Headers\",\n      color: this.state.pageHeaderColor,\n      fontSize: this.state.pageHeaderSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"mediumHeader\",\n      name: \"Medium Headers\",\n      color: this.state.mediumHeaderColor,\n      fontSize: this.state.mediumHeaderSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"smallHeader\",\n      name: \"Small Headers\",\n      color: this.state.smallHeaderColor,\n      fontSize: this.state.smallHeaderSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"descriptionText\",\n      name: \"Description Text\",\n      color: this.state.descriptionTextColor,\n      fontSize: this.state.descriptionTextSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"navigationLinks\",\n      name: \"Navigation Links\",\n      color: this.state.navigationLinkColor,\n      fontSize: this.state.navigationLinkSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"otherLinks\",\n      name: \"Other Links\",\n      color: this.state.otherLinkColor,\n      fontSize: this.state.otherLinkSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(TextStyle, {\n      id: \"hoverOnLink\",\n      name: \"Links on Hover\",\n      color: this.state.hoverOnLinkColor,\n      fontSize: this.state.hoverOnLinkSize,\n      setParentState: this.setState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Save\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 6\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      value: \"Cancel\",\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 6\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nfunction TextStyle(props) {\n  const [fontSize, setFontSize] = useState(props.fontSize);\n\n  const handleFontChange = e => {\n    setFontSize(e.target.value);\n    let key = e.target.name;\n    console.log(key);\n    props.setParentState({\n      [key]: fontSize\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }, \" \", props.name, \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `${props.id}Color`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }\n  }, \" Change color\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: `${props.id}Color`,\n    defaultValue: props.color,\n    onChange: props.onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: `${props.id}Size`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }\n  }, \" Change font size\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    name: `${props.id}Size`,\n    min: \"8\",\n    max: \"40\",\n    defaultValue: fontSize,\n    onMouseUp: props.onChange,\n    className: \"sizeSlider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }\n  }, fontSize));\n}\n\nfunction TextEditorFields(props) {\n  // console.log(props);\n  const textStyleFields = Object.entries(props.textData).map(([key, value]) => /*#__PURE__*/React.createElement(TextStyle, {\n    name: key,\n    color: value.color,\n    fontSize: value.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 6\n    }\n  }));\n  return textStyleFields;\n}\n\nfunction ColorSelector(props) {\n  return /*#__PURE__*/React.createElement(SketchPicker, {\n    color: props.initColor,\n    onChangeComplete: this.onColorChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editStyle.js"],"names":["React","Component","useState","SketchPicker","styleJson","require","Contact","constructor","props","state","selectedColor","navigationStyle","portfolioStyle","backgroundColor","websiteTitleColor","text","WebsiteTitle","color","websiteTitleSize","size","pageHeaderColor","PageHeader","pageHeaderSize","mediumHeaderColor","MediumHeader","mediumHeaderSize","smallHeaderColor","SmallHeader","smallHeaderSize","descriptionTextColor","DescriptionText","descriptionTextSize","navigationLinkColor","NavigationLink","navigationLinkSize","otherLinkColor","OtherLink","otherLinkSize","hoverOnLinkColor","HoverOnLink","hoverOnLinkSize","resetState","setState","onColorChangeComplete","hex","onChange","event","target","name","value","console","log","createNewTextObject","styleObject","decriptionTextColor","createNewStyleObject","textObject","onSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","status","history","push","error","Error","catch","err","alert","onCancel","newJson","parse","bind","render","TextStyle","fontSize","setFontSize","handleFontChange","e","key","setParentState","id","TextEditorFields","textStyleFields","Object","entries","textData","map","ColorSelector","initColor"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { SketchPicker } from 'react-color'\nconst styleJson = require('../style.json');\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onColorChangeComplete = this.onColorChangeComplete.bind(this);\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.setState = this.setState.bind(this);\n\t}\n\n\t// Note: State variables are listed this way to avoid nesting state\n\t// and to allow a visualization of style changes to update for the user\n\t// in real time\n\tstate = {\n\t\tselectedColor: '#fff',\n\t\tnavigationStyle:styleJson.navigationStyle,\n\t\tportfolioStyle:styleJson.portfolioStyle,\n\t\tbackgroundColor:styleJson.backgroundColor,\n\t\twebsiteTitleColor: styleJson.text.WebsiteTitle.color, \n\t\twebsiteTitleSize: styleJson.text.WebsiteTitle.size, \n\t\tpageHeaderColor: styleJson.text.PageHeader.color,\n\t\tpageHeaderSize: styleJson.text.PageHeader.size,\n\t\tmediumHeaderColor: styleJson.text.MediumHeader.color,\n\t\tmediumHeaderSize: styleJson.text.MediumHeader.size,\n\t\tsmallHeaderColor: styleJson.text.SmallHeader.color,\n\t\tsmallHeaderSize: styleJson.text.SmallHeader.size,\n\t\tdescriptionTextColor: styleJson.text.DescriptionText.color,\n\t\tdescriptionTextSize: styleJson.text.DescriptionText.size,\n\t\tnavigationLinkColor: styleJson.text.NavigationLink.color,\n\t\tnavigationLinkSize: styleJson.text.NavigationLink.size,\n\t\totherLinkColor: styleJson.text.OtherLink.color,\n\t\totherLinkSize: styleJson.text.OtherLink.size,\n\t\thoverOnLinkColor: styleJson.text.HoverOnLink.color,\n\t\thoverOnLinkSize: styleJson.text.HoverOnLink.size\n\t}\n\n\tresetState = () => {\n\t\tthis.setState({\n\t\t\tselectedColor: '#fff',\n\t\t\tnavigationStyle:styleJson.navigationStyle,\n\t\t\tportfolioStyle:styleJson.portfolioStyle,\n\t\t\tbackgroundColor:styleJson.backgroundColor,\n\t\t\twebsiteTitleColor: styleJson.text.WebsiteTitle.color, \n\t\t\twebsiteTitleSize: styleJson.text.WebsiteTitle.size, \n\t\t\tpageHeaderColor: styleJson.text.PageHeader.color,\n\t\t\tpageHeaderSize: styleJson.text.PageHeader.size,\n\t\t\tmediumHeaderColor: styleJson.text.MediumHeader.color,\n\t\t\tmediumHeaderSize: styleJson.text.MediumHeader.size,\n\t\t\tsmallHeaderColor: styleJson.text.SmallHeader.color,\n\t\t\tsmallHeaderSize: styleJson.text.SmallHeader.size,\n\t\t\tdescriptionTextColor: styleJson.text.DescriptionText.color,\n\t\t\tdescriptionTextSize: styleJson.text.DescriptionText.size,\n\t\t\tnavigationLinkColor: styleJson.text.NavigationLink.color,\n\t\t\tnavigationLinkSize: styleJson.text.NavigationLink.size,\n\t\t\totherLinkColor: styleJson.text.OtherLink.color,\n\t\t\totherLinkSize: styleJson.text.OtherLink.size,\n\t\t\thoverOnLinkColor: styleJson.text.HoverOnLink.color,\n\t\t\thoverOnLinkSize: styleJson.text.HoverOnLink.size\n\t\t})\n\t}\n\n\tonColorChangeComplete = (color) => {\n\t\tthis.setState({ selectedColor: color.hex });\n\t}\n\n\tonChange = (event)  => {\n\n    \tthis.setState({ [event.target.name]: event.target.value });\n    \tconsole.log(event.target.name);\n    \tconsole.log(event.target.value);\n\n    \t// console.log(`Changing ${event.target.name} state to ${event.target.value}`)\n\t};\n\n\tcreateNewTextObject = () =>{\n\t\tvar styleObject = {}\n\t\tstyleObject[\"WebsiteTitle\"]={\"color\": this.state.websiteTitleColor, \"size\": this.state.websiteTitleSize};\n\t\tstyleObject[\"PageHeader\"]={\"color\": this.state.pageHeaderColor, \"size\": this.state.pageHeaderSize};\n\t\tstyleObject[\"MediumHeader\"]={\"color\": this.state.mediumHeaderColor, \"size\": this.state.mediumHeaderSize};\n\t\tstyleObject[\"SmallHeader\"]={\"color\": this.state.smallHeaderColor, \"size\": this.state.smallHeaderSize};\n\t\tstyleObject[\"DescriptionText\"]={\"color\": this.state.decriptionTextColor, \"size\": this.state.descriptionTextSize};\n\t\tstyleObject[\"NavigationLink\"]={\"color\": this.state.navigationLinkColor, \"size\": this.state.navigationLinkSize};\n\t\tstyleObject[\"OtherLink\"]={\"color\": this.state.otherLinkColor, \"size\": this.state.otherLinkSize};\n\t\tstyleObject[\"HoverOnLink\"]={\"color\": this.state.hoverOnLinkColor, \"size\": this.state.hoverOnLinkSize};\n\t\treturn styleObject;\n\t}\n\n\tcreateNewStyleObject = () => {\n\t\tvar styleObject = {}\n\t\tvar textObject = this.createNewTextObject();\n\t\tstyleObject.text=textObject;\n\t\tstyleObject.navigationStyle=styleJson.navigationStyle;\n\t\tstyleObject.portfolioStyle=styleJson.portfolioStyle;\n\t\tstyleObject.backgroundColor=styleJson.backgroundColor;\n\t\treturn styleObject;\n\t}\n\n\tonSubmit =(event) =>{\n\t\tevent.preventDefault();\n\n\t\tvar styleObject = this.createNewStyleObject();\n\t\tfetch('/style/changeStyle',{\n\t\t\tmethod:'POST',\n\t\t\tbody:JSON.stringify(styleObject),\n\t\t\theaders:{\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tif(res.status===200){\n\t\t\t\tthis.props.history.push('/');\n\t\t\t} else {\n\t\t\t\tconst error = new Error(res.error);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t})\n\t\t.catch(err=>{\n\t\t\tconsole.error(err);\n\t\t\talert('Error changing website styling, please try again');\n\t\t});\n\t}\n\n\tonCancel = (event) =>{\n\t\talert(\"Style values were not saved\");\n\t\tconst newJson = JSON.parse(JSON.stringify(styleJson));\n\t\tthis.setState({\n\t\t\tstyleObject:newJson\n\t\t})\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"Editor\">\n\t\t\t\t<form className=\"EditorForm\">\t\t\t\t\t\n\t\t\t\t\t<TextStyle id=\"websiteTitle\" name=\"Website Title\" color={this.state.websiteTitleColor} fontSize={this.state.websiteTitleSize} onChange={this.onChange} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"pageHeader\" name=\"Page Headers\" color={this.state.pageHeaderColor} fontSize={this.state.pageHeaderSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"mediumHeader\" name=\"Medium Headers\" color={this.state.mediumHeaderColor} fontSize={this.state.mediumHeaderSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"smallHeader\" name=\"Small Headers\" color={this.state.smallHeaderColor} fontSize={this.state.smallHeaderSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"descriptionText\" name=\"Description Text\" color={this.state.descriptionTextColor} fontSize={this.state.descriptionTextSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"navigationLinks\" name=\"Navigation Links\" color={this.state.navigationLinkColor} fontSize={this.state.navigationLinkSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"otherLinks\" name=\"Other Links\" color={this.state.otherLinkColor} fontSize={this.state.otherLinkSize} setParentState={this.setState}/>\n\t\t\t\t\t<TextStyle id=\"hoverOnLink\" name=\"Links on Hover\" color={this.state.hoverOnLinkColor} fontSize={this.state.hoverOnLinkSize} setParentState={this.setState}/>\n\t\t\t\t\t<button type=\"submit\" value=\"Update\">Update</button>\n\t\t\t\t\t<button type=\"submit\" value=\"Save\" onClick={this.onSubmit}>Save</button>\n\t\t\t\t\t<button type=\"reset\" value=\"Cancel\" onClick={this.onCancel}>Cancel</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n\n}       \n\n\nfunction TextStyle(props){\n\tconst [fontSize, setFontSize] = useState(props.fontSize);\n\n\tconst handleFontChange = e => {\n\t    setFontSize(e.target.value);\n\t    let key = e.target.name;\n\t    console.log(key);\n\t    props.setParentState({ [key]:fontSize })\n\t};\n\n\treturn(\n\t\t<div>\n\t\t\t<h2> {props.name} </h2>\n\t\t\t<label htmlFor={`${props.id}Color`}> Change color</label>\n\t\t\t<input type=\"text\" name={`${props.id}Color`} defaultValue={props.color} onChange={props.onChange}/>\n\t\t\t<label htmlFor={`${props.id}Size`} > Change font size</label>\n\t\t\t<input type=\"range\" name={`${props.id}Size`} min=\"8\" max=\"40\" defaultValue={fontSize} onMouseUp={props.onChange} className=\"sizeSlider\"/>\n\t\t\t<div>{fontSize}</div>\n\t\t</div>\n\t)\n}\n\nfunction TextEditorFields(props){\n\t// console.log(props);\n\tconst textStyleFields = Object.entries(props.textData).map(([key, value]) => \n\t    <TextStyle name={key} color={value.color} fontSize={value.size}/>\n\t);\n\treturn textStyleFields;\n}\n\n\n\nfunction ColorSelector(props) {\n\n\treturn (\n      <SketchPicker\n        color={ props.initColor }\n        onChangeComplete={ this.onColorChangeComplete }\n     />\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}