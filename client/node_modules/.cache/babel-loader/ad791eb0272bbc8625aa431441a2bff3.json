{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/helperComponents.js\";\nimport React, { Component, useState } from 'react';\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport PropTypes from \"prop-types\";\nimport ImageErrorCatch from \"src/App/pages/ImageErrorCatch\";\n\nconst images = require.context('../pageImages', true);\n\nconst defaultImage = images(\"./defaultImage.png\");\n\nconst fs = require('fs');\n\nconst BackButton = props => {\n  // props.clearAllData\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backLink\",\n    onClick: props.backPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(FaArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 54\n    }\n  }), \" Back\");\n};\n\nBackButton.propTypes = {\n  backPage: PropTypes.func.isRequired\n};\n\nclass UploadImage extends Component {\n  constructor(props) {\n    super(props);\n    var image;\n\n    try {\n      image = this.props.currentImage ? images(`./${this.props.currentImage}`) : defaultImage;\n      console.log(this.props.currentImage);\n    } catch (error) {\n      console.log(error);\n      image = defaultImage;\n    }\n\n    this.state = {\n      selectedFile: null,\n      image: image\n    };\n    this.changeImage = this.changeImage.bind(this);\n  }\n\n  changeImage(e) {\n    const file = e.target.files[0];\n    this.setState({\n      image: URL.createObjectURL(file),\n      selectedFile: file\n    }, () => {\n      this.props.changeImage(file, file.name);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-upload-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      name: \"mainImage\",\n      className: \"pageImageUpload\",\n      src: this.state.image,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      className: \"fileInput\",\n      onChange: this.changeImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nUploadImage.propTypes = {\n  changeImage: PropTypes.func.isRequired\n};\n/*create a component for each image to enable adding and removing from a portfolio*/\n\nfunction ImageCheckBox(props) {\n  const [checked, setChecked] = useState(props.checked);\n  const toggle = React.useCallback(() => {\n    setChecked(!checked);\n\n    if (!checked) {\n      props.addToPage(props.image.fileName);\n    } else {\n      props.removeFromPage(props.image.fileName);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageSelection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: props.image.fileName,\n    checked: checked,\n    onChange: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ImageErrorCatch, {\n    imgClass: \"checkImage\",\n    src: props.image.fileName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport { BackButton, UploadImage, ImageCheckBox };","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/helperComponents.js"],"names":["React","Component","useState","FaArrowLeft","PropTypes","ImageErrorCatch","images","require","context","defaultImage","fs","BackButton","props","backPage","propTypes","func","isRequired","UploadImage","constructor","image","currentImage","console","log","error","state","selectedFile","changeImage","bind","e","file","target","files","setState","URL","createObjectURL","name","render","ImageCheckBox","checked","setChecked","toggle","useCallback","addToPage","fileName","removeFromPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAR,CAAgB,eAAhB,EAAiC,IAAjC,CAAf;;AACA,MAAMC,YAAY,GAAGH,MAAM,CAAC,oBAAD,CAA3B;;AACA,MAAMI,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMI,UAAU,GAAIC,KAAD,IAAW;AAC7B;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEA,KAAK,CAACC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmD,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnD,UADD;AAGA,CALD;;AAOAF,UAAU,CAACG,SAAX,GAAuB;AACnBD,EAAAA,QAAQ,EAACT,SAAS,CAACW,IAAV,CAAeC;AADL,CAAvB;;AAIA,MAAMC,WAAN,SAA0BhB,SAA1B,CAAoC;AAClCiB,EAAAA,WAAW,CAACN,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACE,QAAIO,KAAJ;;AAEA,QAAG;AACDA,MAAAA,KAAK,GAAG,KAAKP,KAAL,CAAWQ,YAAX,GAA0Bd,MAAM,CAAE,KAAI,KAAKM,KAAL,CAAWQ,YAAa,EAA9B,CAAhC,GAAmEX,YAA3E;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWQ,YAAvB;AACD,KAHD,CAGE,OAAOG,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAJ,MAAAA,KAAK,GAACV,YAAN;AACD;;AAED,SAAKe,KAAL,GAAY;AACVC,MAAAA,YAAY,EAAC,IADH;AAEVN,MAAAA,KAAK,EAACA;AAFI,KAAZ;AAIA,SAAKO,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACb,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,SAAKC,QAAL,CAAc;AACZb,MAAAA,KAAK,EAACc,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CADM;AAEZJ,MAAAA,YAAY,EAAEI;AAFF,KAAd,EAGG,MAAI;AACL,WAAKjB,KAAL,CAAWc,WAAX,CAAuBG,IAAvB,EAA6BA,IAAI,CAACM,IAAlC;AACD,KALD;AAMD;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,IAAI,EAAC,WAAV;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWL,KAAlE;AAAyE,MAAA,GAAG,EAAC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,SAAS,EAAC,WAA1C;AACG,MAAA,QAAQ,EAAE,KAAKO,WADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AASH;;AAxCiC;;AA2CpCT,WAAW,CAACH,SAAZ,GAAsB;AACpBY,EAAAA,WAAW,EAACtB,SAAS,CAACW,IAAV,CAAeC;AADP,CAAtB;AAIA;;AACA,SAASqB,aAAT,CAAuBzB,KAAvB,EAA8B;AAC5B,QAAM,CAAC0B,OAAD,EAAUC,UAAV,IAAwBrC,QAAQ,CAACU,KAAK,CAAC0B,OAAP,CAAtC;AACE,QAAME,MAAM,GAAGxC,KAAK,CAACyC,WAAN,CAAkB,MAAM;AACrCF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;;AACA,QAAI,CAACA,OAAL,EAAc;AACZ1B,MAAAA,KAAK,CAAC8B,SAAN,CAAgB9B,KAAK,CAACO,KAAN,CAAYwB,QAA5B;AACD,KAFD,MAEO;AACL/B,MAAAA,KAAK,CAACgC,cAAN,CAAqBhC,KAAK,CAACO,KAAN,CAAYwB,QAAjC;AACD;AACF,GAPc,CAAf;AAUF,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAE/B,KAAK,CAACO,KAAN,CAAYwB,QAAzC;AAAmD,IAAA,OAAO,EAAEL,OAA5D;AACE,IAAA,QAAQ,EAAEE,MADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAC,YAA1B;AAAuC,IAAA,GAAG,EAAE5B,KAAK,CAACO,KAAN,CAAYwB,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAQD;;AAED,SAAShC,UAAT,EAAqBM,WAArB,EAAkCoB,aAAlC","sourcesContent":["import React, { Component, useState } from 'react';\nimport {FaArrowLeft} from \"react-icons/fa\";\nimport PropTypes from \"prop-types\";\nimport ImageErrorCatch from \"src/App/pages/ImageErrorCatch\";\n\nconst images = require.context('../pageImages', true);\nconst defaultImage = images(\"./defaultImage.png\");\nconst fs = require('fs');\n\nconst BackButton = (props) => {\n\t// props.clearAllData\n\treturn(\n\t\t<div className=\"backLink\" onClick={props.backPage}><FaArrowLeft /> Back</div>\n\t)\n}\n\nBackButton.propTypes = {\n    backPage:PropTypes.func.isRequired\n}\n\nclass UploadImage extends Component {\n  constructor(props) {\n\t\tsuper(props);\n    var image;\n\n    try{\n      image= (this.props.currentImage ? images(`./${this.props.currentImage}`) : defaultImage);\n      console.log(this.props.currentImage);\n    } catch (error) {\n      console.log(error);\n      image=defaultImage;\n    }\n\n    this.state ={\n      selectedFile:null,\n      image:image\n    };\n    this.changeImage = this.changeImage.bind(this);\n \t}\n\n  changeImage(e) {\n    const file = e.target.files[0];\n    this.setState({\n      image:URL.createObjectURL(file),\n      selectedFile: file\n    }, ()=>{\n      this.props.changeImage(file, file.name);\n    });\n  }\n\n  render(){\n      return(\n        <div className=\"main-upload-container\"> \n          <div className=\"form-group\">\n            <img name=\"mainImage\" className=\"pageImageUpload\" src={this.state.image} alt=\"\"/>\n            <input type=\"file\" name=\"image\" className=\"fileInput\" \n              \tonChange={this.changeImage}/>\n          </div>\n        </div>\n      )\n  }\n}\n\nUploadImage.propTypes={\n  changeImage:PropTypes.func.isRequired\n}\n\n/*create a component for each image to enable adding and removing from a portfolio*/\nfunction ImageCheckBox(props) {\n  const [checked, setChecked] = useState(props.checked);\n    const toggle = React.useCallback(() => {\n      setChecked(!checked);\n      if (!checked) {\n        props.addToPage(props.image.fileName)\n      } else {\n        props.removeFromPage(props.image.fileName)\n      }\n    });\n\n\n  return (        \n    <div className=\"imageSelection\">\n      <input type=\"checkbox\" name={props.image.fileName} checked={checked} \n        onChange={toggle}/>\n      <ImageErrorCatch imgClass=\"checkImage\" src={props.image.fileName}/>\n    </div>\n  )\n      \n}\n\nexport { BackButton, UploadImage, ImageCheckBox};\n"]},"metadata":{},"sourceType":"module"}