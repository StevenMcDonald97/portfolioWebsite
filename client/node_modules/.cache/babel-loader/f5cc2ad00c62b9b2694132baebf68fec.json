{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/portfolio.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nconst imageDirectory = \"app/upload/\";\nvar listOfImages = [];\nexport default class Portfolio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageData = () => {\n      axios.get('/api/getPage', {\n        params: {\n          pageId: this.props.pageId,\n          pageType: \"portfolio\"\n        }\n      }).then(response => {\n        this.setState({\n          title: response.data.title,\n          description: response.data.description,\n          imageNames: response.data.images\n        }, () => this.getPortfolioImages());\n      });\n    };\n\n    this.getPortfolioImages = () => {\n      axios.get('/api/getPortfolioImages', {\n        params: {\n          imageNames: this.state.imageNames\n        }\n      }).then(response => {\n        listOfImages = response.data.images;\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        showMod: !this.state.showMod\n      });\n    };\n\n    this.state = {\n      title: '',\n      description: '',\n      imageNames: [],\n      showMod: false,\n      modalImage: {},\n      imageKey: -1\n    };\n    listOfImages = this.props.images;\n    this.changeModalStateInfo = this.changeModalStateInfo.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.getPageData = this.getPageData.bind(this);\n    this.getPortfolioImages = this.getPortfolioImages.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPageData();\n  }\n\n  changeModalStateInfo(modalImage, modalKey) {\n    this.setState({\n      modalImage: modalImage,\n      imageKey: modalKey\n    });\n    console.log(this.state.imageKey);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, listOfImages.map((image, index) => /*#__PURE__*/React.createElement(Image, {\n      key: index,\n      url: `${imageDirectory}${image.fileName}`,\n      description: \"painting\",\n      title: image.title,\n      date: image.date,\n      size: image.size,\n      medium: image.medium,\n      availability: image.availability,\n      price: image.price,\n      changeModalStateInfo: this.changeModalStateInfo,\n      showModal: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(PortfolioModal, {\n      onClose: this.showModal,\n      show: this.state.showMod,\n      img: this.state.modalImage,\n      modalKey: this.state.imageKey,\n      changeModalStateInfo: this.changeModalStateInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nclass Image extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickImage = () => {\n      this.props.changeModalStateInfo(this.props.url, this.props.title, this.props.key);\n      this.props.showModal();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"portfolioImage\",\n      src: this.props.url,\n      alt: this.props.description,\n      onClick: this.clickImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // a different modal component is used here because it needs to be able to \n// flip through images\n\n\nclass PortfolioModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.incrementImage = () => {\n      var newKey;\n      var newImage;\n\n      if (this.props.modalKey < listOfImages.length - 1) {\n        newKey = this.props.modalKey + 1;\n        newImage = listOfImages[newKey];\n        this.props.changeModalStateInfo(newImage, \"title\", newKey);\n      }\n    };\n\n    this.decrementImage = () => {\n      var newKey;\n      var newImage;\n\n      if (this.props.modalKey > 0) {\n        newKey = this.props.modalKey - 1;\n        newImage = listOfImages[newKey];\n        this.props.changeModalStateInfo(newImage, \"title\", newKey);\n      }\n    };\n  }\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-container inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow\",\n      onClick: () => this.decrementImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"\\u2190\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"zoomed-image\",\n      src: `${imageDirectory}${this.props.fileName}`,\n      alt: \"artwork\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"portfolioImgTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, this.props.img.title), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"portfolioImgInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, this.props.img.size ? this.props.img.size : \"\", \" \", this.props.img.medium ? this.props.img.medium : \"\", \" \", this.props.img.price ? this.props.img.price : \"\", \" \", this.props.img.date ? this.props.img.date : \"\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-container inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inline arrow\",\n      onClick: () => this.incrementImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, \"\\u2192\"))));\n  }\n\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/portfolio.js"],"names":["React","Component","PropTypes","axios","imageDirectory","listOfImages","Portfolio","constructor","props","getPageData","get","params","pageId","pageType","then","response","setState","title","data","description","imageNames","images","getPortfolioImages","state","showModal","showMod","modalImage","imageKey","changeModalStateInfo","bind","componentDidMount","modalKey","console","log","render","map","image","index","fileName","date","size","medium","availability","price","Image","clickImage","url","key","PortfolioModal","onClose","e","incrementImage","newKey","newImage","length","decrementImage","show","img","Modal","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nconst imageDirectory = \"app/upload/\"\nvar listOfImages =[];\n\nexport default class Portfolio extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title:'',\n            description:'',\n            imageNames:[],\n            showMod: false,\n            modalImage:{},\n            imageKey:-1\n          };\n        listOfImages=this.props.images;\n        this.changeModalStateInfo = this.changeModalStateInfo.bind(this);\n        this.showModal=this.showModal.bind(this);\n        this.getPageData=this.getPageData.bind(this);\n        this.getPortfolioImages=this.getPortfolioImages.bind(this);\n    }\n\n    getPageData = () =>{\n        axios.get('/api/getPage', { params: {pageId: this.props.pageId, pageType:\"portfolio\" } })\n        .then((response) => {\n          this.setState({\n            title:response.data.title, \n            description:response.data.description, \n            imageNames:response.data.images, \n            }, ()=>this.getPortfolioImages());\n        });\n\n    }\n\n    getPortfolioImages = () => {\n        axios.get('/api/getPortfolioImages', { params: {imageNames:this.state.imageNames} })\n        .then((response)=>{\n            listOfImages=response.data.images\n        });\n    }\n\n    componentDidMount(){\n        this.getPageData();\n    }\n\n\n    changeModalStateInfo(modalImage, modalKey) {\n        this.setState({\n            modalImage: modalImage,\n            imageKey:modalKey\n        })\n        console.log(this.state.imageKey);\n    }\n\n    showModal = () => {\n        this.setState({\n            showMod: !this.state.showMod\n        });\n    };\n\n\n\n    \n    render(){\n        return(\n          <div className=\"row\">\n              {\n                listOfImages.map(\n                    (image, index) =>   \n                        <Image key={index} url={`${imageDirectory}${image.fileName}`} description=\"painting\" title={image.title} date={image.date} size={image.size} medium={image.medium} availability={image.availability} price={image.price} changeModalStateInfo={this.changeModalStateInfo} showModal={this.showModal}></Image>\n                )\n              }\n            <PortfolioModal onClose={this.showModal} show={this.state.showMod} img={this.state.modalImage} modalKey={this.state.imageKey} changeModalStateInfo={this.changeModalStateInfo}/>\n\n          </div>\n        )\n    }\n}\n\nclass Image extends Component {\n    clickImage = () => {\n        this.props.changeModalStateInfo(this.props.url, this.props.title, this.props.key);\n        this.props.showModal(); \n    }\n\n    render() {\n        return (\n            <div className=\"column\">\n                <div className=\"content\">\n                    <img className=\"portfolioImage\" src={this.props.url} alt={this.props.description} onClick = {this.clickImage}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n// a different modal component is used here because it needs to be able to \n// flip through images\nclass PortfolioModal extends Component {\n\n    onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n\n    incrementImage = () => {\n        var newKey;\n        var newImage;\n        if ((this.props.modalKey<listOfImages.length-1)){\n            newKey = this.props.modalKey+1;\n            newImage = listOfImages[newKey];\n            this.props.changeModalStateInfo(newImage, \"title\", newKey);\n        }\n    }\n\n    decrementImage = () => {\n        var newKey;\n        var newImage;\n        if ((this.props.modalKey>0)){\n            newKey = this.props.modalKey-1;\n            newImage = listOfImages[newKey];\n            this.props.changeModalStateInfo(newImage, \"title\", newKey);\n        }\n\n    }\n  \n    render() {\n        if (!this.props.show) {\n            return null;\n        }\n        return (\n            <div className=\"modal\" id=\"modal\">\n                <div className=\"modal-header\">\n                    <span className=\"close\" onClick={this.onClose}>&times;</span>\n                </div>\n                <div className=\"inner-modal\">\n                    <div className=\"arrow-container inline\">\n                        <div className=\"arrow\" onClick={()=>this.decrementImage()}>&larr;</div>\n                    </div>\n                    <div className=\"modal-content inline\">\n                        <div className=\"inline\">\n                            <img className=\"zoomed-image\" src={`${imageDirectory}${this.props.fileName}`} alt=\"artwork\"/>\n                            <h3 className=\"portfolioImgTitle\">\n                                {this.props.img.title}\n                            </h3>\n                            <h4 className=\"portfolioImgInfo\">\n                                { (this.props.img.size) ? this.props.img.size : \"\" } { (this.props.img.medium) ? this.props.img.medium : \"\"} {  (this.props.img.price) ? this.props.img.price : \"\" } {  (this.props.img.date) ? this.props.img.date : \"\" }\n                            </h4>\n\n                        </div>\n                    </div>\n                    <div className=\"arrow-container inline\">\n                        <div className=\"inline arrow\" onClick={()=>this.incrementImage()}>&rarr;</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    show: PropTypes.bool.isRequired\n  };"]},"metadata":{},"sourceType":"module"}