{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js\";\n// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\"; // Font Awesome\n\nimport ImageEditor from \"App/securePages/imageEditor\";\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addImage = (link, fileName) => {\n      let urls = this.state.imgURLs;\n      urls.push(link);\n      this.setState({\n        imgURLs: urls\n      });\n      const values = this.state.imageData;\n      values.push({\n        fileName: fileName,\n        title: '',\n        date: '',\n        size: '',\n        medium: '',\n        availability: '',\n        price: '',\n        portfolio: ''\n      });\n      this.setState({\n        imageData: values\n      }, () => {\n        if (this.state.imageData.length === this.state.selectedFiles.length) {\n          this.setState({\n            filesChosen: true\n          });\n        }\n      });\n    };\n\n    this.removeImage = index => {\n      let files = this.state.selectedFiles;\n      files.splice(index, 1);\n      this.setState({\n        selectedFiles: files\n      });\n    };\n\n    this.state = {\n      filesChosen: false,\n      selectedFiles: [],\n      imageData: [],\n      imgURLs: []\n    };\n    this.createImages = this.createImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    if (filesChosen) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  createImages(e) {\n    this.setState({\n      selectedFiles: Array.from(e.target.files)\n    }, () => {\n      for (let i = 0; i < this.state.selectedFiles.length; i++) {\n        this.addImage(URL.createObjectURL(this.state.selectedFiles[i]), this.state.selectedFiles[i].name);\n      }\n    });\n  }\n\n  uploadImages(images) {\n    const data = new FormData();\n\n    for (var x = 0; x < this.state.selectedFiles.length; x++) {\n      data.append('file', this.state.selectedFiles[x]);\n    }\n\n    axios.post(\"/upload/uploadImages\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Image upload returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n    axios.post(\"/upload/storeImagesInDB\", images, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Storing images in database returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    if (this.state.filesChosen) {\n      return /*#__PURE__*/React.createElement(ImageEditor, {\n        imgURLs: this.state.imgURLs,\n        images: this.state.imageData,\n        removeImageFromParent: this.removeImage,\n        onSubmit: this.uploadImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"main-upload-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"main-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, \" Upload an Image \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: this.createImages,\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js"],"names":["React","Component","axios","FaTrashAlt","ImageEditor","Contact","constructor","props","addImage","link","fileName","urls","state","imgURLs","push","setState","values","imageData","title","date","size","medium","availability","price","portfolio","length","selectedFiles","filesChosen","removeImage","index","files","splice","createImages","bind","uploadImages","shouldComponentUpdate","e","Array","from","target","i","URL","createObjectURL","name","images","data","FormData","x","append","post","then","res","console","log","statusText","catch","err","render"],"mappings":"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","sourcesContent":["// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component} from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\";  // Font Awesome\nimport ImageEditor from \"App/securePages/imageEditor\";\n\nexport default class Contact extends Component {\n  constructor(props) {\n\t\tsuper(props);\n    this.state ={\n      filesChosen:false,\n      selectedFiles: [],\n      imageData:[],\n      imgURLs:[]\n    };\n    this.createImages = this.createImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n  }\n\n  shouldComponentUpdate () {\n    if(filesChosen){\n      return false \n    } else {\n      return true\n    }\n  }\n\n  createImages(e) {\n    this.setState({\n      selectedFiles: Array.from(e.target.files),\n    }, ()=> { \n      for (let i =0; i<this.state.selectedFiles.length;i++){\n        this.addImage(URL.createObjectURL(this.state.selectedFiles[i]), this.state.selectedFiles[i].name);\n      }\n    });\n  }\n\n  addImage = (link, fileName) => {\n    let urls=this.state.imgURLs;\n    urls.push(link);\n    this.setState({imgURLs: urls})\n      const values = this.state.imageData;\n      values.push({\n          fileName:fileName,\n          title:'',\n          date:'',\n          size:'',\n          medium:'',\n          availability:'',\n          price:'',\n          portfolio:''\n        });\n\n      this.setState({imageData:values}, ()=>{\n        if (this.state.imageData.length===this.state.selectedFiles.length) {\n          this.setState({filesChosen:true});\n        }\n      });\n  };\n\n  removeImage = (index) => {\n    let files = this.state.selectedFiles;\n    files.splice(index, 1);\n    this.setState({selectedFiles:files});\n  };\n\n  uploadImages(images) {\n    const data = new FormData();\n    for(var x = 0; x<this.state.selectedFiles.length; x++) {\n           data.append('file', this.state.selectedFiles[x])\n    }\n    axios.post(\"/upload/uploadImages\", data, { \n          // receive two    parameter endpoint url ,form data\n    }).then(res => { // then print response status\n        console.log(`Image upload returned: ${res.statusText}`)\n\n    }).catch(err => console.log(err));\n\n    axios.post(\"/upload/storeImagesInDB\", images, { \n          // receive two    parameter endpoint url ,form data\n    }).then(res => { // then print response status\n        console.log(`Storing images in database returned: ${res.statusText}`)\n    }).catch(err => console.log(err));\n  }\n\n  render(){\n    if(this.state.filesChosen)\n    {\n      return(        \n        <ImageEditor imgURLs={this.state.imgURLs} \n          images={this.state.imageData} \n          removeImageFromParent={this.removeImage} \n          onSubmit={this.uploadImages}/>\n      )\n    } else {\n      return(\n        <div className=\"main-upload-container\"> \n          <h3 className=\"main-heading\"> Upload an Image </h3>\n          <div className=\"form-group\">\n              <input type=\"file\" className=\"form-control\" onChange={this.createImages} multiple />\n          </div>\n        </div>\n      )\n    }\n  }\n }\n\n"]},"metadata":{},"sourceType":"module"}