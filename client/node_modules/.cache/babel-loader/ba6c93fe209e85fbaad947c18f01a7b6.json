{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/editImages.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ImageEditor from \"src/App/admin/imageEditor\";\nimport ErrorBoundary from 'src/App/errorBoundary';\n\nconst images = require.context('../images', true);\n\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeImage = index => {\n      let deleted = this.state.deletedImages;\n      deleted.push(this.state.images[index].fileName);\n      this.setState({\n        deletedImages: deleted\n      });\n      let values = this.state.images;\n      values.splice(index, 1);\n      this.setState({\n        images: values\n      });\n    };\n\n    this.state = {\n      images: [],\n      imgURLs: [],\n      deletedImages: [],\n      finishedLoadingImages: false\n    };\n    this.loadImages = this.loadImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    return !(this.state.imgURLs.length === this.state.images.length && this.state.finishedLoadingImages);\n  }\n\n  componentDidMount() {\n    this.loadImages();\n  }\n\n  loadImages() {\n    /* fetch all images from database */\n    axios.get('/image/getAll').then(response => {\n      this.setState({\n        images: response.data\n      });\n      let values = this.state.imgURLs;\n      response.data.forEach((image, index) => {\n        try {\n          values.push(images(`./${image.fileName}`));\n        } catch (error) {\n          values.push(images(\"./defaultImage.png\"));\n          console.log(\"Could not load image \" + image.fileName);\n          console.log(\"Error: \" + error);\n        }\n      });\n      this.setState({\n        imgURLs: values,\n        finishedLoadingImages: true\n      });\n    });\n  }\n\n  onSubmit(images) {\n    axios.post(\"/edit/editImages\", images, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      alert(res.data);\n    }).catch(err => console.log(err));\n    axios.post(\"/remove/removeImages\", this.state.deletedImages, {}).then(res => {\n      // then print response status\n      console.log(`Deleteing images from database returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    if (this.state.images.length > 0) {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageEditor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ImageEditor, Object.assign({\n        imageURLs: this.state.imgURLs,\n        images: this.state.images,\n        removeImageFromParent: this.removeImage,\n        backPage: () => this.props.history.push('/userPanel'),\n        onSubmit: this.onSubmit\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"No Images to Edit\");\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/editImages.js"],"names":["React","Component","axios","ImageEditor","ErrorBoundary","images","require","context","Contact","constructor","props","removeImage","index","deleted","state","deletedImages","push","fileName","setState","values","splice","imgURLs","finishedLoadingImages","loadImages","bind","onSubmit","shouldComponentUpdate","length","componentDidMount","get","then","response","data","forEach","image","error","console","log","post","res","alert","catch","err","statusText","render","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAR,CAAgB,WAAhB,EAA6B,IAA7B,CAAf;;AAEA,eAAe,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC9CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAwCnBC,WAxCmB,GAwCJC,KAAD,IAAW;AACxB,UAAIC,OAAO,GAAC,KAAKC,KAAL,CAAWC,aAAvB;AACAF,MAAAA,OAAO,CAACG,IAAR,CAAa,KAAKF,KAAL,CAAWT,MAAX,CAAkBO,KAAlB,EAAyBK,QAAtC;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,aAAa,EAACF;AAAf,OAAd;AAEA,UAAIM,MAAM,GAAG,KAAKL,KAAL,CAAWT,MAAxB;AACAc,MAAAA,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqB,CAArB;AACA,WAAKM,QAAL,CAAc;AAACb,QAAAA,MAAM,EAACc;AAAR,OAAd;AACA,KAhDkB;;AAElB,SAAKL,KAAL,GAAY;AACXT,MAAAA,MAAM,EAAE,EADG;AAEXgB,MAAAA,OAAO,EAAC,EAFG;AAGXN,MAAAA,aAAa,EAAC,EAHH;AAIXO,MAAAA,qBAAqB,EAAE;AAJZ,KAAZ;AAMA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKb,WAAL,GAAiB,KAAKA,WAAL,CAAiBa,IAAjB,CAAsB,IAAtB,CAAjB;AACA,SAAKC,QAAL,GAAc,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAd;AACG;;AAEDE,EAAAA,qBAAqB,GAAI;AACxB,WAAO,EAAG,KAAKZ,KAAL,CAAWO,OAAX,CAAmBM,MAAnB,KAA4B,KAAKb,KAAL,CAAWT,MAAX,CAAkBsB,MAA/C,IAA0D,KAAKb,KAAL,CAAWQ,qBAAvE,CAAP;AACH;;AAEDM,EAAAA,iBAAiB,GAAE;AAClB,SAAKL,UAAL;AACA;;AAEDA,EAAAA,UAAU,GAAE;AACX;AACArB,IAAAA,KAAK,CAAC2B,GAAN,CAAU,eAAV,EACGC,IADH,CACSC,QAAD,IAAc;AACnB,WAAKb,QAAL,CAAc;AAACb,QAAAA,MAAM,EAAC0B,QAAQ,CAACC;AAAjB,OAAd;AACA,UAAIb,MAAM,GAAC,KAAKL,KAAL,CAAWO,OAAtB;AACAU,MAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAACC,KAAD,EAAQtB,KAAR,KAAgB;AACrC,YAAG;AACFO,UAAAA,MAAM,CAACH,IAAP,CAAYX,MAAM,CAAE,KAAI6B,KAAK,CAACjB,QAAS,EAArB,CAAlB;AACA,SAFD,CAEE,OAAOkB,KAAP,EAAc;AACjBhB,UAAAA,MAAM,CAACH,IAAP,CAAYX,MAAM,CAAC,oBAAD,CAAlB;AACE+B,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAwBH,KAAK,CAACjB,QAA1C;AACAmB,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAUF,KAAtB;AACA;AACD,OARD;AASA,WAAKjB,QAAL,CAAc;AAACG,QAAAA,OAAO,EAACF,MAAT;AAAiBG,QAAAA,qBAAqB,EAAC;AAAvC,OAAd;AACF,KAdD;AAeA;;AAYDG,EAAAA,QAAQ,CAACpB,MAAD,EAAQ;AACfH,IAAAA,KAAK,CAACoC,IAAN,CAAW,kBAAX,EAA+BjC,MAA/B,EAAuC,CAC9B;AAD8B,KAAvC,EAEMyB,IAFN,CAEWS,GAAG,IAAI;AAAE;AACbC,MAAAA,KAAK,CAACD,GAAG,CAACP,IAAL,CAAL;AACH,KAJJ,EAIMS,KAJN,CAIYC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAJnB;AAMGxC,IAAAA,KAAK,CAACoC,IAAN,CAAW,sBAAX,EAAmC,KAAKxB,KAAL,CAAWC,aAA9C,EAA6D,EAA7D,EAAiEe,IAAjE,CAAsES,GAAG,IAAI;AAAE;AAC3EH,MAAAA,OAAO,CAACC,GAAR,CAAa,4CAA2CE,GAAG,CAACI,UAAW,EAAvE;AACH,KAFD,EAEGF,KAFH,CAESC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAFhB;AAGH;;AAEDE,EAAAA,MAAM,GAAE;AACP,QAAI,KAAK9B,KAAL,CAAWT,MAAX,CAAkBsB,MAAlB,GAAyB,CAA7B,EAA+B;AAC9B,0BACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWO,OAAnC;AACC,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWT,MADpB;AAEC,QAAA,qBAAqB,EAAE,KAAKM,WAF7B;AAGC,QAAA,QAAQ,EAAE,MAAI,KAAKD,KAAL,CAAWmC,OAAX,CAAmB7B,IAAnB,CAAwB,YAAxB,CAHf;AAIC,QAAA,QAAQ,EAAE,KAAKS;AAJhB,SAKK,KAAKf,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,CADD,CADJ;AAYA,KAbD,MAaO;AACN,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACA;AAED;;AAjF6C","sourcesContent":["import React, { Component} from 'react';\nimport axios from 'axios';\nimport ImageEditor from \"src/App/admin/imageEditor\";\nimport ErrorBoundary from 'src/App/errorBoundary';\nconst images = require.context('../images', true);\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\timages: [],\n\t\t\timgURLs:[],\n\t\t\tdeletedImages:[],\n\t\t\tfinishedLoadingImages: false\n\t\t};\n\t\tthis.loadImages = this.loadImages.bind(this);\n\t\tthis.removeImage=this.removeImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n   \t}\n\n   \tshouldComponentUpdate () {\n\t    return !((this.state.imgURLs.length===this.state.images.length) && this.state.finishedLoadingImages);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadImages();\n\t}\n\n\tloadImages(){\n\t\t/* fetch all images from database */\n\t\taxios.get('/image/getAll')\n\t\t  .then((response) => {\n\t\t  \tthis.setState({images:response.data});\n\t\t  \tlet values=this.state.imgURLs;\n\t\t  \tresponse.data.forEach((image, index)=>{\n\t\t  \t\ttry{\n\t\t  \t\t\tvalues.push(images(`./${image.fileName}`));\n\t\t  \t\t} catch (error) {\n\t\t\t\t\tvalues.push(images(\"./defaultImage.png\"));\n\t\t  \t\t\tconsole.log(\"Could not load image \"+image.fileName)\n\t\t  \t\t\tconsole.log(\"Error: \"+error);\n\t\t  \t\t}\n\t\t  \t})\n\t\t  \tthis.setState({imgURLs:values, finishedLoadingImages:true})\n\t\t});\n\t}\n\n\tremoveImage = (index) => {\n\t\tlet deleted=this.state.deletedImages;\n\t\tdeleted.push(this.state.images[index].fileName);\n\t\tthis.setState({deletedImages:deleted});\n\n\t\tlet values = this.state.images;\n\t\tvalues.splice(index, 1);\n\t\tthis.setState({images:values});\n\t};\n\n\tonSubmit(images){\n\t\taxios.post(\"/edit/editImages\", images, { \n\t          // receive two    parameter endpoint url ,form data\n\t    }).then(res => { // then print response status\n\t        alert(res.data)\n\t    }).catch(err => console.log(err));\n\n\t    axios.post(\"/remove/removeImages\", this.state.deletedImages, {}).then(res => { // then print response status\n\t        console.log(`Deleteing images from database returned: ${res.statusText}`)\n\t    }).catch(err => console.log(err));\n\t}\n\n\trender(){\n\t\tif (this.state.images.length>0){\n\t\t\treturn(\n\t    \t\t<ErrorBoundary>\n\t    \t\t\t<div className=\"pageEditor\">\n\t\t\t    \t\t<ImageEditor imageURLs={this.state.imgURLs} \n\t\t\t\t    \t\timages={this.state.images} \n\t\t\t\t    \t\tremoveImageFromParent={this.removeImage} \n\t\t\t\t    \t\tbackPage={()=>this.props.history.push('/userPanel')}\n\t\t\t\t    \t\tonSubmit={this.onSubmit}\n\t\t\t\t    \t\t{...this.props}/>\n\t\t\t\t    </div>\n\t\t\t    </ErrorBoundary>\n\t\t\t)\n\t\t} else {\n\t\t\treturn <h3>No Images to Edit</h3>\n\t\t}\n\t\n\t}\n }\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}