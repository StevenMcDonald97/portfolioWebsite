{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js\";\n// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DefaultImg from '../profileimages/default-image.png';\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      multerImage: DefaultImg,\n      firebaseImage: DefaultImg,\n      baseImage: DefaultImg\n    };\n  }\n\n  setDefaultImage(uploadType) {\n    if (uploadType === \"multer\") {\n      this.setState({\n        multerImage: DefaultImg\n      });\n    } else if (uploadType === \"firebase\") {\n      this.setState({\n        firebaseImage: DefaultImg\n      });\n    } else {\n      this.setState({\n        baseImage: DefaultImg\n      });\n    }\n  }\n\n  uploadAllImages(e, method) {\n    // [...e.target.files].map( file => {console.log(file)});\n    let images = [...e.target.files].map(file => {\n      this.uploadImage(file);\n    });\n    console.log(e.target.files[0]);\n    this.setState({\n      multerImage: URL.createObjectURL(e.target.files[0])\n    });\n    axios.post('/image/uploadmulter', {\n      'Images': images\n    }).then(data => {\n      if (data.data.success) {\n        alert(\"Images have been succesfully uploaded using multer\");\n        this.setDefaultImage(\"multer\");\n      }\n    }).catch(err => {\n      alert(\"Error while uploading these images\");\n      console.error(err);\n      this.setDefaultImage(\"multer\");\n    });\n  }\n\n  uploadImage(file) {\n    let imageObj = {};\n    let imageFormObj = new Object(); // TODO have url set properly\n\n    imageFormObj[\"imageData\"] = file; // imageFormObj.append(\"imageName\", \"multer-image-\"+ Date.now());\n    // imageFormObj.append(\"imageDate\", \"\");\n    // imageFormObj.append(\"imageSize\", \"\");\n    // imageFormObj.append(\"imageMedium\", \"\");\n    // imageFormObj.append(\"imagePortfolio\", \"\");\n\n    return imageFormObj;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-upload-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"main-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    }, \" Upload Images \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"uploadForm\",\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"process_details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }\n    }, \"Upload images to your portfolio(s)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"process_upload-btn\",\n      onChange: e => this.uploadAllImages(e),\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.multerImage,\n      alt: \"upload-image\",\n      className: \"process_image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js"],"names":["React","Component","axios","DefaultImg","Contact","constructor","props","state","multerImage","firebaseImage","baseImage","setDefaultImage","uploadType","setState","uploadAllImages","e","method","images","target","files","map","file","uploadImage","console","log","URL","createObjectURL","post","then","data","success","alert","catch","err","error","imageObj","imageFormObj","Object","render"],"mappings":"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","sourcesContent":["// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DefaultImg from '../profileimages/default-image.png'\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmulterImage : DefaultImg,\n\t\t\tfirebaseImage: DefaultImg,\n\t\t\tbaseImage: DefaultImg\n\t\t}\n\t}\n\n\tsetDefaultImage(uploadType){\n\t\tif (uploadType === \"multer\") {\n\t\t\tthis.setState({\n\t\t\t\tmulterImage: DefaultImg\n\t\t\t});\n\t\t} else if (uploadType === \"firebase\") {\n\t\t\tthis.setState({\n\t\t\t\tfirebaseImage: DefaultImg\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tbaseImage: DefaultImg\n\t\t\t});\n\t\t}\n\t}\n\n\tuploadAllImages(e, method){\n\t\t// [...e.target.files].map( file => {console.log(file)});\n\t\tlet images = [...e.target.files].map( file => { this.uploadImage(file) });\n\t\tconsole.log(e.target.files[0]);\n\n\t\tthis.setState({\n\t\t\tmulterImage: URL.createObjectURL(e.target.files[0])\n\t\t});\n\n\t\taxios.post('/image/uploadmulter', {'Images': images})\n\t\t.then((data)=> {\n\t\t\tif (data.data.success) {\n\t\t\t\talert(\"Images have been succesfully uploaded using multer\");\n\t\t\t\tthis.setDefaultImage(\"multer\");\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\talert(\"Error while uploading these images\");\n\t\t\tconsole.error(err);\n\t\t\tthis.setDefaultImage(\"multer\");\n\t\t});\n\t}\n\n\tuploadImage(file){\n\t\tlet imageObj = {};\n\n\t\tlet imageFormObj = new Object();\n\n\t\t// TODO have url set properly\n\t\timageFormObj[\"imageData\"]= file;\n\t\t// imageFormObj.append(\"imageName\", \"multer-image-\"+ Date.now());\n\t\t// imageFormObj.append(\"imageDate\", \"\");\n\t\t// imageFormObj.append(\"imageSize\", \"\");\n\t\t// imageFormObj.append(\"imageMedium\", \"\");\n\t\t// imageFormObj.append(\"imagePortfolio\", \"\");\n\n\t\treturn imageFormObj; \n\t}\n\n\n\n\n  render(){\n  \treturn(\n\n  \t\t<div className=\"main-upload-container\"> \n  \t\t\t<h3 className=\"main-heading\"> Upload Images </h3>\n  \t\t\t<div className =\"image-container\">\n  \t\t\t\t<form id=\"uploadForm\" encType=\"multipart/form-data\">\n  \t\t\t\t\t<p className=\"process_details\">Upload images to your portfolio(s)</p>\n  \t\t\t\t\t<input type=\"file\" className=\"process_upload-btn\" onChange={(e) =>this.uploadAllImages(e)} multiple/>\n  \t\t\t\t\t<img src={this.state.multerImage} alt=\"upload-image\" className=\"process_image\" />\n  \t\t\t\t</form>\n  \t\t\t</div>\n  \t\t</div>\n\n\n\n  \t\t)\n  }\n\n }\n\n"]},"metadata":{},"sourceType":"module"}