{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/withAuth.jsx\";\n//a higher order component which will conditionally render a component if the user has the authorization to view it\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    componentDidMount() {\n      fetch('/checkToken').then(res => {\n        if (res.status === 200) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          loading: false,\n          redirect: true\n        });\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        redirect\n      } = this.state;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }));\n    }\n\n  };\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/withAuth.jsx"],"names":["React","Component","Redirect","withAuth","ComponentToProtect","constructor","state","loading","redirect","componentDidMount","fetch","then","res","status","setState","error","Error","catch","err","console","render","props"],"mappings":";AAAA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AACpD,SAAO,cAAcH,SAAd,CAAwB;AAC3BI,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OAAb;AAID;;AAEDC,IAAAA,iBAAiB,GAAG;AAClBC,MAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAKC,QAAL,CAAc;AAAEP,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAFD,MAEO;AACL,gBAAMQ,KAAK,GAAG,IAAIC,KAAJ,CAAUJ,GAAG,CAACG,KAAd,CAAd;AACA,gBAAMA,KAAN;AACD;AACF,OARH,EASGE,KATH,CASSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACJ,KAAR,CAAcG,GAAd;AACA,aAAKJ,QAAL,CAAc;AAAEP,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OAZH;AAaD;;AAEDY,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEb,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAwB,KAAKF,KAAnC;;AACA,UAAIC,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;;AACD,UAAIC,QAAJ,EAAc;AACZ,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,0BAAO,oBAAC,kBAAD,oBAAwB,KAAKa,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAlC0B,GAA/B;AAoCA","sourcesContent":["//a higher order component which will conditionally render a component if the user has the authorization to view it\n\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function withAuth(ComponentToProtect) {  \n\treturn class extends Component {\n\t    constructor() {\n\t      super();\n\t      this.state = {\n\t        loading: true,\n\t        redirect: false,\n\t      };\n\t    }    \n\n\t    componentDidMount() {\n\t      fetch('/checkToken')\n\t        .then(res => {\n\t          if (res.status === 200) {\n\t            this.setState({ loading: false });\n\t          } else {\n\t            const error = new Error(res.error);\n\t            throw error;\n\t          }\n\t        })\n\t        .catch(err => {\n\t          console.error(err);\n\t          this.setState({ loading: false, redirect: true });\n\t        });\n\t    }  \n\t      \n\t    render() {\n\t      const { loading, redirect } = this.state;\n\t      if (loading) {\n\t        return null;\n\t      }\n\t      if (redirect) {\n\t        return <Redirect to=\"/login\" />;\n\t      }\n\t      return <ComponentToProtect {...this.props} />;\n\t    }\n\t}\n}"]},"metadata":{},"sourceType":"module"}