{"ast":null,"code":"import _objectWithoutProperties from\"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';import{authenticationService}from'src/App/admin/authentication/authenticationService';export var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){var currentUser=authenticationService.currentUserValue;if(!currentUser){// not logged in so redirect to login page with the return url\nreturn/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/login',state:{from:props.location}}});}// authorised so return component\nreturn/*#__PURE__*/React.createElement(Component,props);}}));};","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/authentication/privateRoute.js"],"names":["React","Route","Redirect","authenticationService","PrivateRoute","Component","component","rest","props","currentUser","currentUserValue","pathname","state","from","location"],"mappings":"+MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,qBAAT,KAAsC,oDAAtC,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAcC,CAAAA,SAAd,MAAGC,SAAH,CAA4BC,IAA5B,iEACxB,oBAAC,KAAD,kBAAWA,IAAX,EAAiB,MAAM,CAAE,gBAAAC,KAAK,CAAI,CAC9B,GAAMC,CAAAA,WAAW,CAAGN,qBAAqB,CAACO,gBAA1C,CACA,GAAI,CAACD,WAAL,CAAkB,CACd;AACA,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAEE,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAE,CAAEC,IAAI,CAAEL,KAAK,CAACM,QAAd,CAA7B,CAAd,EAAP,CACH,CACD;AACA,mBAAO,oBAAC,SAAD,CAAeN,KAAf,CAAP,CACH,CARD,GADwB,EAArB","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authenticationService } from 'src/App/admin/authentication/authenticationService';\n\nexport const PrivateRoute = ({ component: Component, ...rest}) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\n"]},"metadata":{},"sourceType":"module"}