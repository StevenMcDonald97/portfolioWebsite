{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js\";\n// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      pictures: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n    this.state = {\n      files: null\n    };\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n    console.log(this.state.pictures);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.fileInput.current.files); // let imageFormObj = new FormData();\n    // imageFormObj.append(\"name\", \"multi-files\");\n    // imageFormObj.append(\"files\", this.fileInput.current.files);\n\n    axios.post('/upload/multiple-upload', this.fileInput.current.files).then(data => {\n      if (data.data.success) {\n        alert(\"Image succcesfully uploaded\");\n      }\n    }).catch(err => {\n      alert(\"Error while uploading image\");\n    });\n  }\n\n  uploadImage(e) {\n    e.preventDefault();\n    let imageFormObj = new FormData();\n    imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\n    imageFormObj.append(\"imageData\", e.target.files[0]);\n    axios.post(`/image/uploadmulter`, imageFormObj).then(data => {\n      if (data.data.success) {\n        alert(\"Image succcesfully uploaded\");\n      }\n    }).catch(err => {\n      alert(\"Error while uploading image\");\n    });\n  }\n\n  onChange(e) {\n    console.log(e.target);\n  } //     <input id=\"upload\" ref=\"upload\" type=\"file\" accept=\"image/*\"\n  //            onChange={(event)=> { \n  //                this.readFile(event) \n  //           }}\n  //         onClick={(event)=> { \n  //                event.target.value = null\n  //           }}\n  // />\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(e); //   const options = {\n    //     url: '/upload/multiple-upload',\n    //     method: 'POST',\n    //     headers: {\n    //       'Accept': 'application/json',\n    //       'Content-Type': 'application/json;charset=UTF-8'\n    //     },\n    //     data: styleObject\n    //   };\n    // axios(options)\n    //   .then(response => {\n    //     console.log(response.status);\n    //   });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-upload-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"main-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 6\n      }\n    }, \" Upload an Image \"), /*#__PURE__*/React.createElement(ImageUploader, {\n      withIcon: false,\n      withPreview: true,\n      label: \"\",\n      buttonText: \"Upload Images\",\n      onChange: this.onDrop,\n      imgExtension: [\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\", \".svg\"],\n      maxFileSize: 1048576,\n      fileSizeError: \" file size is too big\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js"],"names":["React","Component","axios","ImageUploader","Contact","constructor","props","fileInput","createRef","handleSubmit","bind","state","pictures","onDrop","files","picture","setState","concat","console","log","event","preventDefault","current","post","then","data","success","alert","catch","err","uploadImage","e","imageFormObj","FormData","append","Date","now","target","onChange","onSubmit","render"],"mappings":"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","sourcesContent":["// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n        this.fileInput = React.createRef();\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n\n        this.state = { pictures: [] };\n        this.onDrop = this.onDrop.bind(this);\n\n        this.state ={\n            files: null\n        };\n   \t}\n\n  onDrop(picture) {\n      this.setState({\n          pictures: this.state.pictures.concat(picture),\n      });\n      console.log(this.state.pictures);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\n      this.fileInput.current.files\n    );\n\n    // let imageFormObj = new FormData();\n    // imageFormObj.append(\"name\", \"multi-files\");\n    // imageFormObj.append(\"files\", this.fileInput.current.files);\n\n    axios.post('/upload/multiple-upload', this.fileInput.current.files)\n      .then((data)=>{\n        if(data.data.success){\n          alert(\"Image succcesfully uploaded\");\n        }\n      })\n      .catch((err)=> {\n        alert(\"Error while uploading image\");\n      });\n\n  }\n\n\tuploadImage(e){\n      e.preventDefault();\n      \n      let imageFormObj = new FormData();\n      imageFormObj.append(\"imageName\", \"multer-image-\"+ Date.now());\n      imageFormObj.append(\"imageData\", e.target.files[0]);\n\n      axios.post(`/image/uploadmulter`, imageFormObj)\n        .then((data)=>{\n          if(data.data.success){\n            alert(\"Image succcesfully uploaded\");\n          }\n        })\n        .catch((err)=> {\n          alert(\"Error while uploading image\");\n        });\n\n\n\n    }\n\n    onChange(e){\n      console.log(e.target);\n    }\n\n//     <input id=\"upload\" ref=\"upload\" type=\"file\" accept=\"image/*\"\n//            onChange={(event)=> { \n//                this.readFile(event) \n//           }}\n//         onClick={(event)=> { \n//                event.target.value = null\n//           }}\n\n// />\n\n    onSubmit(e) {\n      e.preventDefault();\n      console.log(e);\n\n    //   const options = {\n    //     url: '/upload/multiple-upload',\n    //     method: 'POST',\n    //     headers: {\n    //       'Accept': 'application/json',\n    //       'Content-Type': 'application/json;charset=UTF-8'\n    //     },\n    //     data: styleObject\n    //   };\n\n    // axios(options)\n    //   .then(response => {\n    //     console.log(response.status);\n    //   });\n\n    }\n\n\n  render(){\n  \treturn(\n\n  \t\t<div className=\"main-upload-container\"> \n  \t\t\t<h3 className=\"main-heading\"> Upload an Image </h3>\n        <ImageUploader\n              withIcon={false}\n              withPreview={true}\n              label=\"\"\n              buttonText=\"Upload Images\"\n              onChange={this.onDrop}\n              imgExtension={[\".jpg\", \".jpeg\", \".gif\", \".png\", \".gif\", \".svg\"]}\n              maxFileSize={1048576}\n              fileSizeError=\" file size is too big\"\n          />\n  \t\t</div>\n\n\n\n\n  \t\t)\n  }\n\n }\n\n"]},"metadata":{},"sourceType":"module"}