{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/textPageTemplate.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'src/App/admin/helperComponents';\nimport PropTypes from 'prop-types';\n\nclass TextPageTemplate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageData = () => {\n      if (this.props.pageId) {\n        axios.get('/api/getPage', {\n          params: {\n            pageId: this.props.pageId,\n            pageType: 'text'\n          }\n        }).then(response => {\n          this.setState({\n            type: response.data.type,\n            name: response.data.title,\n            mainImage: response.data.imgUrl,\n            description: response.data.mainText,\n            secondaryText: response.data.subText\n          });\n        });\n      }\n    };\n\n    this.state = {\n      type: '',\n      mainImage: '',\n      name: '',\n      description: '',\n      secondaryText: ''\n    };\n    this.getPageData = this.getPageData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPageData();\n  }\n\n  render() {\n    if (this.state.type === 'about') {\n      return /*#__PURE__*/React.createElement(AboutPageTemplate, {\n        image: this.state.mainImage,\n        title: this.state.name,\n        mainText: this.state.description,\n        subText: this.state.secondaryText,\n        createPage: this.props.createPage,\n        backPage: this.props.backPage,\n        pageId: this.props.pageId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(OtherPageTemplate, {\n        title: this.state.name,\n        image: this.state.mainImage,\n        mainText: this.state.description,\n        createPage: this.props.createPage,\n        backPage: this.props.backPage,\n        pageId: this.props.pageId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      });\n    }\n  }\n\n}\n\nTextPageTemplate.propTypes = {\n  pageId: PropTypes.string,\n  createPage: PropTypes.bool,\n  backPage: PropTypes.func\n};\n\nclass AboutPageTemplate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      type: 'about',\n      imgName: this.props.image,\n      imageFile: '',\n      title: this.props.title,\n      mainText: this.props.mainText,\n      subText: this.props.subText ? this.props.subText : \"\",\n      createPage: this.props.createPage\n    };\n    this.updateImage = this.updateImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  updateImage(file, name) {\n    console.log(name);\n    this.setState({\n      imgName: name,\n      imageFile: file\n    });\n  }\n\n  onSubmit() {\n    const {\n      createPage,\n      imageFile,\n      ...PageData\n    } = this.state;\n    const imageData = new FormData();\n    imageData.append('file', imageFile);\n    axios.post(\"/upload/uploadImages\", imageData).then(res => {\n      // then print response status\n      console.log(`Image upload returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n\n    if (this.state.createPage) {\n      axios.post('/upload/uploadTextPage', PageData).then(response => console.log(response));\n    } else {\n      axios.post('/edit/editTextPage', {\n        id: this.props.pageId,\n        ...PageData\n      }).then(response => console.log(response));\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"pageForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      backPage: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, \"Profile Picture:\"), /*#__PURE__*/React.createElement(UploadImage, {\n      changeImage: this.updateImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, \"Page Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"smallPageField\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"mainText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, \"Your Artist Statement:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"pageField\",\n      name: \"mainText\",\n      value: this.state.mainText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"subText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, \"Your Resume (optional):\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"pageField\",\n      name: \"subText\",\n      value: this.state.subText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editSubmitButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, \" Submit \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nAboutPageTemplate.propTypes = {\n  image: PropTypes.string,\n  mainText: PropTypes.string,\n  subText: PropTypes.string,\n  pageId: PropTypes.string,\n  createPage: PropTypes.bool,\n  backPage: PropTypes.func\n};\n\nclass OtherPageTemplate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      type: 'other',\n      imgName: this.props.image,\n      imageFile: '',\n      title: this.props.title,\n      mainText: this.props.mainText,\n      createPage: this.props.createPage\n    };\n    this.updateImage = this.updateImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  updateImage(file, name) {\n    this.setState({\n      imgName: name,\n      imageFile: file\n    });\n  }\n\n  onSubmit() {\n    const {\n      createPage,\n      imageFile,\n      ...PageData\n    } = this.state;\n    const imageData = new FormData();\n    imageData.append('file', imageFile);\n    axios.post(\"/upload/uploadSingleImage\", imageData).then(res => {\n      // then print response status\n      console.log(`Image upload returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n\n    if (this.state.createPage) {\n      axios.post('/upload/uploadTextPage', PageData).then(response => console.log(response));\n    } else {\n      axios.post('/edit/editTextPage', {\n        id: this.props.pageId,\n        ...PageData\n      }).then(response => console.log(response));\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      backPage: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"pageImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }\n    }, \"Main Image (optional):\"), /*#__PURE__*/React.createElement(UploadImage, {\n      changeImage: this.updateImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }\n    }, \"Page Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"smallPageField\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"mainText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }\n    }, \"Page Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"pageField\",\n      name: \"mainText\",\n      value: this.state.mainText,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editSubmitButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }\n    }, \" Create \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }\n    }, \" Cancel \")));\n  }\n\n}\n\nOtherPageTemplate.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  mainText: PropTypes.string,\n  pageId: PropTypes.string,\n  createPage: PropTypes.bool,\n  backPage: PropTypes.func\n};\nexport { TextPageTemplate, AboutPageTemplate, OtherPageTemplate };","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/textPageTemplate.js"],"names":["React","Component","axios","BackButton","UploadImage","PropTypes","TextPageTemplate","constructor","props","getPageData","pageId","get","params","pageType","then","response","setState","type","data","name","title","mainImage","imgUrl","description","mainText","secondaryText","subText","state","bind","componentDidMount","render","createPage","backPage","propTypes","string","bool","func","AboutPageTemplate","handleChange","event","target","value","imgName","image","imageFile","updateImage","onSubmit","file","console","log","PageData","imageData","FormData","append","post","res","statusText","catch","err","id","OtherPageTemplate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'src/App/admin/helperComponents';\nimport PropTypes from 'prop-types';\n\nclass TextPageTemplate extends Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttype:'',\n\t\t\tmainImage:'',\n\t\t\tname:'',\n\t\t\tdescription:'',\n\t\t\tsecondaryText:''\n\t\t}\n\t\tthis.getPageData=this.getPageData.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.getPageData();\n\t}\n\n    getPageData = () =>{\n    \tif (this.props.pageId){\n\t        axios.get('/api/getPage', { params: {pageId: this.props.pageId, pageType:'text' } })\n\t        .then((response) => {\n\t          this.setState({\n\t          \ttype:response.data.type,\n\t            name:response.data.title, \n\t            mainImage:response.data.imgUrl, \n\t            description:response.data.mainText, \n\t            secondaryText:response.data.subText, \n\t            });\n\t        });\n\t    }\n    }\n\n\n\trender() {\n\t\tif (this.state.type==='about'){\n\t\t\treturn(<AboutPageTemplate \n\t\t\t\timage={this.state.mainImage}\n\t\t\t\ttitle={this.state.name}\n\t\t\t\tmainText={this.state.description}\n\t\t\t\tsubText={this.state.secondaryText}\n\t\t\t\tcreatePage={this.props.createPage}\n\t\t\t\tbackPage={this.props.backPage}\n\t\t\t\tpageId={this.props.pageId}\n\t\t\t\t/>)\n\t\t} else {\n\t\t\treturn(<OtherPageTemplate \n\t\t\t\ttitle={this.state.name}\n\t\t\t\timage={this.state.mainImage}\n\t\t\t\tmainText={this.state.description}\n\t\t\t\tcreatePage={this.props.createPage}\n\t\t\t\tbackPage={this.props.backPage}\n\t\t\t\tpageId={this.props.pageId}\n\t\t\t\t/>)\n\t\t}\n\t}\n}\n\nTextPageTemplate.propTypes ={\n\tpageId:PropTypes.string,\n\tcreatePage:PropTypes.bool,\n\tbackPage:PropTypes.func\n}\n\n\nclass AboutPageTemplate extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttype:'about',\n\t\t\timgName:this.props.image,\n\t\t\timageFile:'',\n\t\t\ttitle:this.props.title,\n\t\t\tmainText:this.props.mainText,\n\t\t\tsubText:(this.props.subText ? this.props.subText : \"\"),\n\t\t\tcreatePage:this.props.createPage,\n\t\t}\n\t\tthis.updateImage=this.updateImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n\t}\n\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]:event.target.value})\n\t}\n\n\tupdateImage(file, name){\n\t\tconsole.log(name);\n\t\tthis.setState({imgName:name, imageFile:file})\n\t}\n\n\tonSubmit(){\n\t\tconst {createPage, imageFile, ...PageData} = this.state;\n\t    const imageData = new FormData();\n\t    imageData.append('file', imageFile);\n\t    axios.post(\"/upload/uploadImages\", imageData).then(res => { // then print response status\n\t        console.log(`Image upload returned: ${res.statusText}`)\n\t    }).catch(err => console.log(err));\n\n\t\tif (this.state.createPage) { \n\t\t\taxios.post('/upload/uploadTextPage', PageData).then((response)=>console.log(response))\n\t\t} else {\n\t\t\taxios.post('/edit/editTextPage', {id:this.props.pageId, ...PageData}).then((response)=>console.log(response))\n\t\t};\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className='pageEditor'>\n\t\t\t\t<form className='pageForm'>\n\t\t\t\t\t<BackButton backPage={this.props.backPage}/>\n\t\t\t\t\t<div className='inputGroup'>\n\t\t\t\t\t\t<label className='inputLabel'>Profile Picture:</label>\n\t\t\t\t\t\t<UploadImage changeImage={this.updateImage} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='inputGroup'>\n\t\t\t\t\t\t<label className='inputLabel' htmlFor='title'>Page Title:</label>\n\t\t\t\t\t\t<input type='text' className='smallPageField' name='title' \n\t\t\t\t\t\t\tvalue={this.state.title} \n\t\t\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='inputGroup'>\n\t\t\t\t\t\t<label className='inputLabel' htmlFor='mainText'>Your Artist Statement:</label>\n\t\t\t\t\t\t<textarea className='pageField' name='mainText' \n\t\t\t\t\t\t\tvalue={this.state.mainText} \n\t\t\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='inputGroup'>\n\t\t\t\t\t\t<label className='inputLabel' htmlFor='subText'>Your Resume (optional):</label>\n\t\t\t\t\t\t<textarea className='pageField' name='subText' \n\t\t\t\t\t\t\tvalue={this.state.subText} \n\t\t\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='editSubmitButtons'>\n\t\t\t\t\t\t<button type='button' className='editSubmitButton' onClick={this.onSubmit}> Submit </button>\n\t\t\t\t\t\t<button type='button' className='editSubmitButton' onClick={this.props.backPage}> \n\t\t\t\t\t\t\tCancel \n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nAboutPageTemplate.propTypes={\n\timage:PropTypes.string,\n\tmainText:PropTypes.string,\n\tsubText:PropTypes.string,\n\tpageId:PropTypes.string,\n\tcreatePage:PropTypes.bool,\n\tbackPage:PropTypes.func\n}\n\nclass OtherPageTemplate extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttype:'other',\n\t\t\timgName:this.props.image,\n\t\t\timageFile:'',\n\t\t\ttitle:this.props.title,\n\t\t\tmainText:this.props.mainText,\n\t\t\tcreatePage:this.props.createPage\n\n\t\t}\n\t\tthis.updateImage=this.updateImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]:event.target.value})\n\t}\n\n\tupdateImage(file, name){\n\t\tthis.setState({imgName:name, imageFile:file})\n\t}\n\n\tonSubmit(){\n\t\tconst {createPage, imageFile, ...PageData} = this.state;\n\t    const imageData = new FormData();\n\t    imageData.append('file', imageFile);\n\t    axios.post(\"/upload/uploadSingleImage\", imageData).then(res => { // then print response status\n\t        console.log(`Image upload returned: ${res.statusText}`)\n\t    }).catch(err => console.log(err));\n\n\t\tif (this.state.createPage) { \n\t\t\taxios.post('/upload/uploadTextPage', PageData).then((response)=>console.log(response))\n\t\t} else {\n\t\t\taxios.post('/edit/editTextPage', {id:this.props.pageId, ...PageData}).then((response)=>console.log(response))\n\t\t};\t\n\t}\n\n\trender(){\n\t\treturn(\n\t\t<div className='pageEditor'>\n\t\t\t<BackButton backPage={this.props.backPage}/>\n\t\t\t<div className='inputGroup'>\n\t\t\t\t<label className='inputLabel' htmlFor='pageImage'>Main Image (optional):</label>\n\t\t\t\t<UploadImage changeImage={this.updateImage} />\n\t\t\t</div>\n\t\t\t<div className='inputGroup'>\n\t\t\t\t<label className='inputLabel' htmlFor='title'>Page Title:</label>\n\t\t\t\t<input type='text' className='smallPageField' name='title' \n\t\t\t\t\tvalue={this.state.title} \n\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t</div>\n\t\t\t<div className='inputGroup'>\n\t\t\t\t<label className='inputLabel' htmlFor='mainText'>Page Description:</label>\n\t\t\t\t<textarea className='pageField' name='mainText' \n\t\t\t\t\tvalue={this.state.mainText} \n\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t</div>\n\t\t\t<div className='editSubmitButtons'>\n\t\t\t\t<button type='button' className='editSubmitButton' onClick={this.onSubmit}> Create </button>\n\t\t\t\t<button type='button' className='editSubmitButton' onClick={this.props.backPage}> Cancel </button>\n\t\t\t</div>\n\t\t</div>)\n\t}\n}\n\nOtherPageTemplate.propTypes={\n\timage:PropTypes.string,\n\ttitle:PropTypes.string,\n\tmainText:PropTypes.string,\n\tpageId:PropTypes.string,\n\tcreatePage:PropTypes.bool,\n\tbackPage:PropTypes.func\n}\n\n\nexport { TextPageTemplate, AboutPageTemplate, OtherPageTemplate };\n\n"]},"metadata":{},"sourceType":"module"}