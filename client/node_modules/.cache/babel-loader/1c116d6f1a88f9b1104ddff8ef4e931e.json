{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/uploadImages.js\";\n// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\"; // Font Awesome\n\nimport ImageEditor from \"App/admin/imageEditor\";\nimport ErrorBoundary from 'App/errorBoundary';\nimport { BackButton, UploadImage } from 'App/admin/helperComponents';\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addImage = (link, fileName) => {\n      let urls = this.state.imgURLs;\n      urls.push(link);\n      this.setState({\n        imgURLs: urls\n      });\n      const values = this.state.imageData;\n      values.push({\n        fileName: fileName,\n        title: '',\n        date: '',\n        size: '',\n        medium: '',\n        availability: '',\n        price: '',\n        portfolio: ''\n      });\n      this.setState({\n        imageData: values\n      }, () => {\n        if (this.state.imageData.length === this.state.selectedFiles.length) {\n          this.setState({\n            filesChosen: true\n          });\n        }\n      });\n    };\n\n    this.removeImage = index => {\n      let files = this.state.selectedFiles;\n      files.splice(index, 1);\n      this.setState({\n        selectedFiles: files\n      });\n    };\n\n    this.state = {\n      filesChosen: false,\n      selectedFiles: [],\n      imageData: [],\n      imgURLs: []\n    };\n    this.createImages = this.createImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n    this.returnToUserPanel = this.returnToUserPanel.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    if (this.state.filesChosen) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  returnToUserPanel() {\n    this.props.history.push('/userPanel');\n  }\n\n  createImages(e) {\n    this.setState({\n      selectedFiles: Array.from(e.target.files)\n    }, () => {\n      for (let i = 0; i < this.state.selectedFiles.length; i++) {\n        this.addImage(URL.createObjectURL(this.state.selectedFiles[i]), this.state.selectedFiles[i].name);\n      }\n    });\n  }\n\n  uploadImages(images) {\n    const data = new FormData();\n\n    for (var x = 0; x < this.state.selectedFiles.length; x++) {\n      data.append('file', this.state.selectedFiles[x]);\n    }\n\n    console.log(data);\n    axios.post(\"/upload/uploadImages\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Image upload returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n    axios.post(\"/upload/storeImagesInDB\", images, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Storing images in database returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    if (this.state.filesChosen) {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ImageEditor, {\n        imageURLs: this.state.imgURLs,\n        images: this.state.imageData,\n        removeImageFromParent: this.removeImage,\n        onSubmit: this.uploadImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageEditor main-upload-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BackButton, {\n        backPage: this.returnToUserPanel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pageHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, \" Upload Image(s) \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"imageUploader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: this.createImages,\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/uploadImages.js"],"names":["React","Component","axios","FaTrashAlt","ImageEditor","ErrorBoundary","BackButton","UploadImage","Contact","constructor","props","addImage","link","fileName","urls","state","imgURLs","push","setState","values","imageData","title","date","size","medium","availability","price","portfolio","length","selectedFiles","filesChosen","removeImage","index","files","splice","createImages","bind","uploadImages","returnToUserPanel","shouldComponentUpdate","history","e","Array","from","target","i","URL","createObjectURL","name","images","data","FormData","x","append","console","log","post","then","res","statusText","catch","err","render"],"mappings":"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","sourcesContent":["// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component} from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\";  // Font Awesome\nimport ImageEditor from \"App/admin/imageEditor\";\nimport ErrorBoundary from 'App/errorBoundary';\nimport { BackButton, UploadImage } from 'App/admin/helperComponents';\n\nexport default class Contact extends Component {\n  constructor(props) {\n\t\tsuper(props);\n    this.state ={\n      filesChosen:false,\n      selectedFiles: [],\n      imageData:[],\n      imgURLs:[]\n    };\n    this.createImages = this.createImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n    this.returnToUserPanel=this.returnToUserPanel.bind(this);\n  }\n\n  shouldComponentUpdate () {\n    if(this.state.filesChosen){\n      return false \n    } else {\n      return true\n    }\n  }\n\n  returnToUserPanel(){\n    this.props.history.push('/userPanel');\n  }\n\n  createImages(e) {\n    this.setState({\n      selectedFiles: Array.from(e.target.files),\n    }, ()=> { \n      for (let i =0; i<this.state.selectedFiles.length;i++){\n        this.addImage(URL.createObjectURL(this.state.selectedFiles[i]), this.state.selectedFiles[i].name);\n      }\n    });\n  }\n\n  addImage = (link, fileName) => {\n    let urls=this.state.imgURLs;\n    urls.push(link);\n    this.setState({imgURLs: urls})\n      const values = this.state.imageData;\n      values.push({\n          fileName:fileName,\n          title:'',\n          date:'',\n          size:'',\n          medium:'',\n          availability:'',\n          price:'',\n          portfolio:''\n        });\n\n      this.setState({imageData:values}, ()=>{\n        if (this.state.imageData.length===this.state.selectedFiles.length) {\n          this.setState({filesChosen:true});\n        }\n      });\n  };\n\n  removeImage = (index) => {\n    let files = this.state.selectedFiles;\n    files.splice(index, 1);\n    this.setState({selectedFiles:files});\n  };\n\n  uploadImages(images) {\n    const data = new FormData();\n    for(var x = 0; x<this.state.selectedFiles.length; x++) {\n           data.append('file', this.state.selectedFiles[x])\n    }\n    console.log(data);\n    axios.post(\"/upload/uploadImages\", data, { \n          // receive two    parameter endpoint url ,form data\n    }).then(res => { // then print response status\n        console.log(`Image upload returned: ${res.statusText}`)\n\n    }).catch(err => console.log(err));\n\n    axios.post(\"/upload/storeImagesInDB\", images, { \n          // receive two    parameter endpoint url ,form data\n    }).then(res => { // then print response status\n        console.log(`Storing images in database returned: ${res.statusText}`)\n    }).catch(err => console.log(err));\n  }\n\n  render(){\n    if(this.state.filesChosen)\n    {\n      return(        \n        <ErrorBoundary >\n          <ImageEditor imageURLs={this.state.imgURLs} \n            images={this.state.imageData} \n            removeImageFromParent={this.removeImage} \n            onSubmit={this.uploadImages}/>\n        </ErrorBoundary>\n      )\n    } else {\n      return(\n        <div className=\"pageEditor main-upload-container\"> \n          <BackButton backPage={this.returnToUserPanel}/>\n          <h3 className=\"pageHeader\"> Upload Image(s) </h3>\n          <div className=\"imageUploader\">\n              <input type=\"file\" className=\"form-control\" onChange={this.createImages} multiple />\n          </div>\n        </div>\n      )\n    }\n  }\n }\n\n"]},"metadata":{},"sourceType":"module"}