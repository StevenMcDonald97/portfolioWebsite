{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/editPages.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from 'react-icons/fa'; // Font Awesome\n\nimport defaultImage from 'App/Admin/exampleImages/default-image.png';\nimport { TextPageTemplate } from 'App/Admin/textPageTemplate';\nimport ListPageTemplate from 'App/Admin/listPageTemplate';\nimport PortfolioTemplate from 'App/Admin/portfolioTemplate';\nimport ErrorBoundary from 'App/errorBoundary'; // const d = new Date();\n\nexport default class EditPages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageList = () => {\n      axios.get('/api/getPageInfo').then(response => {\n        this.setState({\n          pages: response.data\n        });\n      });\n    };\n\n    this.state = {\n      pageData: {},\n      pages: [],\n      currentPageId: '',\n      currentPageStyle: 'none'\n    };\n    this.removePage = this.removePage.bind(this);\n    this.getPageList = this.getPageList.bind(this);\n    this.selectPage = this.selectPage.bind(this);\n    this.returnToPageSelection = this.returnToPageSelection.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPageList();\n  }\n\n  removePage(page) {\n    let pageValues = this.state.pages;\n\n    for (let i = 0; i < pageValues.length; i++) {\n      if (pageValues[i]._id === page._id) {\n        pageValues.splice(i, 1);\n      }\n    }\n\n    this.setState({\n      pages: pageValues\n    });\n    axios.post('/remove/removePage', page, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Removing page returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n  }\n\n  selectPage(event) {\n    this.setState({\n      currentPageId: event.target.name\n    }, () => {\n      for (let i = 0; i < this.state.pages.length; i++) {\n        if (this.state.pages[i]._id === this.state.currentPageId) this.setState({\n          currentPageStyle: this.state.pages[i].type\n        });\n      }\n    });\n  }\n\n  returnToPageSelection() {\n    this.setState({\n      currentPageStyle: 'none'\n    });\n  }\n\n  render() {\n    const PageList = this.state.pages.map(page => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageEditElement\",\n      key: page._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageEditTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, page.title, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      name: page._id,\n      className: \"pageEditorButton\",\n      onClick: this.selectPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"tooltip pageEditorButton\",\n      onClick: () => this.removePage(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FaTrashAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tooltiptext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }, \"Remove this Page\"))));\n\n    if (this.state.currentPageStyle === 'none') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"editingTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }\n      }, \"Select a Page to Edit\"), /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }\n      }, PageList));\n    } else if (this.state.currentPageStyle === 'text') {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(TextPageTemplate, {\n        defaultImage: defaultImage,\n        backPage: this.returnToPageSelection,\n        pageId: this.state.currentPageId,\n        createPage: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }\n      }));\n    } else if (this.state.currentPageStyle === 'portfolio') {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(PortfolioTemplate, {\n        defaultImage: defaultImage,\n        backPage: this.returnToPageSelection,\n        imageNames: [],\n        pageId: this.state.currentPageId,\n        createPage: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }\n      }));\n    } else if (this.state.currentPageStyle === 'list') {\n      return /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(ListPageTemplate, {\n        backPage: this.returnToPageSelection,\n        pageId: this.state.currentPageId,\n        createPage: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"editingTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }\n      }, \"Select a Page to Edit\"), /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }\n      }, PageList));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/editPages.js"],"names":["React","Component","axios","FaTrashAlt","defaultImage","TextPageTemplate","ListPageTemplate","PortfolioTemplate","ErrorBoundary","EditPages","constructor","props","getPageList","get","then","response","setState","pages","data","state","pageData","currentPageId","currentPageStyle","removePage","bind","selectPage","returnToPageSelection","componentDidMount","page","pageValues","i","length","_id","splice","post","res","console","log","statusText","catch","err","event","target","name","type","render","PageList","map","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from 'react-icons/fa';  // Font Awesome\nimport defaultImage from 'App/Admin/exampleImages/default-image.png';\nimport {TextPageTemplate } from 'App/Admin/textPageTemplate';\nimport ListPageTemplate from 'App/Admin/listPageTemplate';\nimport PortfolioTemplate from 'App/Admin/portfolioTemplate';\nimport ErrorBoundary from 'App/errorBoundary';\n// const d = new Date();\n\nexport default class EditPages extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tpageData:{},\n\t\t\tpages:[],\n\t\t\tcurrentPageId:'',\n\t\t\tcurrentPageStyle:'none'\n\n\t\t};\n\t\tthis.removePage=this.removePage.bind(this);\n\t\tthis.getPageList=this.getPageList.bind(this);\n\t\tthis.selectPage=this.selectPage.bind(this);\n\t\tthis.returnToPageSelection=this.returnToPageSelection.bind(this);\n\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getPageList();\n\t}\n\n\tgetPageList = () =>{\n\t\taxios.get('/api/getPageInfo').then((response) => {\n\t\t  this.setState({pages:response.data});\n\t\t});\n\t}\n\n\tremovePage(page){\n\t\tlet pageValues =this.state.pages;\n\n\t\tfor (let i=0; i<pageValues.length; i++){\n\t\t\tif (pageValues[i]._id===page._id){\n\t\t\t\tpageValues.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\tthis.setState({pages:pageValues});\n\t\t\n\t\taxios.post('/remove/removePage', page, { \n\t\t// receive two    parameter endpoint url ,form data\n\t\t}).then(res => { // then print response status\n\t\t\tconsole.log(`Removing page returned: ${res.statusText}`);\n\t\t}).catch(err => console.log(err));\n\n\t}\n\n\tselectPage(event){\n\n\t\tthis.setState({currentPageId:event.target.name},\n\t\t\t()=>{\n\t\t\t\tfor(let i=0; i< this.state.pages.length; i++){\n\t\t\t\t\tif (this.state.pages[i]._id===this.state.currentPageId) this.setState({currentPageStyle:this.state.pages[i].type});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\n\treturnToPageSelection(){\n\t\tthis.setState({currentPageStyle:'none'});\n\t}\n\t\n\n\trender() {\n\t\tconst PageList = this.state.pages.map((page) =>\n\t\t\t<div className='pageEditElement' key={page._id}> \n\t\t\t\t<div className='pageEditTitle'>{page.title} </div>\n\t\t\t\t<button type='button' name={page._id} className='pageEditorButton' onClick={this.selectPage}>\n\t\t\t\t\tEdit\n\t\t\t\t</button>\n\t\t\t\t<button type='button' className='tooltip pageEditorButton' onClick={()=>this.removePage(page)}>\n\t\t\t\t\t<FaTrashAlt />\n\t\t\t\t\t<span className='tooltiptext'>\n\t\t\t\t\t\tRemove this Page\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\n\t\tif (this.state.currentPageStyle==='none'){\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<h3 className='editingTitle'>Select a Page to Edit</h3>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t{ PageList }\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (this.state.currentPageStyle==='text'){\n\t\t\treturn( \n\t\t\t\t<ErrorBoundary>\n\n\t\t\t\t\t<TextPageTemplate\n\t\t\t\t\tdefaultImage={defaultImage} backPage={this.returnToPageSelection} \n\t\t\t\t\tpageId={this.state.currentPageId}\n\t\t\t\t\tcreatePage={false}/>\n\t\t\t\t</ErrorBoundary>\n\t\t\t);\n\t\t} else if (this.state.currentPageStyle==='portfolio'){\n\t\t\treturn( \n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<PortfolioTemplate \n\t\t\t\t\tdefaultImage={defaultImage} backPage={this.returnToPageSelection} \n\t\t\t\t\timageNames={[]}\n\t\t\t\t\tpageId={this.state.currentPageId}\n\t\t\t\t\tcreatePage={false}/>\n\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t);\n\t\t} else if (this.state.currentPageStyle==='list'){\n\t\t\treturn( \n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<ListPageTemplate backPage={this.returnToPageSelection} \n\t\t\t\t\tpageId={this.state.currentPageId}\n\t\t\t\t\tcreatePage={false}/>\n\t\t\t\t</ErrorBoundary>\n\t\t\t\t);\n\t\t} else { \n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<h3 className='editingTitle'>Select a Page to Edit</h3>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t{ PageList }\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} \n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}