{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editImages.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\"; // Font Awesome\n\nimport ImageEditor from \"App/securePages/imageEditor\";\n\nconst images = require.context('App/upload', true);\n\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeImage = index => {\n      deletedImages.push(this.state.images[index].fileName);\n      let values = [...this.state.images];\n      values.splice(index, 1);\n      this.setState({\n        images: values\n      });\n    };\n\n    this.state = {\n      images: [],\n      imgURLs: [],\n      deletedImages: []\n    };\n    this.loadImages = this.loadImages.bind(this);\n    this.removeImage = this.removeIamge.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  loadImages() {\n    /* fetch all images from database */\n    axios.get('/image/getAll').then(response => {\n      this.setState({\n        images: response.data\n      });\n      let values = this.state.imgURLs;\n      response.data.forEach((image, index) => {\n        valuespush(images(`./${image.fileName}`));\n      });\n      this.setState({\n        imgURLs: values\n      });\n    });\n  }\n\n  onSubmit(images) {\n    axios.post(\"/edit/editImages\", images, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Updating images in database returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n    axios.post(\"/remove/removeImages\", this.state.deletedImages, {}).then(res => {\n      // then print response status\n      console.log(`Deleteing images from database returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ImageEditor, {\n      imgURLs: this.state.imgURLs,\n      images: this.state.images,\n      removeImageFromParent: this.removeImage,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editImages.js"],"names":["React","Component","axios","FaTrashAlt","ImageEditor","images","require","context","Contact","constructor","props","removeImage","index","deletedImages","push","state","fileName","values","splice","setState","imgURLs","loadImages","bind","removeIamge","onSubmit","shouldComponentUpdate","get","then","response","data","forEach","image","valuespush","post","res","console","log","statusText","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\";  // Font Awesome\nimport ImageEditor from \"App/securePages/imageEditor\";\nconst images = require.context('App/upload', true);\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\timages: [],\n\t\t\timgURLs:[],\n\t\t\tdeletedImages:[]\n\t\t};\n\t\tthis.loadImages = this.loadImages.bind(this);\n\t\tthis.removeImage=this.removeIamge.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n   \t}\n\n   \tshouldComponentUpdate () {\n\t    return false \n\t}\n\n\tloadImages(){\n\t\t/* fetch all images from database */\n\t\taxios.get('/image/getAll')\n\t\t  .then((response) => {\n\t\t  \tthis.setState({images:response.data});\n\t\t  \tlet values=this.state.imgURLs;\n\t\t  \tresponse.data.forEach((image, index)=>{\n\t\t  \t\tvaluespush(images(`./${image.fileName}`))\n\t\t  \t})\n\t\t  \tthis.setState({imgURLs:values})\n\t\t});\n\t}\n\n\tremoveImage = (index) => {\n\t\tdeletedImages.push(this.state.images[index].fileName);\n\t\tlet values = [...this.state.images];\n\t\tvalues.splice(index, 1);\n\t\tthis.setState({images:values});\n\t};\n\n\tonSubmit(images){\n\t\taxios.post(\"/edit/editImages\", images, { \n\t          // receive two    parameter endpoint url ,form data\n\t    }).then(res => { // then print response status\n\t        console.log(`Updating images in database returned: ${res.statusText}`)\n\t    }).catch(err => console.log(err));\n\n\t    axios.post(\"/remove/removeImages\", this.state.deletedImages, {}).then(res => { // then print response status\n\t        console.log(`Deleteing images from database returned: ${res.statusText}`)\n\t    }).catch(err => console.log(err));\n\t}\n\n\trender(){\n\t    return(\n\t    \t<ImageEditor imgURLs={this.state.imgURLs} \n\t    \t\timages={this.state.images} \n\t    \t\tremoveImageFromParent={this.removeImage} \n\t    \t\tonSubmit={this.onSubmit}/>\n\t\t)\n\t}\n }\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}