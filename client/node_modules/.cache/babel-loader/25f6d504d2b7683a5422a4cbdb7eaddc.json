{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/portfolioTemplate.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'App/admin/helperComponents';\nimport PropTypes from \"prop-types\";\n\nconst images = require.context('App/upload', true);\n\nexport default class PortfolioTemplate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageData = () => {\n      if (this.props.pageId) {\n        axios.get('/api/getPage', {\n          params: {\n            pageId: this.props.pageId,\n            pageType: \"portfolio\"\n          }\n        }).then(response => {\n          this.setState({\n            title: response.data.title,\n            mainImage: response.data.mainImage,\n            description: response.data.description,\n            imageFileNames: response.data.imageFileNames\n          }, () => {\n            this.loadImages();\n          });\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      mainImage: \"\",\n      imageFile: '',\n      description: \"\",\n      imageFileNames: [],\n      allImages: [],\n      createPage: this.props.createPage\n    };\n    this.loadImages = this.loadImages.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addImageToPortfolio = this.addImageToPortfolio.bind(this);\n    this.removeImageFromPortfolio = this.removeImageFromPortfolio.bind(this);\n    this.getPageData = this.getPageData.bind(this);\n    this.updateImage = this.updateImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.pageId) {\n      this.getPageData();\n    } else {\n      this.loadImages();\n    }\n  }\n\n  updateImage(file, name) {\n    this.setState({\n      mainImage: name,\n      imageFile: file\n    });\n  }\n\n  loadImages() {\n    /* fetch all images from database */\n    axios.get('/image/getAll').then(response => {\n      this.setState({\n        allImages: response.data\n      });\n    });\n  }\n\n  addImageToPortfolio(imageName) {\n    console.log(`added image ${imageName} to portfolio`);\n    const values = [...this.state.imageFileNames];\n    values.push(imageName);\n    this.setState({\n      imageFileNames: values\n    });\n  }\n\n  removeImageFromPortfolio(imageName) {\n    console.log(`removed image ${imageName} from portfolio`);\n    const values = [...this.state.imageFileNames];\n    const index = values.indexOf(imageName);\n    values.splice(index, 1);\n    this.setState({\n      imageFileNames: values\n    });\n  }\n\n  onSubmit() {\n    const PageData = {\n      \"title\": this.state.title,\n      \"mainImage\": this.state.mainImage,\n      \"description\": this.state.description,\n      \"imageFileNames\": this.state.imageFileNames,\n      \"id\": this.props.pageId\n    };\n\n    if (this.state.createPage) {\n      axios.post('/upload/uploadPortfolio', PageData).then(response => console.log(response));\n    } else {\n      axios.post('/edit/editPortfolio', PageData).then(response => console.log(response));\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      backPage: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"pageForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }\n    }, \"Portfolio Thumbnail:\"), /*#__PURE__*/React.createElement(UploadImage, {\n      changeImage: this.updateImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }\n    }, \"Portfolio Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"smallPageField\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }\n    }, \"Optional Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"pageField\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"portfolioImageChoice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }\n    }, \"Choose images for this Portfolio \"), this.state.allImages.length !== 0 ? this.state.allImages.map(image => /*#__PURE__*/React.createElement(ImageCheckBox, {\n      key: image._id,\n      image: image,\n      title: this.state.title,\n      addToPortfolio: this.addImageToPortfolio,\n      removeFromPortfolio: this.removeImageFromPortfolio,\n      isInPortfolio: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 8\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }\n    }, \" Go to Add Images to upload images to your site \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editSubmitButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }\n    }, \" Submit \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }, \" Cancel \"))));\n  }\n\n}\nPortfolioTemplate.propTypes = {\n  pageId: PropTypes.string,\n  cratePage: PropTypes.string,\n  backPage: PropTypes.func.isRequired\n};\n/*create a component for each image to enable adding and removing from a portfolio*/\n\nfunction ImageCheckBox(props) {\n  const [checked, setChecked] = useState(props.title === props.image.portfolio && props.title !== \"\");\n  const toggle = React.useCallback(() => {\n    setChecked(!checked);\n\n    if (!checked) {\n      props.addToPortfolio(props.image.fileName);\n    } else {\n      props.removeFromPortfolio(props.image.fileName);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageSelection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: props.image.fileName,\n    checked: checked,\n    onChange: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(ImageErrorBoundary, {\n    src: `./${props.image.fileName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }, \" \", props.image.title, \" \"));\n}\n\nclass ImageErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    try {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: images(this.props.src),\n        className: \"checkImage\",\n        alt: \"Artwork Image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 3\n        }\n      });\n    } catch (e) {\n      console.log(e);\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: images('./defaultImage.png'),\n        className: \"checkImage\",\n        alt: \"This image did not load\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/portfolioTemplate.js"],"names":["React","Component","useState","axios","BackButton","UploadImage","PropTypes","images","require","context","PortfolioTemplate","constructor","props","getPageData","pageId","get","params","pageType","then","response","setState","title","data","mainImage","description","imageFileNames","loadImages","handleChange","event","target","name","value","state","imageFile","allImages","createPage","bind","addImageToPortfolio","removeImageFromPortfolio","updateImage","onSubmit","componentDidMount","file","imageName","console","log","values","push","index","indexOf","splice","PageData","post","render","backPage","length","map","image","_id","propTypes","string","cratePage","func","isRequired","ImageCheckBox","checked","setChecked","portfolio","toggle","useCallback","addToPortfolio","fileName","removeFromPortfolio","ImageErrorBoundary","hasError","componentDidCatch","error","info","src","e"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'App/admin/helperComponents';\nimport PropTypes from \"prop-types\";\nconst images = require.context('App/upload', true);\n\nexport default class PortfolioTemplate extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttitle:\"\",\n\t\t\tmainImage:\"\",\n\t\t\timageFile:'',\n\t\t\tdescription:\"\",\n\t\t\timageFileNames:[],\n\t\t\tallImages:[],\n\t\t\tcreatePage:this.props.createPage\n\t\t}\n\n\t\tthis.loadImages=this.loadImages.bind(this);\n\t\tthis.handleChange=this.handleChange.bind(this);\n\t\tthis.addImageToPortfolio=this.addImageToPortfolio.bind(this);\n\t\tthis.removeImageFromPortfolio=this.removeImageFromPortfolio.bind(this);\n\t\tthis.getPageData=this.getPageData.bind(this);\n\t\tthis.updateImage=this.updateImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tif (this.props.pageId){\n\t\t\tthis.getPageData();\n\t\t} else {\n\t\t\tthis.loadImages()\n\t\t}\n\t}\n\n    getPageData = () =>{\n\n    \tif (this.props.pageId){\n\t        axios.get('/api/getPage', { params: {pageId: this.props.pageId, pageType:\"portfolio\" } })\n\t        .then((response) => {\n\t          this.setState({\n\t            title:response.data.title, \n\t            mainImage:response.data.mainImage, \n\t            description:response.data.description, \n\t            imageFileNames:response.data.imageFileNames, \n\t            }, ()=>{ this.loadImages()});\n\t        });\n\t    }\n    }\n\n\tupdateImage(file, name){\n\t\tthis.setState({mainImage:name, imageFile:file})\n\t}\n\n\tloadImages(){\n\t\t/* fetch all images from database */\n\t\taxios.get('/image/getAll')\n\t\t  .then((response) => {\n\t\t  \tthis.setState({allImages:response.data})\n\t\t  });\n\t}\n\n\taddImageToPortfolio(imageName){\n\t\tconsole.log(`added image ${imageName} to portfolio`);\n\t\tconst values = [...this.state.imageFileNames];\n\t\tvalues.push(imageName);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\tremoveImageFromPortfolio(imageName){\n\t\tconsole.log(`removed image ${imageName} from portfolio`);\n \t\tconst values = [...this.state.imageFileNames];\n \t\tconst index = values.indexOf(imageName);\n\t\tvalues.splice(index,1);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]:event.target.value})\n\t}\n\n\tonSubmit(){\n\t\tconst PageData={\"title\":this.state.title, \"mainImage\":this.state.mainImage, \n\t\t\t\"description\":this.state.description, \"imageFileNames\":this.state.imageFileNames,\n\t\t\t\"id\":this.props.pageId};\n\t\tif (this.state.createPage) { \n\t\t\taxios.post('/upload/uploadPortfolio', PageData).then((response)=>console.log(response))\n\t\t} else {\n\t\t\taxios.post('/edit/editPortfolio', PageData).then((response)=>console.log(response))\n\t\t};\t\n\t}\n\n\n\n\trender(){\n\n\t\treturn(\n\t\t<div className=\"pageEditor\">\n\t\t\t<BackButton backPage={this.props.backPage}/>\n\t\t\t<form className=\"pageForm\">\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\">Portfolio Thumbnail:</label>\n\t\t\t\t\t<UploadImage changeImage={this.updateImage} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"name\">Portfolio Title:</label>\n\t\t\t\t\t<input type=\"text\" className=\"smallPageField\" name=\"title\" \n\t\t\t\t\t\tvalue={this.state.title} \n\t\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"description\">Optional Description:</label>\n\t\t\t\t\t<textarea className=\"pageField\" \n\t\t\t\t\t\tname=\"description\" \n\t\t\t\t\t\tvalue={this.state.description} \n\t\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"portfolioImageChoice\">\n\t\t\t\t\t<h3>Choose images for this Portfolio </h3>\n\t\t\t\t\t{ this.state.allImages.length !== 0 \n\t\t\t\t\t\t? this.state.allImages.map((image) =>(\n\t\t\t\t\t\t\t<ImageCheckBox \n\t\t\t\t\t\t\t\tkey={image._id}\n\t\t\t\t\t\t\t\timage={image} \n\t\t\t\t\t\t\t\ttitle={this.state.title}\n\t\t\t\t\t\t\t\taddToPortfolio={this.addImageToPortfolio}\n\t\t\t\t\t\t\t\tremoveFromPortfolio={this.removeImageFromPortfolio}\n\t\t\t\t\t\t\t\tisInPortfolio={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t) : <div> Go to Add Images to upload images to your site </div>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editSubmitButtons\">\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.onSubmit}> Submit </button>\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.props.backPage}> Cancel </button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>)\n\t}\n}\n\nPortfolioTemplate.propTypes = {\n\tpageId:PropTypes.string,\n\tcratePage:PropTypes.string,\n\tbackPage:PropTypes.func.isRequired\n}\n\n/*create a component for each image to enable adding and removing from a portfolio*/\nfunction ImageCheckBox(props) {\n\tconst [checked, setChecked] = useState(props.title===props.image.portfolio && props.title!==\"\");\n  \tconst toggle = React.useCallback(() => {\n  \t\tsetChecked(!checked);\n  \t\tif (!checked) {\n  \t\t\tprops.addToPortfolio(props.image.fileName)\n  \t\t} else {\n  \t\t\tprops.removeFromPortfolio(props.image.fileName)\n  \t\t}\n  \t});\n\n\n\treturn (\t\t\t  \n\t\t<div className=\"imageSelection\">\n\t\t\t<input type=\"checkbox\" name={props.image.fileName} checked={checked} \n\t\t\t\tonChange={toggle}/>\n\t\t\t<ImageErrorBoundary src={`./${props.image.fileName}`}/>\n\t\t\t<div> {props.image.title} </div>\n\t\t</div>\n\t)\n\t    \n}\n\nclass ImageErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    try{\n      return (\n\t\t<img src={images(this.props.src)} className=\"checkImage\" alt={\"Artwork Image\"}/>\n      )\n    } catch (e){\n    \tconsole.log(e);\n\t    return (\n      \t\t<img src={images('./defaultImage.png')} className=\"checkImage\" alt=\"This image did not load\"/>\n\t    )\n\t}\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}