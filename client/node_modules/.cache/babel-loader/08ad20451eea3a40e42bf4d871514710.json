{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/portfolio.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nimport Modal from 'App/pages/modal';\nvar listOfImages = [];\n\nconst images = require.context('App/upload', true);\n\nexport default class Portfolio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageData = () => {\n      axios.get('/api/getPage', {\n        params: {\n          pageId: this.props.pageId,\n          pageType: \"portfolio\"\n        }\n      }).then(response => {\n        this.setState({\n          title: response.data.title,\n          description: response.data.description,\n          imageNames: response.data.images\n        }, () => this.getPortfolioImages());\n      });\n    };\n\n    this.getPortfolioImages = () => {\n      console.log(this.state.imageNames);\n      axios.get('/api/getPortfolioImages', {\n        params: {\n          imageNames: this.state.imageNames\n        }\n      }).then(response => {\n        listOfImages = response.data.images;\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        showMod: !this.state.showMod\n      });\n    };\n\n    this.state = {\n      title: '',\n      description: '',\n      imageNames: [],\n      showMod: false,\n      modalImage: {},\n      imageKey: -1\n    };\n    this.changeModalStateInfo = this.changeModalStateInfo.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.getPageData = this.getPageData.bind(this);\n    this.getPortfolioImages = this.getPortfolioImages.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPageData();\n  }\n\n  changeModalStateInfo(modalImage, modalKey) {\n    this.setState({\n      modalImage: modalImage,\n      imageKey: modalKey\n    });\n    console.log(this.state.imageKey);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, listOfImages.map((image, index) => /*#__PURE__*/React.createElement(Image, {\n      key: index,\n      url: image.fileName,\n      description: \"painting\",\n      title: image.title,\n      date: image.date,\n      size: image.size,\n      medium: image.medium,\n      availability: image.availability,\n      price: image.price,\n      changeModalStateInfo: this.changeModalStateInfo,\n      showModal: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(PortfolioModal, {\n      onClose: this.showModal,\n      show: this.state.showMod,\n      img: this.state.modalImage,\n      modalKey: this.state.imageKey,\n      changeModalStateInfo: this.changeModalStateInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nclass Image extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickImage = () => {\n      this.props.changeModalStateInfo(this.props.url, this.props.title, this.props.key);\n      this.props.showModal();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"portfolioImage\",\n      src: images(`./${this.props.url}`),\n      alt: this.props.description,\n      onClick: this.clickImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // a different modal component is used here because it needs to be able to \n// flip through images\n\n\nclass PortfolioModal extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.incrementImage = () => {\n      var newKey;\n      var newImage;\n\n      if (this.props.modalKey < listOfImages.length - 1) {\n        newKey = this.props.modalKey + 1;\n        newImage = listOfImages[newKey];\n        this.props.changeModalStateInfo(newImage, \"title\", newKey);\n      }\n    };\n\n    this.decrementImage = () => {\n      var newKey;\n      var newImage;\n\n      if (this.props.modalKey > 0) {\n        newKey = this.props.modalKey - 1;\n        newImage = listOfImages[newKey];\n        this.props.changeModalStateInfo(newImage, \"title\", newKey);\n      }\n    };\n  }\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-container inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow\",\n      onClick: () => this.decrementImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"\\u2190\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"zoomed-image\",\n      src: this.props.fileName,\n      alt: \"artwork\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"portfolioImgTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, this.props.img.title), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"portfolioImgInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, this.props.img.size ? this.props.img.size : \"\", \" \", this.props.img.medium ? this.props.img.medium : \"\", \" \", this.props.img.price ? this.props.img.price : \"\", \" \", this.props.img.date ? this.props.img.date : \"\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrow-container inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inline arrow\",\n      onClick: () => this.incrementImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, \"\\u2192\"))));\n  }\n\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/portfolio.js"],"names":["React","Component","PropTypes","axios","Modal","listOfImages","images","require","context","Portfolio","constructor","props","getPageData","get","params","pageId","pageType","then","response","setState","title","data","description","imageNames","getPortfolioImages","console","log","state","showModal","showMod","modalImage","imageKey","changeModalStateInfo","bind","componentDidMount","modalKey","render","map","image","index","fileName","date","size","medium","availability","price","Image","clickImage","url","key","PortfolioModal","onClose","e","incrementImage","newKey","newImage","length","decrementImage","show","img","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nimport Modal from 'App/pages/modal'\nvar listOfImages =[];\nconst images = require.context('App/upload', true);\n\nexport default class Portfolio extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title:'',\n            description:'',\n            imageNames:[],\n            showMod: false,\n            modalImage:{},\n            imageKey:-1\n          };\n        this.changeModalStateInfo = this.changeModalStateInfo.bind(this);\n        this.showModal=this.showModal.bind(this);\n        this.getPageData=this.getPageData.bind(this);\n        this.getPortfolioImages=this.getPortfolioImages.bind(this);\n    }\n\n    getPageData = () =>{\n        axios.get('/api/getPage', { params: {pageId: this.props.pageId, pageType:\"portfolio\" } })\n        .then((response) => {\n          this.setState({\n            title:response.data.title, \n            description:response.data.description, \n            imageNames:response.data.images, \n            }, ()=>this.getPortfolioImages());\n        });\n\n    }\n\n    getPortfolioImages = () => {\n        console.log(this.state.imageNames)\n        axios.get('/api/getPortfolioImages', { params: {imageNames:this.state.imageNames} })\n        .then((response)=>{\n            listOfImages=response.data.images\n        });\n    }\n\n    componentDidMount(){\n        this.getPageData();\n    }\n\n\n    changeModalStateInfo(modalImage, modalKey) {\n        this.setState({\n            modalImage: modalImage,\n            imageKey:modalKey\n        })\n        console.log(this.state.imageKey);\n    }\n\n    showModal = () => {\n        this.setState({\n            showMod: !this.state.showMod\n        });\n    };\n\n\n\n    \n    render(){\n        return(\n          <div className=\"row\">\n              {\n                listOfImages.map(\n                    (image, index) =>   \n                        <Image key={index} url={image.fileName} description=\"painting\" title={image.title} date={image.date} size={image.size} medium={image.medium} availability={image.availability} price={image.price} changeModalStateInfo={this.changeModalStateInfo} showModal={this.showModal}></Image>\n                )\n              }\n            <PortfolioModal onClose={this.showModal} show={this.state.showMod} img={this.state.modalImage} modalKey={this.state.imageKey} changeModalStateInfo={this.changeModalStateInfo}/>\n\n          </div>\n        )\n    }\n}\n\nclass Image extends Component {\n    clickImage = () => {\n        this.props.changeModalStateInfo(this.props.url, this.props.title, this.props.key);\n        this.props.showModal(); \n    }\n\n    render() {\n        return (\n            <div className=\"column\">\n                <div className=\"content\">\n                    <img className=\"portfolioImage\" src={images(`./${this.props.url}`)} alt={this.props.description} onClick = {this.clickImage}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n// a different modal component is used here because it needs to be able to \n// flip through images\nclass PortfolioModal extends Component {\n\n    onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n\n    incrementImage = () => {\n        var newKey;\n        var newImage;\n        if ((this.props.modalKey<listOfImages.length-1)){\n            newKey = this.props.modalKey+1;\n            newImage = listOfImages[newKey];\n            this.props.changeModalStateInfo(newImage, \"title\", newKey);\n        }\n    }\n\n    decrementImage = () => {\n        var newKey;\n        var newImage;\n        if ((this.props.modalKey>0)){\n            newKey = this.props.modalKey-1;\n            newImage = listOfImages[newKey];\n            this.props.changeModalStateInfo(newImage, \"title\", newKey);\n        }\n\n    }\n  \n    render() {\n        if (!this.props.show) {\n            return null;\n        }\n        return (\n            <div className=\"modal\" id=\"modal\">\n                <div className=\"modal-header\">\n                    <span className=\"close\" onClick={this.onClose}>&times;</span>\n                </div>\n                <div className=\"inner-modal\">\n                    <div className=\"arrow-container inline\">\n                        <div className=\"arrow\" onClick={()=>this.decrementImage()}>&larr;</div>\n                    </div>\n                    <div className=\"modal-content inline\">\n                        <div className=\"inline\">\n                            <img className=\"zoomed-image\" src={this.props.fileName} alt=\"artwork\"/>\n                            <h3 className=\"portfolioImgTitle\">\n                                {this.props.img.title}\n                            </h3>\n                            <h4 className=\"portfolioImgInfo\">\n                                { (this.props.img.size) ? this.props.img.size : \"\" } { (this.props.img.medium) ? this.props.img.medium : \"\"} {  (this.props.img.price) ? this.props.img.price : \"\" } {  (this.props.img.date) ? this.props.img.date : \"\" }\n                            </h4>\n\n                        </div>\n                    </div>\n                    <div className=\"arrow-container inline\">\n                        <div className=\"inline arrow\" onClick={()=>this.incrementImage()}>&rarr;</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    show: PropTypes.bool.isRequired\n  };"]},"metadata":{},"sourceType":"module"}