{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from 'App/admin/authentication/handleResponse';\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\nexport const authenticationService = {\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction login(email, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  };\n  return fetch(`/user/authenticate`, requestOptions).then(handleResponse).then(user => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('currentUser');\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/authentication/authenticationService.js"],"names":["BehaviorSubject","handleResponse","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","email","password","requestOptions","method","headers","body","stringify","fetch","then","user","setItem","next","removeItem"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,cAAT,QAA+B,yCAA/B;AAEA,MAAMC,kBAAkB,GAAG,IAAIF,eAAJ,CAAoBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB,CAA3B;AAEA,OAAO,MAAMC,qBAAqB,GAAG;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,MAFiC;AAGjCC,EAAAA,WAAW,EAAER,kBAAkB,CAACS,YAAnB,EAHoB;;AAIjC,MAAIC,gBAAJ,GAAwB;AAAE,WAAOV,kBAAkB,CAACW,KAA1B;AAAiC;;AAJ1B,CAA9B;;AAOP,SAASL,KAAT,CAAeM,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEhB,IAAI,CAACiB,SAAL,CAAe;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAHa,GAAvB;AAMA,SAAOM,KAAK,CAAE,oBAAF,EAAuBL,cAAvB,CAAL,CACFM,IADE,CACGrB,cADH,EAEFqB,IAFE,CAEGC,IAAI,IAAI;AACV;AACAlB,IAAAA,YAAY,CAACmB,OAAb,CAAqB,aAArB,EAAoCrB,IAAI,CAACiB,SAAL,CAAeG,IAAf,CAApC;AACArB,IAAAA,kBAAkB,CAACuB,IAAnB,CAAwBF,IAAxB;AAEA,WAAOA,IAAP;AACH,GARE,CAAP;AASH;;AAED,SAASd,MAAT,GAAkB;AACd;AACAJ,EAAAA,YAAY,CAACqB,UAAb,CAAwB,aAAxB;AACAxB,EAAAA,kBAAkB,CAACuB,IAAnB,CAAwB,IAAxB;AACH","sourcesContent":["import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from 'App/admin/authentication/handleResponse';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(email, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password })\n    };\n\n    return fetch(`/user/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            currentUserSubject.next(user);\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}"]},"metadata":{},"sourceType":"module"}