{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/portfolioTemplate.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'App/admin/helperComponents';\nimport PropTypes from \"prop-types\";\n\nconst images = require.context('App/upload', true);\n\nexport default class PortfolioTemplate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageData = () => {\n      if (this.props.pageId) {\n        axios.get('/api/getPage', {\n          params: {\n            pageId: this.props.pageId,\n            pageType: \"portfolio\"\n          }\n        }).then(response => {\n          this.setState({\n            title: response.data.title,\n            mainImage: response.data.mainImage,\n            description: response.data.description,\n            imageFileNames: response.data.imageFileNames\n          }, () => {\n            this.loadImages();\n          });\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      mainImage: \"\",\n      description: \"\",\n      imageFileNames: [],\n      allImages: [],\n      createPage: this.props.createPage\n    };\n    this.loadImages = this.loadImages.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addImageToPortfolio = this.addImageToPortfolio.bind(this);\n    this.removeImageFromPortfolio = this.removeImageFromPortfolio.bind(this);\n    this.getPageData = this.getPageData.bind(this);\n    this.updateImage = this.updateImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.pageId) {\n      this.getPageData();\n    } else {\n      this.loadImages();\n    }\n  }\n\n  updateImage(file) {\n    this.setState({\n      mainImage: URL.createObjectURL(file)\n    });\n  }\n\n  loadImages() {\n    /* fetch all images from database */\n    axios.get('/image/getAll').then(response => {\n      this.setState({\n        allImages: response.data\n      });\n    });\n  }\n\n  addImageToPortfolio(imageName) {\n    console.log(`added image ${imageName} to portfolio`);\n    const values = [...this.state.imageFileNames];\n    values.push(imageName);\n    this.setState({\n      imageFileNames: values\n    });\n  }\n\n  removeImageFromPortfolio(imageName) {\n    console.log(`removed image ${imageName} from portfolio`);\n    const values = [...this.state.imageFileNames];\n    const index = values.indexOf(imageName);\n    values.splice(index, 1);\n    this.setState({\n      imageFileNames: values\n    });\n  }\n\n  onSubmit() {\n    const PageData = {\n      \"title\": this.state.title,\n      \"mainImage\": this.state.mainImage,\n      \"description\": this.state.description,\n      \"imageFileNames\": this.state.imageFileNames,\n      \"id\": this.props.pageId\n    };\n\n    if (this.state.createPage) {\n      axios.post('/upload/uploadPortfolio', PageData).then(response => console.log(response));\n    } else {\n      axios.post('/edit/editPortfolio', PageData).then(response => console.log(response));\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      backPage: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"pageForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    }, \"Portfolio Thumbnail:\"), /*#__PURE__*/React.createElement(\"img\", {\n      name: \"mainImage\",\n      className: \"pageImage\",\n      src: this.state.mainImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(UploadImage, {\n      changeImage: this.updateImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }\n    }, \"Portfolio Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"smallPageField\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 6\n      }\n    }, \"Optional Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"pageField\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"portfolioImageChoice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }\n    }, \"Choose images for this Portfolio \"), this.state.allImages.length !== 0 ? this.state.allImages.map(image => /*#__PURE__*/React.createElement(ImageCheckBox, {\n      key: image._id,\n      image: image,\n      title: this.state.title,\n      addToPortfolio: this.addImageToPortfolio,\n      removeFromPortfolio: this.removeImageFromPortfolio,\n      isInPortfolio: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 8\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }\n    }, \" Go to Add Images to upload images to your site \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editSubmitButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 6\n      }\n    }, \" Submit \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }, \" Cancel \"))));\n  }\n\n}\nPortfolioTemplate.propTypes = {\n  pageId: PropTypes.string,\n  cratePage: PropTypes.string,\n  backPage: PropTypes.func.isRequired\n};\n/*create a component for each image to enable adding and removing from a portfolio*/\n\nfunction ImageCheckBox(props) {\n  const [checked, setChecked] = useState(props.title === props.image.portfolio && props.title !== \"\");\n  const toggle = React.useCallback(() => {\n    setChecked(!checked);\n\n    if (!checked) {\n      props.addToPortfolio(props.image.fileName);\n    } else {\n      props.removeFromPortfolio(props.image.fileName);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageSelection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: props.image.fileName,\n    checked: checked,\n    onChange: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"checkImage\",\n    src: images(`./${props.image.fileName}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }\n  }, \" \", props.image.title, \" \"));\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/admin/portfolioTemplate.js"],"names":["React","Component","useState","axios","BackButton","UploadImage","PropTypes","images","require","context","PortfolioTemplate","constructor","props","getPageData","pageId","get","params","pageType","then","response","setState","title","data","mainImage","description","imageFileNames","loadImages","handleChange","event","target","name","value","state","allImages","createPage","bind","addImageToPortfolio","removeImageFromPortfolio","updateImage","onSubmit","componentDidMount","file","URL","createObjectURL","imageName","console","log","values","push","index","indexOf","splice","PageData","post","render","backPage","length","map","image","_id","propTypes","string","cratePage","func","isRequired","ImageCheckBox","checked","setChecked","portfolio","toggle","useCallback","addToPortfolio","fileName","removeFromPortfolio"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'App/admin/helperComponents';\nimport PropTypes from \"prop-types\";\nconst images = require.context('App/upload', true);\n\nexport default class PortfolioTemplate extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttitle:\"\",\n\t\t\tmainImage:\"\",\n\t\t\tdescription:\"\",\n\t\t\timageFileNames:[],\n\t\t\tallImages:[],\n\t\t\tcreatePage:this.props.createPage\n\t\t}\n\n\t\tthis.loadImages=this.loadImages.bind(this);\n\t\tthis.handleChange=this.handleChange.bind(this);\n\t\tthis.addImageToPortfolio=this.addImageToPortfolio.bind(this);\n\t\tthis.removeImageFromPortfolio=this.removeImageFromPortfolio.bind(this);\n\t\tthis.getPageData=this.getPageData.bind(this);\n\t\tthis.updateImage=this.updateImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n\t}\n\n\tcomponentDidMount(){\n\t\tif (this.props.pageId){\n\t\t\tthis.getPageData();\n\t\t} else {\n\t\t\tthis.loadImages()\n\t\t}\n\t}\n\n    getPageData = () =>{\n\n    \tif (this.props.pageId){\n\t        axios.get('/api/getPage', { params: {pageId: this.props.pageId, pageType:\"portfolio\" } })\n\t        .then((response) => {\n\t          this.setState({\n\t            title:response.data.title, \n\t            mainImage:response.data.mainImage, \n\t            description:response.data.description, \n\t            imageFileNames:response.data.imageFileNames, \n\t            }, ()=>{ this.loadImages()});\n\t        });\n\t    }\n    }\n\n\tupdateImage(file){\n\t\tthis.setState({mainImage:URL.createObjectURL(file)})\n\t}\n\n\tloadImages(){\n\t\t/* fetch all images from database */\n\t\taxios.get('/image/getAll')\n\t\t  .then((response) => {\n\t\t  \tthis.setState({allImages:response.data})\n\t\t  });\n\t}\n\n\taddImageToPortfolio(imageName){\n\t\tconsole.log(`added image ${imageName} to portfolio`);\n\t\tconst values = [...this.state.imageFileNames];\n\t\tvalues.push(imageName);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\tremoveImageFromPortfolio(imageName){\n\t\tconsole.log(`removed image ${imageName} from portfolio`);\n \t\tconst values = [...this.state.imageFileNames];\n \t\tconst index = values.indexOf(imageName);\n\t\tvalues.splice(index,1);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]:event.target.value})\n\t}\n\n\tonSubmit(){\n\t\tconst PageData={\"title\":this.state.title, \"mainImage\":this.state.mainImage, \n\t\t\t\"description\":this.state.description, \"imageFileNames\":this.state.imageFileNames,\n\t\t\t\"id\":this.props.pageId};\n\t\tif (this.state.createPage) { \n\t\t\taxios.post('/upload/uploadPortfolio', PageData).then((response)=>console.log(response))\n\t\t} else {\n\t\t\taxios.post('/edit/editPortfolio', PageData).then((response)=>console.log(response))\n\t\t};\t\n\t}\n\n\n\n\trender(){\n\n\t\treturn(\n\t\t<div className=\"pageEditor\">\n\t\t\t<BackButton backPage={this.props.backPage}/>\n\t\t\t<form className=\"pageForm\">\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\">Portfolio Thumbnail:</label>\n\t\t\t\t\t<img name=\"mainImage\" className=\"pageImage\" src={this.state.mainImage}/>\n\t\t\t\t\t<UploadImage changeImage={this.updateImage} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"name\">Portfolio Title:</label>\n\t\t\t\t\t<input type=\"text\" className=\"smallPageField\" name=\"title\" \n\t\t\t\t\t\tvalue={this.state.title} \n\t\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"description\">Optional Description:</label>\n\t\t\t\t\t<textarea className=\"pageField\" \n\t\t\t\t\t\tname=\"description\" \n\t\t\t\t\t\tvalue={this.state.description} \n\t\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"portfolioImageChoice\">\n\t\t\t\t\t<h3>Choose images for this Portfolio </h3>\n\t\t\t\t\t{ this.state.allImages.length !== 0 \n\t\t\t\t\t\t? this.state.allImages.map((image) =>(\n\t\t\t\t\t\t\t<ImageCheckBox \n\t\t\t\t\t\t\t\tkey={image._id}\n\t\t\t\t\t\t\t\timage={image} \n\t\t\t\t\t\t\t\ttitle={this.state.title}\n\t\t\t\t\t\t\t\taddToPortfolio={this.addImageToPortfolio}\n\t\t\t\t\t\t\t\tremoveFromPortfolio={this.removeImageFromPortfolio}\n\t\t\t\t\t\t\t\tisInPortfolio={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t) : <div> Go to Add Images to upload images to your site </div>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editSubmitButtons\">\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.onSubmit}> Submit </button>\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.props.backPage}> Cancel </button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>)\n\t}\n}\n\nPortfolioTemplate.propTypes = {\n\tpageId:PropTypes.string,\n\tcratePage:PropTypes.string,\n\tbackPage:PropTypes.func.isRequired\n}\n\n/*create a component for each image to enable adding and removing from a portfolio*/\nfunction ImageCheckBox(props) {\n\tconst [checked, setChecked] = useState(props.title===props.image.portfolio && props.title!==\"\");\n  \tconst toggle = React.useCallback(() => {\n  \t\tsetChecked(!checked);\n  \t\tif (!checked) {\n  \t\t\tprops.addToPortfolio(props.image.fileName)\n  \t\t} else {\n  \t\t\tprops.removeFromPortfolio(props.image.fileName)\n  \t\t}\n  \t});\n\n\n\treturn (\t\t\t  \n\t\t<div className=\"imageSelection\">\n\t\t\t<input type=\"checkbox\" name={props.image.fileName} checked={checked} \n\t\t\t\tonChange={toggle}/>\n\t\t\t<img className=\"checkImage\" src={images(`./${props.image.fileName}`)}/>\n\t\t\t<div> {props.image.title} </div>\n\t\t</div>\n\t)\n\t    \n}"]},"metadata":{},"sourceType":"module"}