{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editImages.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\"; // Font Awesome\n\nimport ImageEditor from \"App/securePages/imageEditor\";\n\nconst images = require.context('App/upload', true);\n\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeImage = index => {\n      let deleted = this.state.deletedImages;\n      deleted.push(this.state.images[index].fileName);\n      this.setState({\n        deletedImages: values\n      });\n      let values = [...this.state.images];\n      values.splice(index, 1);\n      this.setState({\n        images: values\n      });\n    };\n\n    this.state = {\n      images: [],\n      imgURLs: [],\n      deletedImages: [],\n      finishedLoadingImages: false\n    };\n    this.loadImages = this.loadImages.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    return !this.state.finishedLoadingImages;\n  }\n\n  componentDidMount() {\n    this.loadImages();\n  }\n\n  loadImages() {\n    /* fetch all images from database */\n    axios.get('/image/getAll').then(response => {\n      this.setState({\n        images: response.data\n      });\n      let values = this.state.imgURLs;\n      response.data.forEach((image, index) => {\n        values.push(`/App/upload/${image.fileName}`);\n      });\n      this.setState({\n        imgURLs: values,\n        finishedLoadingImages: true\n      });\n    });\n  }\n\n  onSubmit(images) {\n    axios.post(\"/edit/editImages\", images, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(`Updating images in database returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n    axios.post(\"/remove/removeImages\", this.state.deletedImages, {}).then(res => {\n      // then print response status\n      console.log(`Deleteing images from database returned: ${res.statusText}`);\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ImageEditor, {\n      imageURLs: this.state.imgURLs,\n      images: this.state.images,\n      removeImageFromParent: this.removeImage,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editImages.js"],"names":["React","Component","axios","FaTrashAlt","ImageEditor","images","require","context","Contact","constructor","props","removeImage","index","deleted","state","deletedImages","push","fileName","setState","values","splice","imgURLs","finishedLoadingImages","loadImages","bind","onSubmit","shouldComponentUpdate","componentDidMount","get","then","response","data","forEach","image","post","res","console","log","statusText","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport axios from 'axios';\nimport { FaTrashAlt } from \"react-icons/fa\";  // Font Awesome\nimport ImageEditor from \"App/securePages/imageEditor\";\nconst images = require.context('App/upload', true);\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\timages: [],\n\t\t\timgURLs:[],\n\t\t\tdeletedImages:[],\n\t\t\tfinishedLoadingImages: false\n\t\t};\n\t\tthis.loadImages = this.loadImages.bind(this);\n\t\tthis.removeImage=this.removeImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n   \t}\n\n   \tshouldComponentUpdate () {\n\t    return !this.state.finishedLoadingImages;\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadImages();\n\t}\n\n\tloadImages(){\n\t\t/* fetch all images from database */\n\t\taxios.get('/image/getAll')\n\t\t  .then((response) => {\n\t\t  \tthis.setState({images:response.data});\n\t\t  \tlet values=this.state.imgURLs;\n\t\t  \tresponse.data.forEach((image, index)=>{\n\t\t  \t\tvalues.push(`/App/upload/${image.fileName}`);\n\t\t  \t})\n\t\t  \tthis.setState({imgURLs:values, finishedLoadingImages:true})\n\t\t});\n\t}\n\n\tremoveImage = (index) => {\n\t\tlet deleted=this.state.deletedImages;\n\t\tdeleted.push(this.state.images[index].fileName);\n\t\tthis.setState({deletedImages:values});\n\n\t\tlet values = [...this.state.images];\n\t\tvalues.splice(index, 1);\n\t\tthis.setState({images:values});\n\t};\n\n\tonSubmit(images){\n\t\taxios.post(\"/edit/editImages\", images, { \n\t          // receive two    parameter endpoint url ,form data\n\t    }).then(res => { // then print response status\n\t        console.log(`Updating images in database returned: ${res.statusText}`)\n\t    }).catch(err => console.log(err));\n\n\t    axios.post(\"/remove/removeImages\", this.state.deletedImages, {}).then(res => { // then print response status\n\t        console.log(`Deleteing images from database returned: ${res.statusText}`)\n\t    }).catch(err => console.log(err));\n\t}\n\n\trender(){\n\t    return(\n\t    \t<ImageEditor imageURLs={this.state.imgURLs} \n\t    \t\timages={this.state.images} \n\t    \t\tremoveImageFromParent={this.removeImage} \n\t    \t\tonSubmit={this.onSubmit}/>\n\t\t)\n\t}\n }\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}