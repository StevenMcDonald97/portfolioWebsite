{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/contact.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      errors: {}\n    };\n  }\n\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      message: ''\n    });\n  }\n\n  onChange(field, e) {\n    let fields = this.state.formData;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  handleValidation() {\n    const fields = this.state;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields.name) {\n      formIsValid = false;\n      errors['name'] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastPositionOfAt = fields[\"email\"].lastIndexOf('@');\n      let lastPositionOfPeriod = fields[\"email\"].lastIndexOf('.');\n\n      if (!(lastPositionOfAt < lastPositionOfPeriod && lastPositionOfAt > 0 && fields[\"email\"].indexOf('@@') == -1 && lastPositionOfPeriod > 2 && fields[\"email\"].length - lastPositionOfPeriod > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Must be a valid email address\";\n      }\n    }\n\n    if (!fields.message) {\n      formIsValid = false;\n      errors['message'] = \"Please enter a message\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.handleValidation();\n    axios({\n      method: \"POST\",\n      url: \"/email/send/\",\n      data: this.state\n    }).then(response => {\n      if (response.data.status === 'success') {\n        alert(\"Message Sent.\");\n        this.resetForm();\n      } else if (response.data.status === 'fail') {\n        alert(\"Message failed to send.\");\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contactForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"formTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Contact the Artist\"), /*#__PURE__*/React.createElement(\"form\", {\n      name: \"contactForm\",\n      onSubmit: this.handleSubmit.bind(this),\n      method: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"recipientName\",\n      className: \"formLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Your Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"formInput\",\n      value: this.state.formData.name,\n      onChange: this.onChange.bind(this, \"name\"),\n      placeholder: \"Please enter your name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, this.state.errors[\"name\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"recipient-email\",\n      className: \"formLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Your Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"formInput\",\n      value: this.state.formData.email,\n      onChange: this.onChange.bind(this, \"email\"),\n      placeholder: \"Please enter your email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, this.state.errors[\"email\"])), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"message-text\",\n      className: \"formLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Message:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"formInput formMessage\",\n      name: \"message\",\n      value: this.state.formData.message,\n      onChange: this.onChange.bind(this, \"message\"),\n      placeholder: \"Type your message...\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, this.state.errors[\"message\"]))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submitButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Send\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/pages/contact.js"],"names":["React","Component","axios","Contact","constructor","props","state","formData","name","email","message","errors","resetForm","setState","onChange","field","e","fields","target","value","handleValidation","formIsValid","lastPositionOfAt","lastIndexOf","lastPositionOfPeriod","indexOf","length","handleSubmit","event","preventDefault","method","url","data","then","response","status","alert","render","bind","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC7CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG;AACTC,QAAAA,IAAI,EAAC,EADI;AAETC,QAAAA,KAAK,EAAC,EAFG;AAGTC,QAAAA,OAAO,EAAC;AAHC,OADA;AAMXC,MAAAA,MAAM,EAAG;AANE,KAAb;AAQD;;AAGDC,EAAAA,SAAS,GAAE;AACT,SAAKC,QAAL,CAAc;AAACL,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAC,EAAjB;AAAqBC,MAAAA,OAAO,EAAC;AAA7B,KAAd;AACD;;AAGDI,EAAAA,QAAQ,CAACC,KAAD,EAAQC,CAAR,EAAU;AACd,QAAIC,MAAM,GAAG,KAAKX,KAAL,CAAWC,QAAxB;AACAU,IAAAA,MAAM,CAACF,KAAD,CAAN,GAAgBC,CAAC,CAACE,MAAF,CAASC,KAAzB;AACA,SAAKN,QAAL,CAAc;AAACI,MAAAA;AAAD,KAAd;AACH;;AAGDG,EAAAA,gBAAgB,GAAE;AAChB,UAAMH,MAAM,GAAG,KAAKX,KAApB;AACA,QAAIK,MAAM,GAAG,EAAb;AACA,QAAIU,WAAW,GAAG,IAAlB;;AAEA,QAAI,CAACJ,MAAM,CAACT,IAAZ,EAAiB;AACfa,MAAAA,WAAW,GAAG,KAAd;AACAV,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,iBAAjB;AACD;;AAED,QAAG,CAACM,MAAM,CAAC,OAAD,CAAV,EAAoB;AAClBI,MAAAA,WAAW,GAAG,KAAd;AACAV,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,iBAAlB;AACD;;AAED,QAAI,OAAOM,MAAM,CAAC,OAAD,CAAb,KAA2B,WAA/B,EAA2C;AACzC,UAAIK,gBAAgB,GAAGL,MAAM,CAAC,OAAD,CAAN,CAAgBM,WAAhB,CAA4B,GAA5B,CAAvB;AACA,UAAIC,oBAAoB,GAAGP,MAAM,CAAC,OAAD,CAAN,CAAgBM,WAAhB,CAA4B,GAA5B,CAA3B;;AACA,UAAG,EAAED,gBAAgB,GAAGE,oBAAnB,IAA2CF,gBAAgB,GAAG,CAA9D,IACEL,MAAM,CAAC,OAAD,CAAN,CAAgBQ,OAAhB,CAAwB,IAAxB,KAAiC,CAAC,CADpC,IACyCD,oBAAoB,GAAC,CAD9D,IAEGP,MAAM,CAAC,OAAD,CAAN,CAAgBS,MAAhB,GAAyBF,oBAA1B,GAAkD,CAFtD,CAAH,EAE6D;AAEvDH,QAAAA,WAAW,GAAC,KAAZ;AACAV,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,+BAAlB;AAED;AACN;;AACD,QAAI,CAACM,MAAM,CAACP,OAAZ,EAAoB;AAClBW,MAAAA,WAAW,GAAG,KAAd;AACAV,MAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,wBAApB;AACD;;AAED,SAAKE,QAAL,CAAc;AAACF,MAAAA,MAAM,EAAEA;AAAT,KAAd;AACA,WAAOU,WAAP;AAED;;AAEDM,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,SAAKT,gBAAL;AAEFlB,IAAAA,KAAK,CAAC;AACJ4B,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAC,cAFA;AAGJC,MAAAA,IAAI,EAAG,KAAK1B;AAHR,KAAD,CAAL,CAIG2B,IAJH,CAISC,QAAD,IAAY;AAClB,UAAIA,QAAQ,CAACF,IAAT,CAAcG,MAAd,KAAyB,SAA7B,EAAuC;AACrCC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACA,aAAKxB,SAAL;AACD,OAHD,MAGO,IAAGsB,QAAQ,CAACF,IAAT,CAAcG,MAAd,KAAyB,MAA5B,EAAmC;AACxCC,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AACF,KAXD;AAaD;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAM,MAAA,IAAI,EAAC,aAAX;AACE,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBW,IAAlB,CAAuB,IAAvB,CADZ;AAC0C,MAAA,MAAM,EAAC,MADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,eAAf;AAA+B,MAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAyC,MAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWC,QAAX,CAAoBC,IAApE;AACE,MAAA,QAAQ,EAAE,KAAKM,QAAL,CAAcwB,IAAd,CAAmB,IAAnB,EAAyB,MAAzB,CADZ;AAC8C,MAAA,WAAW,EAAC,wBAD1D;AACmF,MAAA,QAAQ,MAD3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAII;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKjC,KAAL,CAAWK,MAAX,CAAkB,MAAlB,CAA9B,CAJJ,CADJ,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,iBAAf;AAAiC,MAAA,SAAS,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAyC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,QAAX,CAAoBE,KAApE;AACE,MAAA,QAAQ,EAAE,KAAKK,QAAL,CAAcwB,IAAd,CAAmB,IAAnB,EAAyB,OAAzB,CADZ;AACgD,MAAA,WAAW,EAAC,yBAD5D;AACsF,MAAA,QAAQ,MAD9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAII;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKjC,KAAL,CAAWK,MAAX,CAAkB,OAAlB,CAA9B,CAJJ,CAPJ,eAaI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,cAAf;AAA8B,MAAA,SAAS,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAU,MAAA,SAAS,EAAC,uBAApB;AAA4C,MAAA,IAAI,EAAC,SAAjD;AAA2D,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,QAAX,CAAoBG,OAAtF;AACE,MAAA,QAAQ,EAAE,KAAKI,QAAL,CAAcwB,IAAd,CAAmB,IAAnB,EAAyB,SAAzB,CADZ;AACiD,MAAA,WAAW,EAAC,sBAD7D;AACoF,MAAA,QAAQ,MAD5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAII;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKjC,KAAL,CAAWK,MAAX,CAAkB,SAAlB,CAA9B,CAJJ,CAbJ,CAFF,eAsBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAtBF,CAFF,CADF;AA+BD;;AAlH4C","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nexport default class Contact extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      formData : {\n        name:'',\n        email:'',\n        message:''\n      },\n      errors : {}\n    }\n  }\n\n  \n  resetForm(){\n    this.setState({name: '', email:'', message:''})\n  }\n\n\n  onChange(field, e){         \n      let fields = this.state.formData;\n      fields[field] = e.target.value;        \n      this.setState({fields});\n  }\n\n\n  handleValidation(){\n    const fields = this.state;\n    let errors = {}; \n    let formIsValid = true;\n\n    if (!fields.name){\n      formIsValid = false;\n      errors['name'] = \"Cannot be empty\";\n    }\n\n    if(!fields[\"email\"]){\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\"){\n      let lastPositionOfAt = fields[\"email\"].lastIndexOf('@');\n      let lastPositionOfPeriod = fields[\"email\"].lastIndexOf('.');\n      if(!(lastPositionOfAt < lastPositionOfPeriod && lastPositionOfAt > 0 \n          && fields[\"email\"].indexOf('@@') == -1 && lastPositionOfPeriod>2 \n          && (fields[\"email\"].length - lastPositionOfPeriod) > 2)) {\n\n            formIsValid=false\n            errors[\"email\"] = \"Must be a valid email address\";\n\n          }\n    }\n    if (!fields.message){\n      formIsValid = false;\n      errors['message'] = \"Please enter a message\";\n    }\n\n    this.setState({errors: errors});\n    return formIsValid;\n\n  }\n\n  handleSubmit(event) {\n      event.preventDefault();\n      this.handleValidation();\n\n    axios({\n      method: \"POST\", \n      url:\"/email/send/\", \n      data:  this.state\n    }).then((response)=>{\n      if (response.data.status === 'success'){\n        alert(\"Message Sent.\"); \n        this.resetForm()\n      } else if(response.data.status === 'fail'){\n        alert(\"Message failed to send.\")\n      }\n    })\n\n  }\n\n  render(){\n    return(\n      <div className=\"contactForm\" >\n        <h2 className=\"formTitle\">Contact the Artist</h2>\n        <form name=\"contactForm\" \n          onSubmit={this.handleSubmit.bind(this)} method=\"post\">\n          <div className=\"formBody\">\n              <div className=\"formGroup\">\n                <label htmlFor=\"recipientName\" className=\"formLabel\">Your Name:</label>\n                <input type=\"text\" className=\"formInput\" value={this.state.formData.name} \n                  onChange={this.onChange.bind(this, \"name\")} placeholder=\"Please enter your name\" required/>\n                  <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\n              </div>\n              <div className=\"formGroup\">\n                <label htmlFor=\"recipient-email\" className=\"formLabel\">Your Email:</label>\n                <input type=\"text\" className=\"formInput\" value={this.state.formData.email} \n                  onChange={this.onChange.bind(this, \"email\")}  placeholder=\"Please enter your email\" required/>\n                  <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\n              </div>\n              <div className=\"formGroup\">\n                <label htmlFor=\"message-text\" className=\"formLabel\">Message:</label>\n                <textarea className=\"formInput formMessage\" name=\"message\" value={this.state.formData.message} \n                  onChange={this.onChange.bind(this, \"message\")} placeholder=\"Type your message...\" required></textarea>\n                  <span style={{color: \"red\"}}>{this.state.errors[\"message\"]}</span>\n              </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"submit\" className=\"submitButton\">Send</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}