{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/portfolioTemplate.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'App/securePages/helperComponents';\n\nconst images = require.context('App/upload', true);\n\nexport default class PortfolioPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      title: this.props.title,\n      mainImage: this.props.defaultImage,\n      description: this.props.description,\n      imageFileNames: this.props.iamgeNames,\n      allImages: []\n    };\n    this.loadImages = this.loadImages.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addImageToPortfolio = this.addImageToPortfolio.bind(this);\n    this.removeImageFromPortfolio = this.removeImageFromPortfolio.bind(this);\n    this.updateImage = this.updateImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  updateImage(file) {\n    this.setState({\n      mainImage: URL.createObjectURL(file)\n    });\n  }\n\n  loadImages() {\n    /* fetch all images from database */\n    axios.get('/image/getAll').then(response => {\n      this.setState({\n        allImages: response.data\n      });\n    });\n  }\n\n  addImageToPortfolio(imageName) {\n    console.log(`added image ${imageName} to portfolio`);\n    const values = [...this.state.imageFileNames];\n    values.push(imageName);\n    this.setState({\n      imageFileNames: values\n    });\n  }\n\n  removeImageFromPortfolio(imageName) {\n    console.log(`removed image ${imageName} from portfolio`);\n    const values = [...this.state.imageFileNames];\n    const index = values.indexOf(imageName);\n    values.splice(index, 1);\n    this.setState({\n      imageFileNames: values\n    });\n  }\n\n  onSubmit() {\n    const PageData = {\n      \"title\": this.state.title,\n      \"mainImage\": this.state.mainImage,\n      \"description\": this.state.description,\n      \"imageFileNames\": this.state.imageFileNames\n    };\n    axios.post('/upload/uploadPortfolio', PageData).then(response => console.log(response));\n  }\n\n  componentDidMount() {\n    this.loadImages();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      backPage: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"pageForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }, \"Portfolio Thumbnail:\"), /*#__PURE__*/React.createElement(\"img\", {\n      name: \"mainImage\",\n      className: \"pageImage\",\n      src: this.state.mainImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(UploadImage, {\n      changeImage: this.updateImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }\n    }, \"Portfolio Title:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"smallPageField\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"inputLabel\",\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, \"Optional Description:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"pageField\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"portfolioImageChoice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }\n    }, \"Choose images for this Portfolio \"), this.state.allImages.length !== 0 ? this.state.allImages.map(image => /*#__PURE__*/React.createElement(ImageCheckBox, {\n      key: image._id,\n      image: image,\n      addToPortfolio: this.addImageToPortfolio,\n      removeFromPortfolio: this.removeImageFromPortfolio,\n      isInPortfolio: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }\n    }, \" Go to Add Images to upload images to your site \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editSubmitButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, \" Create \"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"editSubmitButton\",\n      onClick: this.props.backPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }\n    }, \" Cancel \"))));\n  }\n\n}\n/*create a component for each image to enable adding and removing from a portfolio*/\n\nfunction ImageCheckBox(props) {\n  const [checked, setChecked] = useState(props.isInPortfolio);\n  const toggle = React.useCallback(() => {\n    setChecked(!checked);\n\n    if (!checked) {\n      props.addToPortfolio(props.image.fileName);\n    } else {\n      props.removeFromPortfolio(props.image.fileName);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"imageSelection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: props.image.fileName,\n    checked: checked,\n    onChange: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"checkImage\",\n    src: images(`./${props.image.fileName}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }\n  }, \" \", props.image.title, \" \"));\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/portfolioTemplate.js"],"names":["React","Component","useState","axios","BackButton","UploadImage","images","require","context","PortfolioPage","constructor","props","handleChange","event","setState","target","name","value","state","title","mainImage","defaultImage","description","imageFileNames","iamgeNames","allImages","loadImages","bind","addImageToPortfolio","removeImageFromPortfolio","updateImage","onSubmit","file","URL","createObjectURL","get","then","response","data","imageName","console","log","values","push","index","indexOf","splice","PageData","post","componentDidMount","render","backPage","length","map","image","_id","ImageCheckBox","checked","setChecked","isInPortfolio","toggle","useCallback","addToPortfolio","fileName","removeFromPortfolio"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport { BackButton, UploadImage } from 'App/securePages/helperComponents';\nconst images = require.context('App/upload', true);\n\nexport default class PortfolioPage extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state ={\n\t\t\ttitle:this.props.title,\n\t\t\tmainImage:this.props.defaultImage,\n\t\t\tdescription:this.props.description,\n\t\t\timageFileNames:this.props.iamgeNames,\n\t\t\tallImages:[]\n\t\t}\n\t\tthis.loadImages=this.loadImages.bind(this);\n\t\tthis.handleChange=this.handleChange.bind(this);\n\t\tthis.addImageToPortfolio=this.addImageToPortfolio.bind(this);\n\t\tthis.removeImageFromPortfolio=this.removeImageFromPortfolio.bind(this);\n\n\t\tthis.updateImage=this.updateImage.bind(this);\n\t\tthis.onSubmit=this.onSubmit.bind(this);\n\t}\n\n\tupdateImage(file){\n\t\tthis.setState({mainImage:URL.createObjectURL(file)})\n\t}\n\n\tloadImages(){\n\t\t/* fetch all images from database */\n\t\taxios.get('/image/getAll')\n\t\t  .then((response) => {\n\t\t  \tthis.setState({allImages:response.data})\n\t\t  });\n\t}\n\n\taddImageToPortfolio(imageName){\n\t\tconsole.log(`added image ${imageName} to portfolio`);\n\t\tconst values = [...this.state.imageFileNames];\n\t\tvalues.push(imageName);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\tremoveImageFromPortfolio(imageName){\n\t\tconsole.log(`removed image ${imageName} from portfolio`);\n \t\tconst values = [...this.state.imageFileNames];\n \t\tconst index = values.indexOf(imageName);\n\t\tvalues.splice(index,1);\n\t\tthis.setState({imageFileNames:values});\n\t}\n\n\thandleChange = (event) => {\n\t\tthis.setState({[event.target.name]:event.target.value})\n\t}\n\n\tonSubmit(){\n\t\tconst PageData={\"title\":this.state.title, \"mainImage\":this.state.mainImage, \n\t\t\t\"description\":this.state.description, \"imageFileNames\":this.state.imageFileNames};\n\t\taxios.post('/upload/uploadPortfolio', PageData).then((response)=>console.log(response));\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadImages();\n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t<div className=\"pageEditor\">\n\t\t\t<BackButton backPage={this.props.backPage}/>\n\t\t\t<form className=\"pageForm\">\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\">Portfolio Thumbnail:</label>\n\t\t\t\t\t<img name=\"mainImage\" className=\"pageImage\" src={this.state.mainImage}/>\n\t\t\t\t\t<UploadImage changeImage={this.updateImage} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"name\">Portfolio Title:</label>\n\t\t\t\t\t<input type=\"text\" className=\"smallPageField\" name=\"title\" \n\t\t\t\t\t\tvalue={this.state.title} \n\t\t\t\t\t\tonChange={this.handleChange}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputGroup\">\n\t\t\t\t\t<label className=\"inputLabel\" htmlFor=\"description\">Optional Description:</label>\n\t\t\t\t\t<textarea className=\"pageField\" \n\t\t\t\t\t\tname=\"description\" \n\t\t\t\t\t\tvalue={this.state.description} \n\t\t\t\t\t\tonChange={this.handleChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"portfolioImageChoice\">\n\t\t\t\t\t<h3>Choose images for this Portfolio </h3>\n\t\t\t\t\t{ this.state.allImages.length !== 0 \n\t\t\t\t\t\t? this.state.allImages.map((image) =>\n\t\t\t\t\t\t<ImageCheckBox \n\t\t\t\t\t\t\tkey={image._id}\n\t\t\t\t\t\t\timage={image} \n\t\t\t\t\t\t\taddToPortfolio={this.addImageToPortfolio}\n\t\t\t\t\t\t\tremoveFromPortfolio={this.removeImageFromPortfolio}\n\t\t\t\t\t\t\tisInPortfolio={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : <div> Go to Add Images to upload images to your site </div>}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editSubmitButtons\">\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.onSubmit}> Create </button>\n\t\t\t\t\t<button type=\"button\" className=\"editSubmitButton\" onClick={this.props.backPage}> Cancel </button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>)\n\t}\n}\n\n/*create a component for each image to enable adding and removing from a portfolio*/\nfunction ImageCheckBox(props) {\n\tconst [checked, setChecked] = useState(props.isInPortfolio);\n  \tconst toggle = React.useCallback(() => {\n  \t\tsetChecked(!checked);\n  \t\tif (!checked) {\n  \t\t\tprops.addToPortfolio(props.image.fileName)\n  \t\t} else {\n  \t\t\tprops.removeFromPortfolio(props.image.fileName)\n  \t\t}\n  \t});\n\n\n\treturn (\t\t\t  \n\t\t<div className=\"imageSelection\">\n\t\t\t<input type=\"checkbox\" name={props.image.fileName} checked={checked} \n\t\t\t\tonChange={toggle}/>\n\t\t\t<img className=\"checkImage\" src={images(`./${props.image.fileName}`)}/>\n\t\t\t<div> {props.image.title} </div>\n\t\t</div>\n\t)\n\t    \n}"]},"metadata":{},"sourceType":"module"}