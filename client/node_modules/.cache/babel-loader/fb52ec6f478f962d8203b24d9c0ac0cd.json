{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js\";\n// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ImageUploader from \"react-images-upload\";\n\nconst FileReader = require('filereader');\n\nexport default class Contact extends Component {\n  // image data is stored both in state and in a global variable \n  // to avoid complications from state updating asynchronously \n  constructor(props) {\n    super(props);\n    this.imageObj = [];\n    this.imageURLs = [];\n    this.imageNonStateData = [];\n\n    this.addImage = (link, file) => {\n      const values = [...this.imageNonStateData];\n      imageURLs.push(link);\n      values.push({\n        name: file.name,\n        title: '',\n        date: '',\n        size: '',\n        medium: '',\n        availability: '',\n        price: '',\n        portfolio: ''\n      });\n      this.imageNonStateData = values;\n      this.setState({\n        imageData: values\n      });\n    };\n\n    this.removeImage = index => {\n      if (index > -1) {\n        const values = [...this.imageNonStateData];\n        values.splice(index, 1);\n        this.imageNonStateData = values;\n        this.setState({\n          imageData: values\n        });\n        const newFiles = this.state.selectedFiles.splice(index, 1);\n        this.setState({\n          selectedFiles: newFiles\n        });\n        this.imageObj.splice(index, 1);\n      }\n    };\n\n    this.handleInputChange = (index, event) => {\n      const values = [...this.imageNonStateData];\n\n      if (event.target.name === \"title\") {\n        values[index].title = event.target.value;\n      } else if (event.target.name === \"date\") {\n        values[index].date = event.target.value;\n      } else if (event.target.name === \"size\") {\n        values[index].size = event.target.value;\n      } else if (event.target.name === \"medium\") {\n        values[index].medium = event.target.value;\n      } else if (event.target.name === \"availability\") {\n        values[index].availability = event.target.value;\n      } else if (event.target.name === \"price\") {\n        values[index].price = event.target.value;\n      } else {\n        values[index].portfolio = event.target.value;\n      }\n\n      this.imageNonStateData = values;\n      this.setState({\n        imageData: values\n      });\n    };\n\n    this.state = {\n      selectedFiles: [],\n      imageData: []\n    };\n    this.uploadImages = this.uploadImages.bind(this);\n    this.addImage = this.addImage.bind(this);\n    this.removeImage = this.removeImage.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  uploadImages(e) {\n    this.setState({\n      selectedFiles: Array.from(e.target.files)\n    }, () => console.log(this.state.selectedFiles));\n    this.imageObj = this.imageObj.concat(Array.from(e.target.files));\n\n    for (let i = 0; i < this.imageObj.length; i++) {\n      this.addImage(URL.createObjectURL(this.imageObj[i]), this.imageObj[i]);\n    }\n  }\n\n  onSubmit(e) {\n    console.log(this.state.imageData);\n    console.log(this.imageObj);\n    const data = new FormData();\n\n    for (var x = 0; x < this.imageObj.length; x++) {\n      data.append('file', this.imageObj[x]);\n    }\n\n    axios.post(\"/upload/uploadImages\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      console.log(res.statusText);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-upload-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"main-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 6\n      }\n    }, \" Upload an Image \"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, this.state.imageData.map((img, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editImageTag\",\n      key: `${img.url}~${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"editImageTag\",\n      src: img.url,\n      className: \"uploadImage\",\n      alt: \"...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"imageField\",\n      name: \"title\",\n      value: img.title,\n      placeholder: \"Title\",\n      onChange: event => this.handleInputChange(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"imageSmallField\",\n      name: \"date\",\n      value: img.date,\n      placeholder: \"Date\",\n      onChange: event => this.handleInputChange(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"imageSmallField\",\n      name: \"medium\",\n      value: img.medium,\n      placeholder: \"Medium\",\n      onChange: event => this.handleInputChange(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"imageSmallField\",\n      name: \"size\",\n      value: img.size,\n      placeholder: \"Size\",\n      onChange: event => this.handleInputChange(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"imageSmallField\",\n      name: \"price\",\n      value: img.price,\n      placeholder: \"Price\",\n      onChange: event => this.handleInputChange(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"imageField\",\n      name: \"availability\",\n      value: img.availability,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"forSale\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"For Sale\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"notForSale\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"Not For Sale\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"sold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Sold\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"other\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"Not Applicable\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"tooltip btn\",\n      onClick: () => this.removeImage(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash-o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"toolTipText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"Remove this Image\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      onChange: this.uploadImages,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"Upload\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/uploadImages.js"],"names":["React","Component","axios","ImageUploader","FileReader","require","Contact","constructor","props","imageObj","imageURLs","imageNonStateData","addImage","link","file","values","push","name","title","date","size","medium","availability","price","portfolio","setState","imageData","removeImage","index","splice","newFiles","state","selectedFiles","handleInputChange","event","target","value","uploadImages","bind","onSubmit","e","Array","from","files","console","log","concat","i","length","URL","createObjectURL","data","FormData","x","append","post","then","res","statusText","render","map","img","url"],"mappings":"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","sourcesContent":["// based on tutorial here: https://codeburst.io/image-uploading-using-react-and-node-to-get-the-images-up-c46ec11a7129\n\nimport React, { Component} from 'react';\nimport axios from 'axios';\nimport ImageUploader from \"react-images-upload\";\nconst FileReader = require('filereader');\n\nexport default class Contact extends Component {\n  imageObj=[];\n  imageURLs=[];\n  // image data is stored both in state and in a global variable \n  // to avoid complications from state updating asynchronously \n  imageNonStateData=[];\n\n  constructor(props) {\n\t\tsuper(props);\n      this.state ={\n        selectedFiles: [],\n        imageData:[]\n      };\n      this.uploadImages = this.uploadImages.bind(this);\n      this.addImage = this.addImage.bind(this);\n      this.removeImage = this.removeImage.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n   \t}\n\n\n  addImage = (link, file) => {\n    const values = [...this.imageNonStateData];\n    imageURLs.push(link)\n    values.push({\n        name:file.name,\n        title:'',\n        date:'',\n        size:'',\n        medium:'',\n        availability:'',\n        price:'',\n        portfolio:''\n      });\n    this.imageNonStateData=values;\n    this.setState({imageData:values});\n\n  };\n\n  removeImage = (index) => {\n    if(index > -1){\n      const values = [...this.imageNonStateData];\n      values.splice(index, 1);\n      this.imageNonStateData=values;\n      this.setState({imageData:values});\n      \n      const newFiles = this.state.selectedFiles.splice(index, 1);\n      this.setState({selectedFiles: newFiles})\n      this.imageObj.splice(index, 1);\n    }\n  };\n\n  handleInputChange = (index, event) => {\n    const values = [...this.imageNonStateData];\n    if (event.target.name === \"title\") {\n      values[index].title = event.target.value;\n    } else if (event.target.name === \"date\") {\n      values[index].date = event.target.value;\n    } else if (event.target.name === \"size\") {\n      values[index].size = event.target.value;\n    } else if (event.target.name === \"medium\") {\n      values[index].medium = event.target.value;\n    } else if (event.target.name === \"availability\") {\n      values[index].availability = event.target.value;\n    } else if (event.target.name === \"price\") {\n      values[index].price = event.target.value;\n    } else {\n      values[index].portfolio = event.target.value;\n    }\n    this.imageNonStateData=values;\n    this.setState({imageData:values});\n  };\n\n  uploadImages(e) {\n\n    this.setState({\n      selectedFiles: Array.from(e.target.files),\n    }, ()=>console.log(this.state.selectedFiles));\n\n    this.imageObj=this.imageObj.concat(Array.from(e.target.files));\n\n    for (let i = 0; i < this.imageObj.length; i++) {\n        this.addImage(URL.createObjectURL(this.imageObj[i]), this.imageObj[i])\n    }\n    \n  }\n\n  onSubmit(e) {\n    console.log(this.state.imageData);\n    console.log(this.imageObj);\n\n    const data = new FormData();\n       for(var x = 0; x<this.imageObj.length; x++) {\n           data.append('file', this.imageObj[x])\n       }\n\n      axios.post(\"/upload/uploadImages\", data, { \n          // receive two    parameter endpoint url ,form data\n      })\n\n    .then(res => { // then print response status\n        console.log(res.statusText)\n     })\n\n  }\n\n  render(){\n\n  \treturn(\n  \t\t<div className=\"main-upload-container\"> \n  \t\t\t<h3 className=\"main-heading\"> Upload an Image </h3>\n        <form onSubmit={this.onSubmit} >\n          {(this.state.imageData).map((img, index) => (\n            <div className=\"editImageTag\" key={`${img.url}~${index}`}>\n              <img className=\"editImageTag\" src={img.url} className=\"uploadImage\" alt=\"...\"/>\n              <input type=\"text\" className=\"imageField\" name=\"title\" value={ img.title } placeholder=\"Title\" onChange={event => this.handleInputChange(index, event)} />\n              <input type=\"text\" className=\"imageSmallField\" name=\"date\" value={ img.date } placeholder=\"Date\" onChange={event => this.handleInputChange(index, event)} />\n              <input type=\"text\" className=\"imageSmallField\" name=\"medium\" value={ img.medium } placeholder=\"Medium\" onChange={event => this.handleInputChange(index, event)} />\n              <input type=\"text\" className=\"imageSmallField\" name=\"size\" value={ img.size } placeholder=\"Size\" onChange={event => this.handleInputChange(index, event)} />\n              <input type=\"text\" className=\"imageSmallField\" name=\"price\" value={ img.price } placeholder=\"Price\" onChange={event => this.handleInputChange(index, event)} />\n              <select className=\"imageField\" name=\"availability\" value={img.availability} onChange={this.handleInputChange}>            \n                <option value=\"forSale\">For Sale</option>\n                <option value=\"notForSale\">Not For Sale</option>\n                <option value=\"sold\">Sold</option>\n                <option value=\"other\">Not Applicable</option>\n              </select>\n              <button type=\"button\" className=\"tooltip btn\" onClick={()=>this.removeImage(index)}>\n                <i className=\"fa fa-trash-o\"/> \n                <span className=\"toolTipText\">Remove this Image</span>\n              </button>\n            </div>\n          ))}\n            <div className=\"form-group\">\n                <input type=\"file\" className=\"form-control\" onChange={this.uploadImages} multiple />\n            </div>\n            <button type=\"button\" className=\"btn\" onClick={this.onSubmit}>Upload</button>\n          </form>\n\n  \t\t</div>\n  \t)\n  }\n }\n\n"]},"metadata":{},"sourceType":"module"}