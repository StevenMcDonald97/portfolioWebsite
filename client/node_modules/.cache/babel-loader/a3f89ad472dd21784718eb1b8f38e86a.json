{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editStyle.js\";\nimport React, { Component, useState } from 'react';\nimport { SketchPicker } from 'react-color';\n\nconst styleJson = require('../style.json');\n\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: '#fff',\n      websiteTitle: styleJson.text.WebsiteTitle,\n      pageHeader: styleJson.text.PageHeader,\n      mediumHeader: styleJson.text.MediumHeader,\n      smallHeader: styleJson.text.SmallHeader,\n      descriptionText: styleJson.text.DescriptionText,\n      navigationLink: styleJson.text.NavigatOtherLinkWebsiteTitle,\n      hoverOnLink: styleJson.text.HoverOnLink\n    };\n\n    this.onColorChangeComplete = color => {\n      this.setState({\n        selectedColor: color.hex\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      fetch('/style/changeStyle', {\n        method: 'POST',\n        body: JSON.stringify(this.state.styleObject),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.props.history.push('/');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        alert('Error changing website styling, please try again');\n      });\n    };\n\n    this.onCancel = event => {\n      alert(\"Style values were not saved\");\n      const newJson = JSON.parse(JSON.stringify(styleJson));\n      this.setState({\n        styleObject: newJson\n      });\n    };\n\n    this.onColorChangeComplete = this.onColorChangeComplete.bind(this);\n    this.onTextChange = this.onTextChange.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"EditorForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TextEditorFields, {\n      textData: this.state.styleObject.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"Save\",\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      value: \"Cancel\",\n      onClick: this.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nfunction TextStyle(props) {\n  const [fontSize, setFontSize] = useState(props.fontSize);\n\n  const handleChange = e => {\n    setFontSize(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }, \" \", props.name, \" \"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: 'color-' + props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, \" Change color\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: 'color-' + props.name,\n    value: props.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: 'size-' + props.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, \" Change font size\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    name: 'size-' + props.name,\n    min: \"10\",\n    max: \"44\",\n    onMouseUp: handleChange,\n    className: \"sizeSlider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }));\n}\n\nfunction TextEditorFields(props) {\n  // console.log(props);\n  const textStyleFields = Object.entries(props.textData).map(([key, value]) => /*#__PURE__*/React.createElement(TextStyle, {\n    name: key,\n    color: value.color,\n    fontSize: value.size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }));\n  return textStyleFields;\n}\n\nfunction ColorSelector(props) {\n  return /*#__PURE__*/React.createElement(SketchPicker, {\n    color: props.initColor,\n    onChangeComplete: this.onColorChangeComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/Users/Steven/CS-Projects/portfolio-template/portfolioWebsite/client/src/App/securePages/editStyle.js"],"names":["React","Component","useState","SketchPicker","styleJson","require","Contact","constructor","props","state","selectedColor","websiteTitle","text","WebsiteTitle","pageHeader","PageHeader","mediumHeader","MediumHeader","smallHeader","SmallHeader","descriptionText","DescriptionText","navigationLink","NavigatOtherLinkWebsiteTitle","hoverOnLink","HoverOnLink","onColorChangeComplete","color","setState","hex","onChange","e","target","id","value","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","styleObject","headers","then","res","status","history","push","error","Error","catch","err","console","alert","onCancel","newJson","parse","bind","onTextChange","render","TextStyle","fontSize","setFontSize","handleChange","name","TextEditorFields","textStyleFields","Object","entries","textData","map","key","size","ColorSelector","initColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,aAA7B;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,eAAe,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAMnBC,KANmB,GAMX;AACPC,MAAAA,aAAa,EAAE,MADR;AAEPC,MAAAA,YAAY,EAAEP,SAAS,CAACQ,IAAV,CAAeC,YAFtB;AAGPC,MAAAA,UAAU,EAAEV,SAAS,CAACQ,IAAV,CAAeG,UAHpB;AAIPC,MAAAA,YAAY,EAAEZ,SAAS,CAACQ,IAAV,CAAeK,YAJtB;AAKPC,MAAAA,WAAW,EAAEd,SAAS,CAACQ,IAAV,CAAeO,WALrB;AAMPC,MAAAA,eAAe,EAAEhB,SAAS,CAACQ,IAAV,CAAeS,eANzB;AAOPC,MAAAA,cAAc,EAAElB,SAAS,CAACQ,IAAV,CAAeW,4BAPxB;AAQPC,MAAAA,WAAW,EAAEpB,SAAS,CAACQ,IAAV,CAAea;AARrB,KANW;;AAAA,SAiBnBC,qBAjBmB,GAiBMC,KAAD,IAAW;AAClC,WAAKC,QAAL,CAAc;AAAElB,QAAAA,aAAa,EAAEiB,KAAK,CAACE;AAAvB,OAAd;AACA,KAnBkB;;AAAA,SAqBnBC,QArBmB,GAqBPC,CAAD,IAAQ;AACf,WAAKH,QAAL,CAAc;AAAE,SAACG,CAAC,CAACC,MAAF,CAASC,EAAV,GAAeF,CAAC,CAACC,MAAF,CAASE;AAA1B,OAAd;AACH,KAvBkB;;AAAA,SA2BnBC,QA3BmB,GA2BRC,KAAD,IAAU;AACnBA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,KAAK,CAAC,oBAAD,EAAsB;AAC1BC,QAAAA,MAAM,EAAC,MADmB;AAE1BC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe,KAAKjC,KAAL,CAAWkC,WAA1B,CAFqB;AAG1BC,QAAAA,OAAO,EAAC;AACP,0BAAgB;AADT;AAHkB,OAAtB,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAI;AACZ,YAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AACnB,eAAKvC,KAAL,CAAWwC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,SAFD,MAEO;AACN,gBAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUL,GAAG,CAACI,KAAd,CAAd;AACA,gBAAMA,KAAN;AACA;AACD,OAdD,EAeCE,KAfD,CAeOC,GAAG,IAAE;AACXC,QAAAA,OAAO,CAACJ,KAAR,CAAcG,GAAd;AACAE,QAAAA,KAAK,CAAC,kDAAD,CAAL;AACA,OAlBD;AAmBA,KAhDkB;;AAAA,SAkDnBC,QAlDmB,GAkDPpB,KAAD,IAAU;AACpBmB,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACA,YAAME,OAAO,GAAGhB,IAAI,CAACiB,KAAL,CAAWjB,IAAI,CAACC,SAAL,CAAetC,SAAf,CAAX,CAAhB;AACA,WAAKwB,QAAL,CAAc;AACbe,QAAAA,WAAW,EAACc;AADC,OAAd;AAGA,KAxDkB;;AAElB,SAAK/B,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BiC,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAsDDE,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE,KAAKpD,KAAL,CAAWkC,WAAX,CAAuB/B,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,KAAKuB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAE,KAAKqB,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,CADD,CADD;AAUA;;AAtE6C;;AA2E/C,SAASM,SAAT,CAAmBtD,KAAnB,EAAyB;AACxB,QAAM,CAACuD,QAAD,EAAWC,WAAX,IAA0B9D,QAAQ,CAACM,KAAK,CAACuD,QAAP,CAAxC;;AACA,QAAME,YAAY,GAAGlC,CAAC,IAAI;AACtBiC,IAAAA,WAAW,CAACjC,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX;AACH,GAFD;;AAIA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAM1B,KAAK,CAAC0D,IAAZ,MADD,eAEC;AAAO,IAAA,OAAO,EAAE,WAAU1D,KAAK,CAAC0D,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFD,eAGC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAE,WAAU1D,KAAK,CAAC0D,IAAzC;AAAgD,IAAA,KAAK,EAAE1D,KAAK,CAACmB,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAIC;AAAO,IAAA,OAAO,EAAE,UAASnB,KAAK,CAAC0D,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJD,eAKC;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAE,UAAS1D,KAAK,CAAC0D,IAAzC;AAAgD,IAAA,GAAG,EAAC,IAApD;AAAyD,IAAA,GAAG,EAAC,IAA7D;AAAkE,IAAA,SAAS,EAAED,YAA7E;AAA2F,IAAA,SAAS,EAAC,YAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD;AASA;;AAED,SAASE,gBAAT,CAA0B3D,KAA1B,EAAgC;AAC/B;AACA,QAAM4D,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAe9D,KAAK,CAAC+D,QAArB,EAA+BC,GAA/B,CAAmC,CAAC,CAACC,GAAD,EAAMvC,KAAN,CAAD,kBACvD,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEuC,GAAjB;AAAsB,IAAA,KAAK,EAAEvC,KAAK,CAACP,KAAnC;AAA0C,IAAA,QAAQ,EAAEO,KAAK,CAACwC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,CAAxB;AAGA,SAAON,eAAP;AACA;;AAID,SAASO,aAAT,CAAuBnE,KAAvB,EAA8B;AAE7B,sBACK,oBAAC,YAAD;AACE,IAAA,KAAK,EAAGA,KAAK,CAACoE,SADhB;AAEE,IAAA,gBAAgB,EAAG,KAAKlD,qBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL;AAOA","sourcesContent":["import React, { Component, useState } from 'react';\nimport { SketchPicker } from 'react-color'\nconst styleJson = require('../style.json');\n\nexport default class Contact extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.onColorChangeComplete = this.onColorChangeComplete.bind(this);\n\t\tthis.onTextChange = this.onTextChange.bind(this);\n\t}\n\n\tstate = {\n\t\tselectedColor: '#fff',\n\t\twebsiteTitle: styleJson.text.WebsiteTitle, \n\t\tpageHeader: styleJson.text.PageHeader,\n\t\tmediumHeader: styleJson.text.MediumHeader,\n\t\tsmallHeader: styleJson.text.SmallHeader,\n\t\tdescriptionText: styleJson.text.DescriptionText,\n\t\tnavigationLink: styleJson.text.NavigatOtherLinkWebsiteTitle,\n\t\thoverOnLink: styleJson.text.HoverOnLink\n\t}\n\n\tonColorChangeComplete = (color) => {\n\t\tthis.setState({ selectedColor: color.hex });\n\t}\n\n\tonChange = (e)  => {\n    \tthis.setState({ [e.target.id]: e.target.value });\n\t};\n\n\n\n\tonSubmit =(event) =>{\n\t\tevent.preventDefault();\n\t\tfetch('/style/changeStyle',{\n\t\t\tmethod:'POST',\n\t\t\tbody:JSON.stringify(this.state.styleObject),\n\t\t\theaders:{\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tif(res.status===200){\n\t\t\t\tthis.props.history.push('/');\n\t\t\t} else {\n\t\t\t\tconst error = new Error(res.error);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t})\n\t\t.catch(err=>{\n\t\t\tconsole.error(err);\n\t\t\talert('Error changing website styling, please try again');\n\t\t});\n\t}\n\n\tonCancel = (event) =>{\n\t\talert(\"Style values were not saved\");\n\t\tconst newJson = JSON.parse(JSON.stringify(styleJson));\n\t\tthis.setState({\n\t\t\tstyleObject:newJson\n\t\t})\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"Editor\">\n\t\t\t\t<form className=\"EditorForm\">\n\t\t\t\t\t<TextEditorFields textData={this.state.styleObject.text}/>\n\t\t\t\t\t<button type=\"submit\" value=\"Update\">Update</button>\n\t\t\t\t\t<button type=\"submit\" value=\"Save\" onClick={this.onSubmit}>Save</button>\n\t\t\t\t\t<button type=\"reset\" value=\"Cancel\" onClick={this.onCancel}>Cancel</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n\n}       \n\n\nfunction TextStyle(props){\n\tconst [fontSize, setFontSize] = useState(props.fontSize);\n\tconst handleChange = e => {\n\t    setFontSize(e.target.value);\n\t};\n\n\treturn(\n\t\t<div>\n\t\t\t<h2> {props.name} </h2>\n\t\t\t<label htmlFor={'color-'+ props.name }> Change color</label>\n\t\t\t<input type=\"text\" name={'color-'+ props.name } value={props.color}/>\n\t\t\t<label htmlFor={'size-'+ props.name }> Change font size</label>\n\t\t\t<input type=\"range\" name={'size-'+ props.name } min=\"10\" max=\"44\" onMouseUp={handleChange} className=\"sizeSlider\"/>\n\t\t</div>\n\t)\n}\n\nfunction TextEditorFields(props){\n\t// console.log(props);\n\tconst textStyleFields = Object.entries(props.textData).map(([key, value]) => \n\t    <TextStyle name={key} color={value.color} fontSize={value.size}/>\n\t);\n\treturn textStyleFields;\n}\n\n\n\nfunction ColorSelector(props) {\n\n\treturn (\n      <SketchPicker\n        color={ props.initColor }\n        onChangeComplete={ this.onColorChangeComplete }\n     />\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}